/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 34.0, "minX": 0.0, "maxY": 3311.0, "series": [{"data": [[0.0, 314.0], [0.1, 314.0], [0.2, 338.0], [0.3, 338.0], [0.4, 364.0], [0.5, 364.0], [0.6, 367.0], [0.7, 367.0], [0.8, 371.0], [0.9, 421.0], [1.0, 421.0], [1.1, 443.0], [1.2, 443.0], [1.3, 478.0], [1.4, 478.0], [1.5, 491.0], [1.6, 511.0], [1.7, 511.0], [1.8, 516.0], [1.9, 516.0], [2.0, 521.0], [2.1, 521.0], [2.2, 525.0], [2.3, 525.0], [2.4, 531.0], [2.5, 535.0], [2.6, 535.0], [2.7, 549.0], [2.8, 549.0], [2.9, 563.0], [3.0, 563.0], [3.1, 565.0], [3.2, 574.0], [3.3, 574.0], [3.4, 575.0], [3.5, 575.0], [3.6, 579.0], [3.7, 579.0], [3.8, 582.0], [3.9, 582.0], [4.0, 590.0], [4.1, 596.0], [4.2, 596.0], [4.3, 620.0], [4.4, 620.0], [4.5, 626.0], [4.6, 626.0], [4.7, 628.0], [4.8, 631.0], [4.9, 631.0], [5.0, 640.0], [5.1, 640.0], [5.2, 652.0], [5.3, 652.0], [5.4, 658.0], [5.5, 658.0], [5.6, 664.0], [5.7, 683.0], [5.8, 683.0], [5.9, 699.0], [6.0, 699.0], [6.1, 702.0], [6.2, 702.0], [6.3, 711.0], [6.4, 787.0], [6.5, 787.0], [6.6, 789.0], [6.7, 789.0], [6.8, 794.0], [6.9, 794.0], [7.0, 798.0], [7.1, 798.0], [7.2, 809.0], [7.3, 831.0], [7.4, 831.0], [7.5, 840.0], [7.6, 840.0], [7.7, 845.0], [7.8, 845.0], [7.9, 850.0], [8.0, 853.0], [8.1, 853.0], [8.2, 855.0], [8.3, 855.0], [8.4, 857.0], [8.5, 857.0], [8.6, 860.0], [8.7, 860.0], [8.8, 862.0], [8.9, 871.0], [9.0, 871.0], [9.1, 872.0], [9.2, 872.0], [9.3, 875.0], [9.4, 875.0], [9.5, 876.0], [9.6, 881.0], [9.7, 881.0], [9.8, 884.0], [9.9, 884.0], [10.0, 884.0], [10.1, 884.0], [10.2, 908.0], [10.3, 908.0], [10.4, 922.0], [10.5, 931.0], [10.6, 931.0], [10.7, 932.0], [10.8, 932.0], [10.9, 942.0], [11.0, 942.0], [11.1, 943.0], [11.2, 944.0], [11.3, 944.0], [11.4, 948.0], [11.5, 948.0], [11.6, 953.0], [11.7, 953.0], [11.8, 959.0], [11.9, 959.0], [12.0, 960.0], [12.1, 962.0], [12.2, 962.0], [12.3, 964.0], [12.4, 964.0], [12.5, 972.0], [12.6, 972.0], [12.7, 977.0], [12.8, 978.0], [12.9, 978.0], [13.0, 983.0], [13.1, 983.0], [13.2, 988.0], [13.3, 988.0], [13.4, 1001.0], [13.5, 1010.0], [13.6, 1010.0], [13.7, 1015.0], [13.8, 1015.0], [13.9, 1022.0], [14.0, 1022.0], [14.1, 1026.0], [14.2, 1026.0], [14.3, 1027.0], [14.4, 1028.0], [14.5, 1028.0], [14.6, 1028.0], [14.7, 1028.0], [14.8, 1030.0], [14.9, 1030.0], [15.0, 1031.0], [15.1, 1039.0], [15.2, 1039.0], [15.3, 1039.0], [15.4, 1039.0], [15.5, 1040.0], [15.6, 1040.0], [15.7, 1040.0], [15.8, 1040.0], [15.9, 1042.0], [16.0, 1043.0], [16.1, 1043.0], [16.2, 1043.0], [16.3, 1043.0], [16.4, 1044.0], [16.5, 1044.0], [16.6, 1048.0], [16.7, 1051.0], [16.8, 1051.0], [16.9, 1051.0], [17.0, 1051.0], [17.1, 1051.0], [17.2, 1051.0], [17.3, 1053.0], [17.4, 1053.0], [17.5, 1053.0], [17.6, 1054.0], [17.7, 1054.0], [17.8, 1054.0], [17.9, 1054.0], [18.0, 1055.0], [18.1, 1055.0], [18.2, 1056.0], [18.3, 1056.0], [18.4, 1056.0], [18.5, 1058.0], [18.6, 1058.0], [18.7, 1059.0], [18.8, 1059.0], [18.9, 1060.0], [19.0, 1060.0], [19.1, 1060.0], [19.2, 1062.0], [19.3, 1062.0], [19.4, 1063.0], [19.5, 1063.0], [19.6, 1063.0], [19.7, 1063.0], [19.8, 1064.0], [19.9, 1064.0], [20.0, 1064.0], [20.1, 1065.0], [20.2, 1065.0], [20.3, 1065.0], [20.4, 1065.0], [20.5, 1067.0], [20.6, 1067.0], [20.7, 1068.0], [20.8, 1073.0], [20.9, 1073.0], [21.0, 1074.0], [21.1, 1074.0], [21.2, 1075.0], [21.3, 1075.0], [21.4, 1075.0], [21.5, 1076.0], [21.6, 1076.0], [21.7, 1076.0], [21.8, 1076.0], [21.9, 1077.0], [22.0, 1077.0], [22.1, 1077.0], [22.2, 1077.0], [22.3, 1077.0], [22.4, 1077.0], [22.5, 1077.0], [22.6, 1079.0], [22.7, 1079.0], [22.8, 1079.0], [22.9, 1079.0], [23.0, 1079.0], [23.1, 1079.0], [23.2, 1079.0], [23.3, 1079.0], [23.4, 1079.0], [23.5, 1080.0], [23.6, 1080.0], [23.7, 1080.0], [23.8, 1080.0], [23.9, 1080.0], [24.0, 1081.0], [24.1, 1081.0], [24.2, 1081.0], [24.3, 1081.0], [24.4, 1081.0], [24.5, 1081.0], [24.6, 1081.0], [24.7, 1083.0], [24.8, 1083.0], [24.9, 1085.0], [25.0, 1085.0], [25.1, 1086.0], [25.2, 1086.0], [25.3, 1086.0], [25.4, 1087.0], [25.5, 1087.0], [25.6, 1089.0], [25.7, 1089.0], [25.8, 1089.0], [25.9, 1089.0], [26.0, 1089.0], [26.1, 1089.0], [26.2, 1090.0], [26.3, 1090.0], [26.4, 1090.0], [26.5, 1091.0], [26.6, 1091.0], [26.7, 1092.0], [26.8, 1092.0], [26.9, 1094.0], [27.0, 1095.0], [27.1, 1095.0], [27.2, 1096.0], [27.3, 1096.0], [27.4, 1097.0], [27.5, 1097.0], [27.6, 1097.0], [27.7, 1097.0], [27.8, 1098.0], [27.9, 1099.0], [28.0, 1099.0], [28.1, 1100.0], [28.2, 1100.0], [28.3, 1100.0], [28.4, 1100.0], [28.5, 1105.0], [28.6, 1106.0], [28.7, 1106.0], [28.8, 1106.0], [28.9, 1106.0], [29.0, 1106.0], [29.1, 1106.0], [29.2, 1106.0], [29.3, 1106.0], [29.4, 1106.0], [29.5, 1106.0], [29.6, 1106.0], [29.7, 1106.0], [29.8, 1106.0], [29.9, 1107.0], [30.0, 1107.0], [30.1, 1107.0], [30.2, 1107.0], [30.3, 1107.0], [30.4, 1107.0], [30.5, 1107.0], [30.6, 1109.0], [30.7, 1109.0], [30.8, 1110.0], [30.9, 1110.0], [31.0, 1110.0], [31.1, 1111.0], [31.2, 1111.0], [31.3, 1112.0], [31.4, 1112.0], [31.5, 1112.0], [31.6, 1112.0], [31.7, 1113.0], [31.8, 1113.0], [31.9, 1113.0], [32.0, 1113.0], [32.1, 1113.0], [32.2, 1116.0], [32.3, 1116.0], [32.4, 1117.0], [32.5, 1117.0], [32.6, 1117.0], [32.7, 1118.0], [32.8, 1118.0], [32.9, 1118.0], [33.0, 1118.0], [33.1, 1119.0], [33.2, 1119.0], [33.3, 1119.0], [33.4, 1120.0], [33.5, 1120.0], [33.6, 1120.0], [33.7, 1120.0], [33.8, 1121.0], [33.9, 1121.0], [34.0, 1121.0], [34.1, 1121.0], [34.2, 1121.0], [34.3, 1121.0], [34.4, 1121.0], [34.5, 1122.0], [34.6, 1122.0], [34.7, 1122.0], [34.8, 1122.0], [34.9, 1122.0], [35.0, 1122.0], [35.1, 1122.0], [35.2, 1123.0], [35.3, 1123.0], [35.4, 1124.0], [35.5, 1124.0], [35.6, 1124.0], [35.7, 1124.0], [35.8, 1124.0], [35.9, 1124.0], [36.0, 1124.0], [36.1, 1124.0], [36.2, 1124.0], [36.3, 1126.0], [36.4, 1126.0], [36.5, 1126.0], [36.6, 1126.0], [36.7, 1126.0], [36.8, 1127.0], [36.9, 1127.0], [37.0, 1130.0], [37.1, 1130.0], [37.2, 1130.0], [37.3, 1130.0], [37.4, 1130.0], [37.5, 1130.0], [37.6, 1130.0], [37.7, 1131.0], [37.8, 1131.0], [37.9, 1132.0], [38.0, 1132.0], [38.1, 1132.0], [38.2, 1132.0], [38.3, 1132.0], [38.4, 1133.0], [38.5, 1133.0], [38.6, 1134.0], [38.7, 1134.0], [38.8, 1135.0], [38.9, 1135.0], [39.0, 1135.0], [39.1, 1135.0], [39.2, 1135.0], [39.3, 1136.0], [39.4, 1136.0], [39.5, 1137.0], [39.6, 1137.0], [39.7, 1137.0], [39.8, 1137.0], [39.9, 1137.0], [40.0, 1137.0], [40.1, 1137.0], [40.2, 1138.0], [40.3, 1138.0], [40.4, 1138.0], [40.5, 1138.0], [40.6, 1138.0], [40.7, 1138.0], [40.8, 1138.0], [40.9, 1138.0], [41.0, 1138.0], [41.1, 1139.0], [41.2, 1139.0], [41.3, 1139.0], [41.4, 1139.0], [41.5, 1139.0], [41.6, 1140.0], [41.7, 1140.0], [41.8, 1140.0], [41.9, 1140.0], [42.0, 1140.0], [42.1, 1140.0], [42.2, 1140.0], [42.3, 1140.0], [42.4, 1140.0], [42.5, 1141.0], [42.6, 1141.0], [42.7, 1141.0], [42.8, 1141.0], [42.9, 1141.0], [43.0, 1142.0], [43.1, 1142.0], [43.2, 1143.0], [43.3, 1143.0], [43.4, 1143.0], [43.5, 1143.0], [43.6, 1144.0], [43.7, 1145.0], [43.8, 1145.0], [43.9, 1145.0], [44.0, 1145.0], [44.1, 1145.0], [44.2, 1145.0], [44.3, 1145.0], [44.4, 1145.0], [44.5, 1146.0], [44.6, 1146.0], [44.7, 1146.0], [44.8, 1146.0], [44.9, 1146.0], [45.0, 1146.0], [45.1, 1146.0], [45.2, 1146.0], [45.3, 1147.0], [45.4, 1147.0], [45.5, 1147.0], [45.6, 1147.0], [45.7, 1147.0], [45.8, 1147.0], [45.9, 1147.0], [46.0, 1147.0], [46.1, 1147.0], [46.2, 1148.0], [46.3, 1148.0], [46.4, 1149.0], [46.5, 1149.0], [46.6, 1149.0], [46.7, 1149.0], [46.8, 1151.0], [46.9, 1151.0], [47.0, 1151.0], [47.1, 1152.0], [47.2, 1152.0], [47.3, 1153.0], [47.4, 1153.0], [47.5, 1153.0], [47.6, 1153.0], [47.7, 1153.0], [47.8, 1153.0], [47.9, 1153.0], [48.0, 1154.0], [48.1, 1154.0], [48.2, 1155.0], [48.3, 1155.0], [48.4, 1155.0], [48.5, 1157.0], [48.6, 1157.0], [48.7, 1157.0], [48.8, 1157.0], [48.9, 1158.0], [49.0, 1158.0], [49.1, 1159.0], [49.2, 1159.0], [49.3, 1159.0], [49.4, 1159.0], [49.5, 1159.0], [49.6, 1159.0], [49.7, 1159.0], [49.8, 1160.0], [49.9, 1160.0], [50.0, 1160.0], [50.1, 1160.0], [50.2, 1160.0], [50.3, 1160.0], [50.4, 1160.0], [50.5, 1160.0], [50.6, 1160.0], [50.7, 1161.0], [50.8, 1162.0], [50.9, 1162.0], [51.0, 1162.0], [51.1, 1162.0], [51.2, 1162.0], [51.3, 1162.0], [51.4, 1163.0], [51.5, 1163.0], [51.6, 1164.0], [51.7, 1164.0], [51.8, 1164.0], [51.9, 1164.0], [52.0, 1164.0], [52.1, 1164.0], [52.2, 1164.0], [52.3, 1166.0], [52.4, 1167.0], [52.5, 1167.0], [52.6, 1167.0], [52.7, 1167.0], [52.8, 1168.0], [52.9, 1168.0], [53.0, 1169.0], [53.1, 1169.0], [53.2, 1169.0], [53.3, 1169.0], [53.4, 1169.0], [53.5, 1169.0], [53.6, 1169.0], [53.7, 1170.0], [53.8, 1170.0], [53.9, 1171.0], [54.0, 1171.0], [54.1, 1171.0], [54.2, 1171.0], [54.3, 1171.0], [54.4, 1171.0], [54.5, 1171.0], [54.6, 1171.0], [54.7, 1171.0], [54.8, 1172.0], [54.9, 1172.0], [55.0, 1172.0], [55.1, 1172.0], [55.2, 1172.0], [55.3, 1172.0], [55.4, 1172.0], [55.5, 1172.0], [55.6, 1172.0], [55.7, 1172.0], [55.8, 1172.0], [55.9, 1172.0], [56.0, 1173.0], [56.1, 1173.0], [56.2, 1173.0], [56.3, 1173.0], [56.4, 1173.0], [56.5, 1173.0], [56.6, 1173.0], [56.7, 1174.0], [56.8, 1174.0], [56.9, 1175.0], [57.0, 1175.0], [57.1, 1175.0], [57.2, 1175.0], [57.3, 1175.0], [57.4, 1176.0], [57.5, 1176.0], [57.6, 1177.0], [57.7, 1177.0], [57.8, 1177.0], [57.9, 1177.0], [58.0, 1178.0], [58.1, 1178.0], [58.2, 1178.0], [58.3, 1179.0], [58.4, 1179.0], [58.5, 1179.0], [58.6, 1179.0], [58.7, 1179.0], [58.8, 1179.0], [58.9, 1179.0], [59.0, 1179.0], [59.1, 1179.0], [59.2, 1180.0], [59.3, 1180.0], [59.4, 1181.0], [59.5, 1181.0], [59.6, 1182.0], [59.7, 1182.0], [59.8, 1182.0], [59.9, 1184.0], [60.0, 1184.0], [60.1, 1184.0], [60.2, 1184.0], [60.3, 1186.0], [60.4, 1186.0], [60.5, 1186.0], [60.6, 1186.0], [60.7, 1186.0], [60.8, 1186.0], [60.9, 1186.0], [61.0, 1187.0], [61.1, 1187.0], [61.2, 1188.0], [61.3, 1189.0], [61.4, 1189.0], [61.5, 1189.0], [61.6, 1189.0], [61.7, 1189.0], [61.8, 1189.0], [61.9, 1189.0], [62.0, 1190.0], [62.1, 1190.0], [62.2, 1190.0], [62.3, 1190.0], [62.4, 1190.0], [62.5, 1190.0], [62.6, 1192.0], [62.7, 1194.0], [62.8, 1194.0], [62.9, 1194.0], [63.0, 1194.0], [63.1, 1195.0], [63.2, 1195.0], [63.3, 1195.0], [63.4, 1195.0], [63.5, 1196.0], [63.6, 1196.0], [63.7, 1196.0], [63.8, 1198.0], [63.9, 1198.0], [64.0, 1199.0], [64.1, 1199.0], [64.2, 1199.0], [64.3, 1200.0], [64.4, 1200.0], [64.5, 1200.0], [64.6, 1200.0], [64.7, 1200.0], [64.8, 1200.0], [64.9, 1200.0], [65.0, 1200.0], [65.1, 1200.0], [65.2, 1201.0], [65.3, 1201.0], [65.4, 1202.0], [65.5, 1202.0], [65.6, 1202.0], [65.7, 1202.0], [65.8, 1203.0], [65.9, 1204.0], [66.0, 1204.0], [66.1, 1205.0], [66.2, 1205.0], [66.3, 1205.0], [66.4, 1205.0], [66.5, 1206.0], [66.6, 1206.0], [66.7, 1208.0], [66.8, 1213.0], [66.9, 1213.0], [67.0, 1213.0], [67.1, 1213.0], [67.2, 1216.0], [67.3, 1216.0], [67.4, 1216.0], [67.5, 1217.0], [67.6, 1217.0], [67.7, 1218.0], [67.8, 1218.0], [67.9, 1218.0], [68.0, 1218.0], [68.1, 1218.0], [68.2, 1218.0], [68.3, 1218.0], [68.4, 1218.0], [68.5, 1218.0], [68.6, 1219.0], [68.7, 1219.0], [68.8, 1220.0], [68.9, 1220.0], [69.0, 1221.0], [69.1, 1221.0], [69.2, 1221.0], [69.3, 1221.0], [69.4, 1221.0], [69.5, 1221.0], [69.6, 1221.0], [69.7, 1221.0], [69.8, 1221.0], [69.9, 1221.0], [70.0, 1222.0], [70.1, 1222.0], [70.2, 1222.0], [70.3, 1222.0], [70.4, 1222.0], [70.5, 1222.0], [70.6, 1224.0], [70.7, 1225.0], [70.8, 1225.0], [70.9, 1225.0], [71.0, 1225.0], [71.1, 1227.0], [71.2, 1227.0], [71.3, 1228.0], [71.4, 1228.0], [71.5, 1228.0], [71.6, 1231.0], [71.7, 1231.0], [71.8, 1234.0], [71.9, 1234.0], [72.0, 1234.0], [72.1, 1234.0], [72.2, 1235.0], [72.3, 1236.0], [72.4, 1236.0], [72.5, 1237.0], [72.6, 1237.0], [72.7, 1237.0], [72.8, 1237.0], [72.9, 1242.0], [73.0, 1242.0], [73.1, 1245.0], [73.2, 1246.0], [73.3, 1246.0], [73.4, 1249.0], [73.5, 1249.0], [73.6, 1249.0], [73.7, 1249.0], [73.8, 1250.0], [73.9, 1250.0], [74.0, 1250.0], [74.1, 1251.0], [74.2, 1251.0], [74.3, 1251.0], [74.4, 1251.0], [74.5, 1254.0], [74.6, 1254.0], [74.7, 1254.0], [74.8, 1256.0], [74.9, 1256.0], [75.0, 1257.0], [75.1, 1257.0], [75.2, 1259.0], [75.3, 1259.0], [75.4, 1264.0], [75.5, 1265.0], [75.6, 1265.0], [75.7, 1265.0], [75.8, 1265.0], [75.9, 1267.0], [76.0, 1267.0], [76.1, 1269.0], [76.2, 1270.0], [76.3, 1270.0], [76.4, 1276.0], [76.5, 1276.0], [76.6, 1277.0], [76.7, 1277.0], [76.8, 1283.0], [76.9, 1283.0], [77.0, 1297.0], [77.1, 1298.0], [77.2, 1298.0], [77.3, 1305.0], [77.4, 1305.0], [77.5, 1307.0], [77.6, 1307.0], [77.7, 1307.0], [77.8, 1309.0], [77.9, 1309.0], [78.0, 1310.0], [78.1, 1310.0], [78.2, 1313.0], [78.3, 1313.0], [78.4, 1314.0], [78.5, 1314.0], [78.6, 1315.0], [78.7, 1316.0], [78.8, 1316.0], [78.9, 1316.0], [79.0, 1316.0], [79.1, 1317.0], [79.2, 1317.0], [79.3, 1324.0], [79.4, 1326.0], [79.5, 1326.0], [79.6, 1328.0], [79.7, 1328.0], [79.8, 1330.0], [79.9, 1330.0], [80.0, 1333.0], [80.1, 1333.0], [80.2, 1335.0], [80.3, 1336.0], [80.4, 1336.0], [80.5, 1337.0], [80.6, 1337.0], [80.7, 1339.0], [80.8, 1339.0], [80.9, 1340.0], [81.0, 1342.0], [81.1, 1342.0], [81.2, 1343.0], [81.3, 1343.0], [81.4, 1347.0], [81.5, 1347.0], [81.6, 1349.0], [81.7, 1349.0], [81.8, 1360.0], [81.9, 1361.0], [82.0, 1361.0], [82.1, 1370.0], [82.2, 1370.0], [82.3, 1372.0], [82.4, 1372.0], [82.5, 1374.0], [82.6, 1375.0], [82.7, 1375.0], [82.8, 1376.0], [82.9, 1376.0], [83.0, 1377.0], [83.1, 1377.0], [83.2, 1377.0], [83.3, 1377.0], [83.4, 1379.0], [83.5, 1387.0], [83.6, 1387.0], [83.7, 1387.0], [83.8, 1387.0], [83.9, 1388.0], [84.0, 1388.0], [84.1, 1395.0], [84.2, 1398.0], [84.3, 1398.0], [84.4, 1398.0], [84.5, 1398.0], [84.6, 1400.0], [84.7, 1400.0], [84.8, 1402.0], [84.9, 1402.0], [85.0, 1407.0], [85.1, 1410.0], [85.2, 1410.0], [85.3, 1411.0], [85.4, 1411.0], [85.5, 1411.0], [85.6, 1411.0], [85.7, 1414.0], [85.8, 1414.0], [85.9, 1414.0], [86.0, 1415.0], [86.1, 1415.0], [86.2, 1415.0], [86.3, 1415.0], [86.4, 1415.0], [86.5, 1415.0], [86.6, 1417.0], [86.7, 1418.0], [86.8, 1418.0], [86.9, 1418.0], [87.0, 1418.0], [87.1, 1418.0], [87.2, 1418.0], [87.3, 1419.0], [87.4, 1419.0], [87.5, 1419.0], [87.6, 1422.0], [87.7, 1422.0], [87.8, 1423.0], [87.9, 1423.0], [88.0, 1425.0], [88.1, 1425.0], [88.2, 1425.0], [88.3, 1426.0], [88.4, 1426.0], [88.5, 1426.0], [88.6, 1426.0], [88.7, 1426.0], [88.8, 1426.0], [88.9, 1430.0], [89.0, 1434.0], [89.1, 1434.0], [89.2, 1436.0], [89.3, 1436.0], [89.4, 1436.0], [89.5, 1436.0], [89.6, 1437.0], [89.7, 1438.0], [89.8, 1438.0], [89.9, 1439.0], [90.0, 1439.0], [90.1, 1440.0], [90.2, 1440.0], [90.3, 1442.0], [90.4, 1442.0], [90.5, 1442.0], [90.6, 1445.0], [90.7, 1445.0], [90.8, 1445.0], [90.9, 1445.0], [91.0, 1446.0], [91.1, 1446.0], [91.2, 1447.0], [91.3, 1447.0], [91.4, 1447.0], [91.5, 1448.0], [91.6, 1448.0], [91.7, 1448.0], [91.8, 1448.0], [91.9, 1448.0], [92.0, 1448.0], [92.1, 1449.0], [92.2, 1451.0], [92.3, 1451.0], [92.4, 1452.0], [92.5, 1452.0], [92.6, 1453.0], [92.7, 1453.0], [92.8, 1460.0], [92.9, 1464.0], [93.0, 1464.0], [93.1, 1485.0], [93.2, 1485.0], [93.3, 1498.0], [93.4, 1498.0], [93.5, 1510.0], [93.6, 1510.0], [93.7, 1522.0], [93.8, 1522.0], [93.9, 1522.0], [94.0, 1523.0], [94.1, 1523.0], [94.2, 1523.0], [94.3, 1523.0], [94.4, 1524.0], [94.5, 1524.0], [94.6, 1524.0], [94.7, 1526.0], [94.8, 1526.0], [94.9, 1528.0], [95.0, 1528.0], [95.1, 1561.0], [95.2, 1561.0], [95.3, 1565.0], [95.4, 1566.0], [95.5, 1566.0], [95.6, 1566.0], [95.7, 1566.0], [95.8, 1566.0], [95.9, 1566.0], [96.0, 1567.0], [96.1, 1567.0], [96.2, 1567.0], [96.3, 1568.0], [96.4, 1568.0], [96.5, 1568.0], [96.6, 1568.0], [96.7, 1571.0], [96.8, 1571.0], [96.9, 1596.0], [97.0, 1597.0], [97.1, 1597.0], [97.2, 1613.0], [97.3, 1613.0], [97.4, 1717.0], [97.5, 1717.0], [97.6, 1755.0], [97.7, 1821.0], [97.8, 1821.0], [97.9, 1821.0], [98.0, 1821.0], [98.1, 1821.0], [98.2, 1821.0], [98.3, 2188.0], [98.4, 2188.0], [98.5, 2289.0], [98.6, 2732.0], [98.7, 2732.0], [98.8, 2754.0], [98.9, 2754.0], [99.0, 2755.0], [99.1, 2755.0], [99.2, 2772.0], [99.3, 2978.0], [99.4, 2978.0], [99.5, 3040.0], [99.6, 3040.0], [99.7, 3151.0], [99.8, 3151.0], [99.9, 3311.0]], "isOverall": false, "label": "Read News", "isController": true}, {"data": [[0.0, 38.0], [0.1, 38.0], [0.2, 38.0], [0.3, 38.0], [0.4, 38.0], [0.5, 38.0], [0.6, 38.0], [0.7, 38.0], [0.8, 39.0], [0.9, 39.0], [1.0, 39.0], [1.1, 39.0], [1.2, 39.0], [1.3, 39.0], [1.4, 39.0], [1.5, 39.0], [1.6, 39.0], [1.7, 39.0], [1.8, 39.0], [1.9, 39.0], [2.0, 39.0], [2.1, 39.0], [2.2, 39.0], [2.3, 39.0], [2.4, 39.0], [2.5, 39.0], [2.6, 39.0], [2.7, 39.0], [2.8, 39.0], [2.9, 39.0], [3.0, 39.0], [3.1, 39.0], [3.2, 39.0], [3.3, 39.0], [3.4, 39.0], [3.5, 39.0], [3.6, 39.0], [3.7, 39.0], [3.8, 39.0], [3.9, 39.0], [4.0, 39.0], [4.1, 39.0], [4.2, 39.0], [4.3, 39.0], [4.4, 39.0], [4.5, 39.0], [4.6, 39.0], [4.7, 39.0], [4.8, 39.0], [4.9, 39.0], [5.0, 39.0], [5.1, 39.0], [5.2, 39.0], [5.3, 39.0], [5.4, 39.0], [5.5, 39.0], [5.6, 39.0], [5.7, 39.0], [5.8, 39.0], [5.9, 39.0], [6.0, 39.0], [6.1, 39.0], [6.2, 39.0], [6.3, 39.0], [6.4, 40.0], [6.5, 40.0], [6.6, 40.0], [6.7, 40.0], [6.8, 40.0], [6.9, 40.0], [7.0, 40.0], [7.1, 40.0], [7.2, 40.0], [7.3, 40.0], [7.4, 40.0], [7.5, 40.0], [7.6, 40.0], [7.7, 40.0], [7.8, 40.0], [7.9, 40.0], [8.0, 40.0], [8.1, 40.0], [8.2, 40.0], [8.3, 40.0], [8.4, 40.0], [8.5, 40.0], [8.6, 40.0], [8.7, 40.0], [8.8, 40.0], [8.9, 40.0], [9.0, 40.0], [9.1, 40.0], [9.2, 40.0], [9.3, 40.0], [9.4, 40.0], [9.5, 40.0], [9.6, 40.0], [9.7, 40.0], [9.8, 40.0], [9.9, 40.0], [10.0, 40.0], [10.1, 40.0], [10.2, 40.0], [10.3, 40.0], [10.4, 40.0], [10.5, 40.0], [10.6, 40.0], [10.7, 40.0], [10.8, 40.0], [10.9, 41.0], [11.0, 41.0], [11.1, 41.0], [11.2, 41.0], [11.3, 41.0], [11.4, 41.0], [11.5, 41.0], [11.6, 41.0], [11.7, 41.0], [11.8, 41.0], [11.9, 41.0], [12.0, 41.0], [12.1, 41.0], [12.2, 41.0], [12.3, 41.0], [12.4, 41.0], [12.5, 41.0], [12.6, 41.0], [12.7, 41.0], [12.8, 41.0], [12.9, 41.0], [13.0, 41.0], [13.1, 41.0], [13.2, 41.0], [13.3, 41.0], [13.4, 41.0], [13.5, 41.0], [13.6, 41.0], [13.7, 41.0], [13.8, 41.0], [13.9, 41.0], [14.0, 41.0], [14.1, 41.0], [14.2, 41.0], [14.3, 41.0], [14.4, 41.0], [14.5, 41.0], [14.6, 41.0], [14.7, 41.0], [14.8, 42.0], [14.9, 42.0], [15.0, 42.0], [15.1, 42.0], [15.2, 42.0], [15.3, 42.0], [15.4, 42.0], [15.5, 42.0], [15.6, 42.0], [15.7, 42.0], [15.8, 42.0], [15.9, 42.0], [16.0, 42.0], [16.1, 42.0], [16.2, 42.0], [16.3, 42.0], [16.4, 42.0], [16.5, 42.0], [16.6, 42.0], [16.7, 42.0], [16.8, 42.0], [16.9, 42.0], [17.0, 42.0], [17.1, 42.0], [17.2, 42.0], [17.3, 42.0], [17.4, 42.0], [17.5, 42.0], [17.6, 42.0], [17.7, 42.0], [17.8, 42.0], [17.9, 42.0], [18.0, 43.0], [18.1, 43.0], [18.2, 43.0], [18.3, 43.0], [18.4, 43.0], [18.5, 43.0], [18.6, 43.0], [18.7, 43.0], [18.8, 43.0], [18.9, 43.0], [19.0, 43.0], [19.1, 43.0], [19.2, 43.0], [19.3, 43.0], [19.4, 43.0], [19.5, 43.0], [19.6, 43.0], [19.7, 43.0], [19.8, 43.0], [19.9, 43.0], [20.0, 43.0], [20.1, 43.0], [20.2, 43.0], [20.3, 43.0], [20.4, 43.0], [20.5, 44.0], [20.6, 44.0], [20.7, 44.0], [20.8, 44.0], [20.9, 44.0], [21.0, 44.0], [21.1, 44.0], [21.2, 44.0], [21.3, 44.0], [21.4, 44.0], [21.5, 44.0], [21.6, 44.0], [21.7, 44.0], [21.8, 44.0], [21.9, 44.0], [22.0, 44.0], [22.1, 44.0], [22.2, 44.0], [22.3, 44.0], [22.4, 44.0], [22.5, 44.0], [22.6, 44.0], [22.7, 44.0], [22.8, 44.0], [22.9, 44.0], [23.0, 44.0], [23.1, 44.0], [23.2, 44.0], [23.3, 44.0], [23.4, 44.0], [23.5, 44.0], [23.6, 44.0], [23.7, 44.0], [23.8, 44.0], [23.9, 44.0], [24.0, 44.0], [24.1, 44.0], [24.2, 44.0], [24.3, 44.0], [24.4, 44.0], [24.5, 44.0], [24.6, 44.0], [24.7, 45.0], [24.8, 45.0], [24.9, 45.0], [25.0, 45.0], [25.1, 45.0], [25.2, 45.0], [25.3, 45.0], [25.4, 45.0], [25.5, 45.0], [25.6, 45.0], [25.7, 45.0], [25.8, 45.0], [25.9, 45.0], [26.0, 45.0], [26.1, 45.0], [26.2, 45.0], [26.3, 45.0], [26.4, 45.0], [26.5, 45.0], [26.6, 45.0], [26.7, 45.0], [26.8, 45.0], [26.9, 45.0], [27.0, 45.0], [27.1, 45.0], [27.2, 45.0], [27.3, 45.0], [27.4, 45.0], [27.5, 45.0], [27.6, 45.0], [27.7, 45.0], [27.8, 45.0], [27.9, 45.0], [28.0, 45.0], [28.1, 45.0], [28.2, 45.0], [28.3, 45.0], [28.4, 45.0], [28.5, 45.0], [28.6, 45.0], [28.7, 45.0], [28.8, 45.0], [28.9, 45.0], [29.0, 45.0], [29.1, 45.0], [29.2, 45.0], [29.3, 45.0], [29.4, 45.0], [29.5, 46.0], [29.6, 46.0], [29.7, 46.0], [29.8, 46.0], [29.9, 46.0], [30.0, 46.0], [30.1, 46.0], [30.2, 46.0], [30.3, 46.0], [30.4, 46.0], [30.5, 46.0], [30.6, 46.0], [30.7, 46.0], [30.8, 46.0], [30.9, 46.0], [31.0, 46.0], [31.1, 46.0], [31.2, 46.0], [31.3, 46.0], [31.4, 46.0], [31.5, 46.0], [31.6, 46.0], [31.7, 46.0], [31.8, 46.0], [31.9, 46.0], [32.0, 46.0], [32.1, 46.0], [32.2, 46.0], [32.3, 46.0], [32.4, 46.0], [32.5, 46.0], [32.6, 46.0], [32.7, 46.0], [32.8, 46.0], [32.9, 46.0], [33.0, 46.0], [33.1, 46.0], [33.2, 46.0], [33.3, 46.0], [33.4, 46.0], [33.5, 46.0], [33.6, 46.0], [33.7, 46.0], [33.8, 46.0], [33.9, 46.0], [34.0, 46.0], [34.1, 46.0], [34.2, 46.0], [34.3, 46.0], [34.4, 46.0], [34.5, 46.0], [34.6, 46.0], [34.7, 46.0], [34.8, 46.0], [34.9, 46.0], [35.0, 46.0], [35.1, 46.0], [35.2, 46.0], [35.3, 46.0], [35.4, 46.0], [35.5, 46.0], [35.6, 46.0], [35.7, 46.0], [35.8, 47.0], [35.9, 47.0], [36.0, 47.0], [36.1, 47.0], [36.2, 47.0], [36.3, 47.0], [36.4, 47.0], [36.5, 47.0], [36.6, 47.0], [36.7, 47.0], [36.8, 47.0], [36.9, 47.0], [37.0, 47.0], [37.1, 47.0], [37.2, 47.0], [37.3, 47.0], [37.4, 47.0], [37.5, 47.0], [37.6, 47.0], [37.7, 47.0], [37.8, 47.0], [37.9, 47.0], [38.0, 47.0], [38.1, 47.0], [38.2, 47.0], [38.3, 47.0], [38.4, 47.0], [38.5, 47.0], [38.6, 47.0], [38.7, 47.0], [38.8, 47.0], [38.9, 47.0], [39.0, 47.0], [39.1, 47.0], [39.2, 47.0], [39.3, 47.0], [39.4, 47.0], [39.5, 47.0], [39.6, 47.0], [39.7, 47.0], [39.8, 47.0], [39.9, 47.0], [40.0, 47.0], [40.1, 47.0], [40.2, 47.0], [40.3, 47.0], [40.4, 48.0], [40.5, 48.0], [40.6, 48.0], [40.7, 48.0], [40.8, 48.0], [40.9, 48.0], [41.0, 48.0], [41.1, 48.0], [41.2, 48.0], [41.3, 48.0], [41.4, 48.0], [41.5, 48.0], [41.6, 48.0], [41.7, 48.0], [41.8, 48.0], [41.9, 48.0], [42.0, 48.0], [42.1, 48.0], [42.2, 48.0], [42.3, 48.0], [42.4, 48.0], [42.5, 48.0], [42.6, 48.0], [42.7, 48.0], [42.8, 48.0], [42.9, 49.0], [43.0, 49.0], [43.1, 49.0], [43.2, 49.0], [43.3, 49.0], [43.4, 49.0], [43.5, 49.0], [43.6, 49.0], [43.7, 49.0], [43.8, 49.0], [43.9, 49.0], [44.0, 49.0], [44.1, 49.0], [44.2, 49.0], [44.3, 49.0], [44.4, 49.0], [44.5, 49.0], [44.6, 49.0], [44.7, 49.0], [44.8, 49.0], [44.9, 49.0], [45.0, 49.0], [45.1, 49.0], [45.2, 50.0], [45.3, 50.0], [45.4, 50.0], [45.5, 50.0], [45.6, 50.0], [45.7, 50.0], [45.8, 50.0], [45.9, 50.0], [46.0, 50.0], [46.1, 50.0], [46.2, 50.0], [46.3, 50.0], [46.4, 50.0], [46.5, 50.0], [46.6, 50.0], [46.7, 50.0], [46.8, 50.0], [46.9, 50.0], [47.0, 50.0], [47.1, 50.0], [47.2, 50.0], [47.3, 50.0], [47.4, 50.0], [47.5, 50.0], [47.6, 50.0], [47.7, 50.0], [47.8, 50.0], [47.9, 50.0], [48.0, 50.0], [48.1, 50.0], [48.2, 50.0], [48.3, 50.0], [48.4, 51.0], [48.5, 51.0], [48.6, 51.0], [48.7, 51.0], [48.8, 51.0], [48.9, 51.0], [49.0, 51.0], [49.1, 51.0], [49.2, 51.0], [49.3, 51.0], [49.4, 51.0], [49.5, 51.0], [49.6, 51.0], [49.7, 51.0], [49.8, 51.0], [49.9, 51.0], [50.0, 51.0], [50.1, 51.0], [50.2, 51.0], [50.3, 52.0], [50.4, 52.0], [50.5, 52.0], [50.6, 52.0], [50.7, 52.0], [50.8, 52.0], [50.9, 52.0], [51.0, 53.0], [51.1, 53.0], [51.2, 53.0], [51.3, 53.0], [51.4, 53.0], [51.5, 53.0], [51.6, 53.0], [51.7, 53.0], [51.8, 53.0], [51.9, 53.0], [52.0, 53.0], [52.1, 53.0], [52.2, 53.0], [52.3, 53.0], [52.4, 53.0], [52.5, 53.0], [52.6, 53.0], [52.7, 53.0], [52.8, 53.0], [52.9, 53.0], [53.0, 53.0], [53.1, 53.0], [53.2, 53.0], [53.3, 54.0], [53.4, 54.0], [53.5, 54.0], [53.6, 54.0], [53.7, 54.0], [53.8, 54.0], [53.9, 54.0], [54.0, 54.0], [54.1, 54.0], [54.2, 54.0], [54.3, 54.0], [54.4, 54.0], [54.5, 54.0], [54.6, 55.0], [54.7, 55.0], [54.8, 55.0], [54.9, 55.0], [55.0, 55.0], [55.1, 55.0], [55.2, 55.0], [55.3, 55.0], [55.4, 55.0], [55.5, 55.0], [55.6, 55.0], [55.7, 55.0], [55.8, 55.0], [55.9, 55.0], [56.0, 56.0], [56.1, 56.0], [56.2, 56.0], [56.3, 56.0], [56.4, 56.0], [56.5, 56.0], [56.6, 56.0], [56.7, 56.0], [56.8, 56.0], [56.9, 57.0], [57.0, 57.0], [57.1, 57.0], [57.2, 58.0], [57.3, 58.0], [57.4, 58.0], [57.5, 58.0], [57.6, 58.0], [57.7, 58.0], [57.8, 59.0], [57.9, 59.0], [58.0, 59.0], [58.1, 59.0], [58.2, 59.0], [58.3, 59.0], [58.4, 59.0], [58.5, 59.0], [58.6, 59.0], [58.7, 60.0], [58.8, 60.0], [58.9, 60.0], [59.0, 60.0], [59.1, 60.0], [59.2, 60.0], [59.3, 60.0], [59.4, 61.0], [59.5, 61.0], [59.6, 61.0], [59.7, 61.0], [59.8, 61.0], [59.9, 61.0], [60.0, 61.0], [60.1, 61.0], [60.2, 61.0], [60.3, 62.0], [60.4, 62.0], [60.5, 62.0], [60.6, 63.0], [60.7, 63.0], [60.8, 63.0], [60.9, 63.0], [61.0, 63.0], [61.1, 63.0], [61.2, 63.0], [61.3, 63.0], [61.4, 63.0], [61.5, 63.0], [61.6, 63.0], [61.7, 63.0], [61.8, 63.0], [61.9, 63.0], [62.0, 64.0], [62.1, 64.0], [62.2, 64.0], [62.3, 64.0], [62.4, 64.0], [62.5, 64.0], [62.6, 64.0], [62.7, 64.0], [62.8, 64.0], [62.9, 64.0], [63.0, 64.0], [63.1, 64.0], [63.2, 64.0], [63.3, 65.0], [63.4, 65.0], [63.5, 65.0], [63.6, 65.0], [63.7, 65.0], [63.8, 66.0], [63.9, 66.0], [64.0, 67.0], [64.1, 67.0], [64.2, 67.0], [64.3, 67.0], [64.4, 67.0], [64.5, 68.0], [64.6, 68.0], [64.7, 68.0], [64.8, 68.0], [64.9, 68.0], [65.0, 68.0], [65.1, 69.0], [65.2, 69.0], [65.3, 69.0], [65.4, 69.0], [65.5, 69.0], [65.6, 69.0], [65.7, 69.0], [65.8, 69.0], [65.9, 71.0], [66.0, 71.0], [66.1, 71.0], [66.2, 71.0], [66.3, 71.0], [66.4, 71.0], [66.5, 72.0], [66.6, 72.0], [66.7, 72.0], [66.8, 73.0], [66.9, 73.0], [67.0, 73.0], [67.1, 73.0], [67.2, 73.0], [67.3, 73.0], [67.4, 73.0], [67.5, 74.0], [67.6, 74.0], [67.7, 74.0], [67.8, 74.0], [67.9, 75.0], [68.0, 75.0], [68.1, 75.0], [68.2, 75.0], [68.3, 76.0], [68.4, 76.0], [68.5, 76.0], [68.6, 76.0], [68.7, 76.0], [68.8, 76.0], [68.9, 76.0], [69.0, 76.0], [69.1, 76.0], [69.2, 76.0], [69.3, 77.0], [69.4, 77.0], [69.5, 77.0], [69.6, 77.0], [69.7, 77.0], [69.8, 77.0], [69.9, 77.0], [70.0, 77.0], [70.1, 77.0], [70.2, 78.0], [70.3, 78.0], [70.4, 78.0], [70.5, 78.0], [70.6, 78.0], [70.7, 78.0], [70.8, 78.0], [70.9, 78.0], [71.0, 78.0], [71.1, 78.0], [71.2, 78.0], [71.3, 78.0], [71.4, 78.0], [71.5, 78.0], [71.6, 78.0], [71.7, 78.0], [71.8, 78.0], [71.9, 78.0], [72.0, 78.0], [72.1, 78.0], [72.2, 78.0], [72.3, 78.0], [72.4, 78.0], [72.5, 79.0], [72.6, 79.0], [72.7, 79.0], [72.8, 79.0], [72.9, 79.0], [73.0, 79.0], [73.1, 79.0], [73.2, 79.0], [73.3, 79.0], [73.4, 80.0], [73.5, 80.0], [73.6, 81.0], [73.7, 81.0], [73.8, 82.0], [73.9, 82.0], [74.0, 82.0], [74.1, 82.0], [74.2, 82.0], [74.3, 82.0], [74.4, 82.0], [74.5, 82.0], [74.6, 82.0], [74.7, 83.0], [74.8, 85.0], [74.9, 85.0], [75.0, 85.0], [75.1, 85.0], [75.2, 85.0], [75.3, 85.0], [75.4, 86.0], [75.5, 86.0], [75.6, 86.0], [75.7, 86.0], [75.8, 86.0], [75.9, 86.0], [76.0, 86.0], [76.1, 87.0], [76.2, 88.0], [76.3, 88.0], [76.4, 88.0], [76.5, 88.0], [76.6, 88.0], [76.7, 88.0], [76.8, 88.0], [76.9, 88.0], [77.0, 88.0], [77.1, 89.0], [77.2, 89.0], [77.3, 89.0], [77.4, 89.0], [77.5, 89.0], [77.6, 89.0], [77.7, 89.0], [77.8, 90.0], [77.9, 90.0], [78.0, 90.0], [78.1, 90.0], [78.2, 91.0], [78.3, 91.0], [78.4, 92.0], [78.5, 92.0], [78.6, 94.0], [78.7, 94.0], [78.8, 94.0], [78.9, 96.0], [79.0, 96.0], [79.1, 96.0], [79.2, 96.0], [79.3, 96.0], [79.4, 96.0], [79.5, 96.0], [79.6, 97.0], [79.7, 97.0], [79.8, 97.0], [79.9, 97.0], [80.0, 97.0], [80.1, 97.0], [80.2, 97.0], [80.3, 97.0], [80.4, 97.0], [80.5, 97.0], [80.6, 97.0], [80.7, 98.0], [80.8, 98.0], [80.9, 98.0], [81.0, 98.0], [81.1, 98.0], [81.2, 99.0], [81.3, 99.0], [81.4, 99.0], [81.5, 99.0], [81.6, 99.0], [81.7, 99.0], [81.8, 99.0], [81.9, 102.0], [82.0, 102.0], [82.1, 102.0], [82.2, 102.0], [82.3, 102.0], [82.4, 102.0], [82.5, 103.0], [82.6, 103.0], [82.7, 103.0], [82.8, 103.0], [82.9, 103.0], [83.0, 106.0], [83.1, 106.0], [83.2, 107.0], [83.3, 107.0], [83.4, 109.0], [83.5, 111.0], [83.6, 111.0], [83.7, 112.0], [83.8, 112.0], [83.9, 113.0], [84.0, 113.0], [84.1, 113.0], [84.2, 113.0], [84.3, 113.0], [84.4, 115.0], [84.5, 115.0], [84.6, 116.0], [84.7, 116.0], [84.8, 117.0], [84.9, 117.0], [85.0, 118.0], [85.1, 120.0], [85.2, 120.0], [85.3, 120.0], [85.4, 120.0], [85.5, 121.0], [85.6, 121.0], [85.7, 125.0], [85.8, 132.0], [85.9, 132.0], [86.0, 139.0], [86.1, 139.0], [86.2, 140.0], [86.3, 140.0], [86.4, 164.0], [86.5, 164.0], [86.6, 190.0], [86.7, 222.0], [86.8, 222.0], [86.9, 224.0], [87.0, 224.0], [87.1, 225.0], [87.2, 225.0], [87.3, 228.0], [87.4, 228.0], [87.5, 228.0], [87.6, 229.0], [87.7, 229.0], [87.8, 229.0], [87.9, 229.0], [88.0, 229.0], [88.1, 230.0], [88.2, 230.0], [88.3, 230.0], [88.4, 230.0], [88.5, 230.0], [88.6, 230.0], [88.7, 234.0], [88.8, 234.0], [88.9, 235.0], [89.0, 236.0], [89.1, 236.0], [89.2, 239.0], [89.3, 239.0], [89.4, 254.0], [89.5, 254.0], [89.6, 254.0], [89.7, 255.0], [89.8, 255.0], [89.9, 256.0], [90.0, 256.0], [90.1, 256.0], [90.2, 256.0], [90.3, 259.0], [90.4, 259.0], [90.5, 260.0], [90.6, 260.0], [90.7, 260.0], [90.8, 261.0], [90.9, 261.0], [91.0, 261.0], [91.1, 261.0], [91.2, 262.0], [91.3, 263.0], [91.4, 263.0], [91.5, 265.0], [91.6, 265.0], [91.7, 265.0], [91.8, 265.0], [91.9, 266.0], [92.0, 266.0], [92.1, 268.0], [92.2, 273.0], [92.3, 273.0], [92.4, 277.0], [92.5, 277.0], [92.6, 281.0], [92.7, 281.0], [92.8, 286.0], [92.9, 290.0], [93.0, 290.0], [93.1, 295.0], [93.2, 295.0], [93.3, 297.0], [93.4, 297.0], [93.5, 304.0], [93.6, 304.0], [93.7, 314.0], [93.8, 319.0], [93.9, 319.0], [94.0, 320.0], [94.1, 320.0], [94.2, 321.0], [94.3, 321.0], [94.4, 333.0], [94.5, 336.0], [94.6, 336.0], [94.7, 339.0], [94.8, 339.0], [94.9, 340.0], [95.0, 340.0], [95.1, 420.0], [95.2, 420.0], [95.3, 420.0], [95.4, 420.0], [95.5, 420.0], [95.6, 421.0], [95.7, 421.0], [95.8, 421.0], [95.9, 421.0], [96.0, 421.0], [96.1, 422.0], [96.2, 422.0], [96.3, 422.0], [96.4, 422.0], [96.5, 423.0], [96.6, 423.0], [96.7, 424.0], [96.8, 424.0], [96.9, 424.0], [97.0, 425.0], [97.1, 425.0], [97.2, 434.0], [97.3, 434.0], [97.4, 435.0], [97.5, 435.0], [97.6, 435.0], [97.7, 435.0], [97.8, 435.0], [97.9, 441.0], [98.0, 441.0], [98.1, 523.0], [98.2, 523.0], [98.3, 524.0], [98.4, 524.0], [98.5, 526.0], [98.6, 527.0], [98.7, 527.0], [98.8, 528.0], [98.9, 528.0], [99.0, 751.0], [99.1, 751.0], [99.2, 751.0], [99.3, 755.0], [99.4, 755.0], [99.5, 961.0], [99.6, 961.0], [99.7, 1047.0], [99.8, 1047.0], [99.9, 1306.0]], "isOverall": false, "label": "GetNewsList(5)", "isController": false}, {"data": [[0.0, 34.0], [0.1, 34.0], [0.2, 35.0], [0.3, 35.0], [0.4, 35.0], [0.5, 35.0], [0.6, 35.0], [0.7, 35.0], [0.8, 35.0], [0.9, 35.0], [1.0, 35.0], [1.1, 35.0], [1.2, 35.0], [1.3, 35.0], [1.4, 35.0], [1.5, 35.0], [1.6, 36.0], [1.7, 36.0], [1.8, 36.0], [1.9, 36.0], [2.0, 36.0], [2.1, 36.0], [2.2, 36.0], [2.3, 36.0], [2.4, 36.0], [2.5, 36.0], [2.6, 36.0], [2.7, 36.0], [2.8, 36.0], [2.9, 36.0], [3.0, 36.0], [3.1, 36.0], [3.2, 36.0], [3.3, 36.0], [3.4, 36.0], [3.5, 36.0], [3.6, 36.0], [3.7, 36.0], [3.8, 37.0], [3.9, 37.0], [4.0, 37.0], [4.1, 37.0], [4.2, 37.0], [4.3, 37.0], [4.4, 37.0], [4.5, 37.0], [4.6, 37.0], [4.7, 37.0], [4.8, 37.0], [4.9, 37.0], [5.0, 37.0], [5.1, 37.0], [5.2, 37.0], [5.3, 37.0], [5.4, 37.0], [5.5, 37.0], [5.6, 37.0], [5.7, 37.0], [5.8, 37.0], [5.9, 37.0], [6.0, 37.0], [6.1, 37.0], [6.2, 38.0], [6.3, 38.0], [6.4, 38.0], [6.5, 38.0], [6.6, 38.0], [6.7, 38.0], [6.8, 38.0], [6.9, 38.0], [7.0, 38.0], [7.1, 38.0], [7.2, 38.0], [7.3, 38.0], [7.4, 38.0], [7.5, 38.0], [7.6, 38.0], [7.7, 38.0], [7.8, 38.0], [7.9, 38.0], [8.0, 38.0], [8.1, 38.0], [8.2, 38.0], [8.3, 38.0], [8.4, 38.0], [8.5, 38.0], [8.6, 38.0], [8.7, 38.0], [8.8, 38.0], [8.9, 38.0], [9.0, 38.0], [9.1, 38.0], [9.2, 38.0], [9.3, 38.0], [9.4, 38.0], [9.5, 38.0], [9.6, 38.0], [9.7, 38.0], [9.8, 38.0], [9.9, 38.0], [10.0, 39.0], [10.1, 39.0], [10.2, 39.0], [10.3, 39.0], [10.4, 39.0], [10.5, 39.0], [10.6, 39.0], [10.7, 39.0], [10.8, 39.0], [10.9, 39.0], [11.0, 39.0], [11.1, 39.0], [11.2, 39.0], [11.3, 39.0], [11.4, 39.0], [11.5, 39.0], [11.6, 39.0], [11.7, 39.0], [11.8, 39.0], [11.9, 39.0], [12.0, 39.0], [12.1, 39.0], [12.2, 39.0], [12.3, 39.0], [12.4, 39.0], [12.5, 39.0], [12.6, 39.0], [12.7, 39.0], [12.8, 39.0], [12.9, 39.0], [13.0, 39.0], [13.1, 39.0], [13.2, 39.0], [13.3, 39.0], [13.4, 39.0], [13.5, 39.0], [13.6, 39.0], [13.7, 39.0], [13.8, 39.0], [13.9, 39.0], [14.0, 39.0], [14.1, 39.0], [14.2, 40.0], [14.3, 40.0], [14.4, 40.0], [14.5, 40.0], [14.6, 40.0], [14.7, 40.0], [14.8, 40.0], [14.9, 40.0], [15.0, 40.0], [15.1, 40.0], [15.2, 40.0], [15.3, 40.0], [15.4, 40.0], [15.5, 40.0], [15.6, 40.0], [15.7, 40.0], [15.8, 40.0], [15.9, 40.0], [16.0, 40.0], [16.1, 40.0], [16.2, 40.0], [16.3, 40.0], [16.4, 40.0], [16.5, 40.0], [16.6, 40.0], [16.7, 40.0], [16.8, 40.0], [16.9, 41.0], [17.0, 41.0], [17.1, 41.0], [17.2, 41.0], [17.3, 41.0], [17.4, 41.0], [17.5, 41.0], [17.6, 41.0], [17.7, 41.0], [17.8, 41.0], [17.9, 41.0], [18.0, 41.0], [18.1, 41.0], [18.2, 41.0], [18.3, 41.0], [18.4, 41.0], [18.5, 41.0], [18.6, 41.0], [18.7, 41.0], [18.8, 41.0], [18.9, 41.0], [19.0, 41.0], [19.1, 41.0], [19.2, 41.0], [19.3, 41.0], [19.4, 41.0], [19.5, 41.0], [19.6, 41.0], [19.7, 41.0], [19.8, 41.0], [19.9, 41.0], [20.0, 41.0], [20.1, 41.0], [20.2, 41.0], [20.3, 41.0], [20.4, 41.0], [20.5, 41.0], [20.6, 41.0], [20.7, 41.0], [20.8, 41.0], [20.9, 41.0], [21.0, 41.0], [21.1, 41.0], [21.2, 41.0], [21.3, 41.0], [21.4, 41.0], [21.5, 41.0], [21.6, 41.0], [21.7, 41.0], [21.8, 41.0], [21.9, 41.0], [22.0, 42.0], [22.1, 42.0], [22.2, 42.0], [22.3, 42.0], [22.4, 42.0], [22.5, 42.0], [22.6, 42.0], [22.7, 42.0], [22.8, 42.0], [22.9, 42.0], [23.0, 42.0], [23.1, 42.0], [23.2, 42.0], [23.3, 42.0], [23.4, 42.0], [23.5, 42.0], [23.6, 42.0], [23.7, 42.0], [23.8, 42.0], [23.9, 42.0], [24.0, 42.0], [24.1, 42.0], [24.2, 42.0], [24.3, 42.0], [24.4, 42.0], [24.5, 42.0], [24.6, 42.0], [24.7, 42.0], [24.8, 42.0], [24.9, 42.0], [25.0, 42.0], [25.1, 42.0], [25.2, 42.0], [25.3, 42.0], [25.4, 42.0], [25.5, 42.0], [25.6, 42.0], [25.7, 42.0], [25.8, 42.0], [25.9, 42.0], [26.0, 42.0], [26.1, 42.0], [26.2, 42.0], [26.3, 42.0], [26.4, 43.0], [26.5, 43.0], [26.6, 43.0], [26.7, 43.0], [26.8, 43.0], [26.9, 43.0], [27.0, 43.0], [27.1, 43.0], [27.2, 43.0], [27.3, 43.0], [27.4, 43.0], [27.5, 43.0], [27.6, 43.0], [27.7, 43.0], [27.8, 43.0], [27.9, 43.0], [28.0, 43.0], [28.1, 43.0], [28.2, 43.0], [28.3, 43.0], [28.4, 43.0], [28.5, 43.0], [28.6, 43.0], [28.7, 43.0], [28.8, 43.0], [28.9, 43.0], [29.0, 43.0], [29.1, 43.0], [29.2, 43.0], [29.3, 43.0], [29.4, 43.0], [29.5, 43.0], [29.6, 43.0], [29.7, 43.0], [29.8, 43.0], [29.9, 43.0], [30.0, 43.0], [30.1, 43.0], [30.2, 43.0], [30.3, 43.0], [30.4, 43.0], [30.5, 43.0], [30.6, 43.0], [30.7, 43.0], [30.8, 44.0], [30.9, 44.0], [31.0, 44.0], [31.1, 44.0], [31.2, 44.0], [31.3, 44.0], [31.4, 44.0], [31.5, 44.0], [31.6, 44.0], [31.7, 44.0], [31.8, 44.0], [31.9, 44.0], [32.0, 44.0], [32.1, 44.0], [32.2, 44.0], [32.3, 44.0], [32.4, 44.0], [32.5, 44.0], [32.6, 44.0], [32.7, 44.0], [32.8, 44.0], [32.9, 44.0], [33.0, 44.0], [33.1, 44.0], [33.2, 44.0], [33.3, 44.0], [33.4, 44.0], [33.5, 44.0], [33.6, 44.0], [33.7, 44.0], [33.8, 44.0], [33.9, 44.0], [34.0, 44.0], [34.1, 44.0], [34.2, 44.0], [34.3, 44.0], [34.4, 44.0], [34.5, 44.0], [34.6, 44.0], [34.7, 44.0], [34.8, 44.0], [34.9, 44.0], [35.0, 44.0], [35.1, 44.0], [35.2, 44.0], [35.3, 44.0], [35.4, 44.0], [35.5, 44.0], [35.6, 44.0], [35.7, 44.0], [35.8, 44.0], [35.9, 44.0], [36.0, 44.0], [36.1, 44.0], [36.2, 44.0], [36.3, 44.0], [36.4, 44.0], [36.5, 44.0], [36.6, 44.0], [36.7, 44.0], [36.8, 44.0], [36.9, 44.0], [37.0, 44.0], [37.1, 44.0], [37.2, 44.0], [37.3, 44.0], [37.4, 44.0], [37.5, 44.0], [37.6, 44.0], [37.7, 44.0], [37.8, 44.0], [37.9, 44.0], [38.0, 44.0], [38.1, 44.0], [38.2, 44.0], [38.3, 44.0], [38.4, 44.0], [38.5, 44.0], [38.6, 44.0], [38.7, 44.0], [38.8, 44.0], [38.9, 44.0], [39.0, 45.0], [39.1, 45.0], [39.2, 45.0], [39.3, 45.0], [39.4, 45.0], [39.5, 45.0], [39.6, 45.0], [39.7, 45.0], [39.8, 45.0], [39.9, 45.0], [40.0, 45.0], [40.1, 45.0], [40.2, 45.0], [40.3, 45.0], [40.4, 45.0], [40.5, 45.0], [40.6, 45.0], [40.7, 45.0], [40.8, 45.0], [40.9, 45.0], [41.0, 45.0], [41.1, 45.0], [41.2, 45.0], [41.3, 45.0], [41.4, 45.0], [41.5, 45.0], [41.6, 45.0], [41.7, 45.0], [41.8, 45.0], [41.9, 45.0], [42.0, 45.0], [42.1, 45.0], [42.2, 45.0], [42.3, 45.0], [42.4, 45.0], [42.5, 45.0], [42.6, 45.0], [42.7, 45.0], [42.8, 45.0], [42.9, 45.0], [43.0, 45.0], [43.1, 45.0], [43.2, 45.0], [43.3, 45.0], [43.4, 45.0], [43.5, 45.0], [43.6, 45.0], [43.7, 45.0], [43.8, 45.0], [43.9, 45.0], [44.0, 45.0], [44.1, 45.0], [44.2, 45.0], [44.3, 46.0], [44.4, 46.0], [44.5, 46.0], [44.6, 46.0], [44.7, 46.0], [44.8, 46.0], [44.9, 46.0], [45.0, 46.0], [45.1, 46.0], [45.2, 46.0], [45.3, 46.0], [45.4, 46.0], [45.5, 46.0], [45.6, 46.0], [45.7, 46.0], [45.8, 46.0], [45.9, 46.0], [46.0, 46.0], [46.1, 46.0], [46.2, 46.0], [46.3, 46.0], [46.4, 46.0], [46.5, 46.0], [46.6, 46.0], [46.7, 46.0], [46.8, 46.0], [46.9, 46.0], [47.0, 46.0], [47.1, 46.0], [47.2, 46.0], [47.3, 46.0], [47.4, 46.0], [47.5, 47.0], [47.6, 47.0], [47.7, 47.0], [47.8, 47.0], [47.9, 47.0], [48.0, 47.0], [48.1, 47.0], [48.2, 47.0], [48.3, 47.0], [48.4, 47.0], [48.5, 47.0], [48.6, 47.0], [48.7, 47.0], [48.8, 47.0], [48.9, 47.0], [49.0, 47.0], [49.1, 47.0], [49.2, 47.0], [49.3, 47.0], [49.4, 47.0], [49.5, 47.0], [49.6, 47.0], [49.7, 47.0], [49.8, 47.0], [49.9, 47.0], [50.0, 47.0], [50.1, 47.0], [50.2, 47.0], [50.3, 47.0], [50.4, 47.0], [50.5, 47.0], [50.6, 47.0], [50.7, 47.0], [50.8, 47.0], [50.9, 47.0], [51.0, 47.0], [51.1, 47.0], [51.2, 47.0], [51.3, 47.0], [51.4, 47.0], [51.5, 47.0], [51.6, 48.0], [51.7, 48.0], [51.8, 48.0], [51.9, 48.0], [52.0, 48.0], [52.1, 48.0], [52.2, 48.0], [52.3, 48.0], [52.4, 48.0], [52.5, 48.0], [52.6, 48.0], [52.7, 48.0], [52.8, 48.0], [52.9, 48.0], [53.0, 48.0], [53.1, 48.0], [53.2, 48.0], [53.3, 48.0], [53.4, 48.0], [53.5, 48.0], [53.6, 48.0], [53.7, 48.0], [53.8, 48.0], [53.9, 48.0], [54.0, 48.0], [54.1, 48.0], [54.2, 48.0], [54.3, 48.0], [54.4, 48.0], [54.5, 48.0], [54.6, 48.0], [54.7, 48.0], [54.8, 48.0], [54.9, 48.0], [55.0, 48.0], [55.1, 49.0], [55.2, 49.0], [55.3, 49.0], [55.4, 49.0], [55.5, 49.0], [55.6, 49.0], [55.7, 49.0], [55.8, 49.0], [55.9, 49.0], [56.0, 49.0], [56.1, 49.0], [56.2, 49.0], [56.3, 49.0], [56.4, 49.0], [56.5, 49.0], [56.6, 49.0], [56.7, 49.0], [56.8, 49.0], [56.9, 49.0], [57.0, 49.0], [57.1, 49.0], [57.2, 49.0], [57.3, 49.0], [57.4, 50.0], [57.5, 50.0], [57.6, 50.0], [57.7, 50.0], [57.8, 50.0], [57.9, 50.0], [58.0, 50.0], [58.1, 50.0], [58.2, 50.0], [58.3, 50.0], [58.4, 50.0], [58.5, 50.0], [58.6, 50.0], [58.7, 50.0], [58.8, 50.0], [58.9, 50.0], [59.0, 50.0], [59.1, 50.0], [59.2, 51.0], [59.3, 51.0], [59.4, 51.0], [59.5, 51.0], [59.6, 51.0], [59.7, 51.0], [59.8, 51.0], [59.9, 51.0], [60.0, 51.0], [60.1, 51.0], [60.2, 51.0], [60.3, 51.0], [60.4, 51.0], [60.5, 51.0], [60.6, 51.0], [60.7, 51.0], [60.8, 51.0], [60.9, 51.0], [61.0, 51.0], [61.1, 51.0], [61.2, 51.0], [61.3, 52.0], [61.4, 52.0], [61.5, 52.0], [61.6, 52.0], [61.7, 52.0], [61.8, 52.0], [61.9, 52.0], [62.0, 52.0], [62.1, 52.0], [62.2, 52.0], [62.3, 52.0], [62.4, 52.0], [62.5, 52.0], [62.6, 52.0], [62.7, 52.0], [62.8, 52.0], [62.9, 52.0], [63.0, 52.0], [63.1, 53.0], [63.2, 53.0], [63.3, 53.0], [63.4, 53.0], [63.5, 53.0], [63.6, 53.0], [63.7, 53.0], [63.8, 53.0], [63.9, 53.0], [64.0, 53.0], [64.1, 54.0], [64.2, 54.0], [64.3, 54.0], [64.4, 54.0], [64.5, 54.0], [64.6, 54.0], [64.7, 54.0], [64.8, 55.0], [64.9, 55.0], [65.0, 55.0], [65.1, 55.0], [65.2, 55.0], [65.3, 55.0], [65.4, 55.0], [65.5, 55.0], [65.6, 55.0], [65.7, 55.0], [65.8, 55.0], [65.9, 55.0], [66.0, 55.0], [66.1, 55.0], [66.2, 55.0], [66.3, 55.0], [66.4, 56.0], [66.5, 56.0], [66.6, 56.0], [66.7, 56.0], [66.8, 56.0], [66.9, 56.0], [67.0, 56.0], [67.1, 56.0], [67.2, 56.0], [67.3, 56.0], [67.4, 56.0], [67.5, 57.0], [67.6, 57.0], [67.7, 57.0], [67.8, 57.0], [67.9, 57.0], [68.0, 57.0], [68.1, 57.0], [68.2, 57.0], [68.3, 57.0], [68.4, 58.0], [68.5, 58.0], [68.6, 58.0], [68.7, 58.0], [68.8, 58.0], [68.9, 59.0], [69.0, 59.0], [69.1, 59.0], [69.2, 59.0], [69.3, 59.0], [69.4, 59.0], [69.5, 59.0], [69.6, 59.0], [69.7, 59.0], [69.8, 60.0], [69.9, 60.0], [70.0, 60.0], [70.1, 60.0], [70.2, 60.0], [70.3, 60.0], [70.4, 60.0], [70.5, 60.0], [70.6, 60.0], [70.7, 60.0], [70.8, 60.0], [70.9, 60.0], [71.0, 60.0], [71.1, 60.0], [71.2, 60.0], [71.3, 60.0], [71.4, 60.0], [71.5, 60.0], [71.6, 61.0], [71.7, 61.0], [71.8, 61.0], [71.9, 61.0], [72.0, 61.0], [72.1, 61.0], [72.2, 61.0], [72.3, 61.0], [72.4, 62.0], [72.5, 62.0], [72.6, 62.0], [72.7, 62.0], [72.8, 62.0], [72.9, 62.0], [73.0, 62.0], [73.1, 63.0], [73.2, 63.0], [73.3, 63.0], [73.4, 63.0], [73.5, 63.0], [73.6, 63.0], [73.7, 63.0], [73.8, 63.0], [73.9, 63.0], [74.0, 63.0], [74.1, 63.0], [74.2, 63.0], [74.3, 63.0], [74.4, 64.0], [74.5, 64.0], [74.6, 64.0], [74.7, 64.0], [74.8, 64.0], [74.9, 64.0], [75.0, 64.0], [75.1, 64.0], [75.2, 64.0], [75.3, 64.0], [75.4, 65.0], [75.5, 65.0], [75.6, 65.0], [75.7, 65.0], [75.8, 65.0], [75.9, 65.0], [76.0, 65.0], [76.1, 65.0], [76.2, 65.0], [76.3, 65.0], [76.4, 65.0], [76.5, 66.0], [76.6, 66.0], [76.7, 66.0], [76.8, 66.0], [76.9, 68.0], [77.0, 68.0], [77.1, 68.0], [77.2, 68.0], [77.3, 68.0], [77.4, 68.0], [77.5, 68.0], [77.6, 68.0], [77.7, 69.0], [77.8, 69.0], [77.9, 69.0], [78.0, 69.0], [78.1, 69.0], [78.2, 69.0], [78.3, 69.0], [78.4, 69.0], [78.5, 70.0], [78.6, 70.0], [78.7, 70.0], [78.8, 70.0], [78.9, 70.0], [79.0, 70.0], [79.1, 70.0], [79.2, 71.0], [79.3, 71.0], [79.4, 71.0], [79.5, 71.0], [79.6, 71.0], [79.7, 71.0], [79.8, 71.0], [79.9, 72.0], [80.0, 72.0], [80.1, 72.0], [80.2, 73.0], [80.3, 73.0], [80.4, 73.0], [80.5, 73.0], [80.6, 73.0], [80.7, 73.0], [80.8, 73.0], [80.9, 73.0], [81.0, 73.0], [81.1, 74.0], [81.2, 74.0], [81.3, 74.0], [81.4, 74.0], [81.5, 74.0], [81.6, 75.0], [81.7, 75.0], [81.8, 76.0], [81.9, 76.0], [82.0, 76.0], [82.1, 76.0], [82.2, 77.0], [82.3, 77.0], [82.4, 77.0], [82.5, 78.0], [82.6, 78.0], [82.7, 78.0], [82.8, 78.0], [82.9, 78.0], [83.0, 78.0], [83.1, 79.0], [83.2, 79.0], [83.3, 79.0], [83.4, 79.0], [83.5, 79.0], [83.6, 79.0], [83.7, 79.0], [83.8, 79.0], [83.9, 80.0], [84.0, 80.0], [84.1, 80.0], [84.2, 80.0], [84.3, 80.0], [84.4, 80.0], [84.5, 80.0], [84.6, 80.0], [84.7, 80.0], [84.8, 82.0], [84.9, 82.0], [85.0, 82.0], [85.1, 82.0], [85.2, 83.0], [85.3, 83.0], [85.4, 83.0], [85.5, 84.0], [85.6, 84.0], [85.7, 85.0], [85.8, 85.0], [85.9, 85.0], [86.0, 85.0], [86.1, 85.0], [86.2, 85.0], [86.3, 85.0], [86.4, 85.0], [86.5, 85.0], [86.6, 85.0], [86.7, 85.0], [86.8, 85.0], [86.9, 85.0], [87.0, 85.0], [87.1, 86.0], [87.2, 86.0], [87.3, 86.0], [87.4, 86.0], [87.5, 86.0], [87.6, 86.0], [87.7, 86.0], [87.8, 86.0], [87.9, 86.0], [88.0, 86.0], [88.1, 86.0], [88.2, 87.0], [88.3, 87.0], [88.4, 87.0], [88.5, 87.0], [88.6, 87.0], [88.7, 89.0], [88.8, 89.0], [88.9, 90.0], [89.0, 90.0], [89.1, 91.0], [89.2, 91.0], [89.3, 91.0], [89.4, 92.0], [89.5, 92.0], [89.6, 93.0], [89.7, 93.0], [89.8, 94.0], [89.9, 94.0], [90.0, 95.0], [90.1, 95.0], [90.2, 95.0], [90.3, 95.0], [90.4, 95.0], [90.5, 97.0], [90.6, 97.0], [90.7, 105.0], [90.8, 106.0], [90.9, 106.0], [91.0, 106.0], [91.1, 106.0], [91.2, 107.0], [91.3, 107.0], [91.4, 111.0], [91.5, 111.0], [91.6, 112.0], [91.7, 112.0], [91.8, 112.0], [91.9, 117.0], [92.0, 117.0], [92.1, 117.0], [92.2, 117.0], [92.3, 119.0], [92.4, 120.0], [92.5, 120.0], [92.6, 125.0], [92.7, 125.0], [92.8, 126.0], [92.9, 126.0], [93.0, 126.0], [93.1, 128.0], [93.2, 128.0], [93.3, 131.0], [93.4, 131.0], [93.5, 132.0], [93.6, 132.0], [93.7, 132.0], [93.8, 132.0], [93.9, 132.0], [94.0, 132.0], [94.1, 132.0], [94.2, 132.0], [94.3, 132.0], [94.4, 134.0], [94.5, 134.0], [94.6, 137.0], [94.7, 138.0], [94.8, 138.0], [94.9, 146.0], [95.0, 146.0], [95.1, 146.0], [95.2, 146.0], [95.3, 232.0], [95.4, 234.0], [95.5, 234.0], [95.6, 236.0], [95.7, 236.0], [95.8, 238.0], [95.9, 238.0], [96.0, 256.0], [96.1, 256.0], [96.2, 257.0], [96.3, 259.0], [96.4, 259.0], [96.5, 266.0], [96.6, 266.0], [96.7, 268.0], [96.8, 268.0], [96.9, 273.0], [97.0, 275.0], [97.1, 275.0], [97.2, 280.0], [97.3, 280.0], [97.4, 281.0], [97.5, 281.0], [97.6, 282.0], [97.7, 289.0], [97.8, 289.0], [97.9, 295.0], [98.0, 295.0], [98.1, 298.0], [98.2, 298.0], [98.3, 301.0], [98.4, 301.0], [98.5, 381.0], [98.6, 381.0], [98.7, 381.0], [98.8, 381.0], [98.9, 381.0], [99.0, 381.0], [99.1, 381.0], [99.2, 381.0], [99.3, 381.0], [99.4, 381.0], [99.5, 393.0], [99.6, 393.0], [99.7, 431.0], [99.8, 431.0], [99.9, 550.0]], "isOverall": false, "label": "GetNewsCount", "isController": false}, {"data": [[0.0, 38.0], [0.1, 38.0], [0.2, 38.0], [0.3, 38.0], [0.4, 38.0], [0.5, 38.0], [0.6, 38.0], [0.7, 38.0], [0.8, 38.0], [0.9, 39.0], [1.0, 39.0], [1.1, 39.0], [1.2, 39.0], [1.3, 39.0], [1.4, 39.0], [1.5, 39.0], [1.6, 39.0], [1.7, 39.0], [1.8, 39.0], [1.9, 39.0], [2.0, 39.0], [2.1, 39.0], [2.2, 39.0], [2.3, 39.0], [2.4, 40.0], [2.5, 40.0], [2.6, 40.0], [2.7, 40.0], [2.8, 40.0], [2.9, 40.0], [3.0, 40.0], [3.1, 40.0], [3.2, 40.0], [3.3, 40.0], [3.4, 40.0], [3.5, 40.0], [3.6, 40.0], [3.7, 40.0], [3.8, 40.0], [3.9, 40.0], [4.0, 40.0], [4.1, 40.0], [4.2, 40.0], [4.3, 40.0], [4.4, 40.0], [4.5, 40.0], [4.6, 40.0], [4.7, 40.0], [4.8, 40.0], [4.9, 40.0], [5.0, 40.0], [5.1, 40.0], [5.2, 40.0], [5.3, 40.0], [5.4, 40.0], [5.5, 41.0], [5.6, 41.0], [5.7, 41.0], [5.8, 41.0], [5.9, 41.0], [6.0, 41.0], [6.1, 41.0], [6.2, 41.0], [6.3, 41.0], [6.4, 41.0], [6.5, 41.0], [6.6, 41.0], [6.7, 41.0], [6.8, 41.0], [6.9, 41.0], [7.0, 41.0], [7.1, 41.0], [7.2, 41.0], [7.3, 41.0], [7.4, 41.0], [7.5, 41.0], [7.6, 41.0], [7.7, 41.0], [7.8, 41.0], [7.9, 41.0], [8.0, 41.0], [8.1, 41.0], [8.2, 41.0], [8.3, 41.0], [8.4, 41.0], [8.5, 41.0], [8.6, 41.0], [8.7, 41.0], [8.8, 41.0], [8.9, 41.0], [9.0, 41.0], [9.1, 41.0], [9.2, 41.0], [9.3, 41.0], [9.4, 41.0], [9.5, 41.0], [9.6, 41.0], [9.7, 41.0], [9.8, 41.0], [9.9, 41.0], [10.0, 41.0], [10.1, 41.0], [10.2, 41.0], [10.3, 42.0], [10.4, 42.0], [10.5, 42.0], [10.6, 42.0], [10.7, 42.0], [10.8, 42.0], [10.9, 42.0], [11.0, 42.0], [11.1, 42.0], [11.2, 42.0], [11.3, 42.0], [11.4, 42.0], [11.5, 42.0], [11.6, 42.0], [11.7, 42.0], [11.8, 42.0], [11.9, 42.0], [12.0, 42.0], [12.1, 42.0], [12.2, 42.0], [12.3, 42.0], [12.4, 42.0], [12.5, 42.0], [12.6, 42.0], [12.7, 42.0], [12.8, 42.0], [12.9, 42.0], [13.0, 43.0], [13.1, 43.0], [13.2, 43.0], [13.3, 43.0], [13.4, 43.0], [13.5, 43.0], [13.6, 43.0], [13.7, 43.0], [13.8, 43.0], [13.9, 43.0], [14.0, 43.0], [14.1, 43.0], [14.2, 43.0], [14.3, 43.0], [14.4, 43.0], [14.5, 43.0], [14.6, 43.0], [14.7, 43.0], [14.8, 43.0], [14.9, 43.0], [15.0, 43.0], [15.1, 43.0], [15.2, 43.0], [15.3, 43.0], [15.4, 43.0], [15.5, 43.0], [15.6, 43.0], [15.7, 43.0], [15.8, 43.0], [15.9, 43.0], [16.0, 44.0], [16.1, 44.0], [16.2, 44.0], [16.3, 44.0], [16.4, 44.0], [16.5, 44.0], [16.6, 44.0], [16.7, 44.0], [16.8, 44.0], [16.9, 44.0], [17.0, 44.0], [17.1, 44.0], [17.2, 44.0], [17.3, 44.0], [17.4, 44.0], [17.5, 44.0], [17.6, 44.0], [17.7, 44.0], [17.8, 44.0], [17.9, 44.0], [18.0, 44.0], [18.1, 44.0], [18.2, 44.0], [18.3, 44.0], [18.4, 44.0], [18.5, 44.0], [18.6, 44.0], [18.7, 44.0], [18.8, 44.0], [18.9, 44.0], [19.0, 44.0], [19.1, 44.0], [19.2, 44.0], [19.3, 44.0], [19.4, 45.0], [19.5, 45.0], [19.6, 45.0], [19.7, 45.0], [19.8, 45.0], [19.9, 45.0], [20.0, 45.0], [20.1, 45.0], [20.2, 45.0], [20.3, 45.0], [20.4, 45.0], [20.5, 45.0], [20.6, 45.0], [20.7, 45.0], [20.8, 45.0], [20.9, 45.0], [21.0, 45.0], [21.1, 45.0], [21.2, 45.0], [21.3, 45.0], [21.4, 45.0], [21.5, 45.0], [21.6, 45.0], [21.7, 45.0], [21.8, 45.0], [21.9, 45.0], [22.0, 45.0], [22.1, 45.0], [22.2, 45.0], [22.3, 45.0], [22.4, 45.0], [22.5, 45.0], [22.6, 45.0], [22.7, 45.0], [22.8, 45.0], [22.9, 45.0], [23.0, 45.0], [23.1, 45.0], [23.2, 45.0], [23.3, 45.0], [23.4, 45.0], [23.5, 45.0], [23.6, 45.0], [23.7, 45.0], [23.8, 45.0], [23.9, 45.0], [24.0, 45.0], [24.1, 45.0], [24.2, 45.0], [24.3, 45.0], [24.4, 45.0], [24.5, 45.0], [24.6, 45.0], [24.7, 45.0], [24.8, 45.0], [24.9, 45.0], [25.0, 45.0], [25.1, 45.0], [25.2, 45.0], [25.3, 45.0], [25.4, 45.0], [25.5, 45.0], [25.6, 45.0], [25.7, 45.0], [25.8, 45.0], [25.9, 45.0], [26.0, 45.0], [26.1, 45.0], [26.2, 45.0], [26.3, 46.0], [26.4, 46.0], [26.5, 46.0], [26.6, 46.0], [26.7, 46.0], [26.8, 46.0], [26.9, 46.0], [27.0, 46.0], [27.1, 46.0], [27.2, 46.0], [27.3, 46.0], [27.4, 46.0], [27.5, 46.0], [27.6, 46.0], [27.7, 46.0], [27.8, 46.0], [27.9, 46.0], [28.0, 46.0], [28.1, 46.0], [28.2, 46.0], [28.3, 46.0], [28.4, 46.0], [28.5, 46.0], [28.6, 46.0], [28.7, 46.0], [28.8, 46.0], [28.9, 46.0], [29.0, 46.0], [29.1, 46.0], [29.2, 46.0], [29.3, 46.0], [29.4, 46.0], [29.5, 46.0], [29.6, 46.0], [29.7, 46.0], [29.8, 46.0], [29.9, 46.0], [30.0, 46.0], [30.1, 46.0], [30.2, 46.0], [30.3, 46.0], [30.4, 46.0], [30.5, 46.0], [30.6, 46.0], [30.7, 46.0], [30.8, 46.0], [30.9, 46.0], [31.0, 46.0], [31.1, 46.0], [31.2, 46.0], [31.3, 46.0], [31.4, 46.0], [31.5, 46.0], [31.6, 46.0], [31.7, 46.0], [31.8, 46.0], [31.9, 46.0], [32.0, 46.0], [32.1, 46.0], [32.2, 46.0], [32.3, 46.0], [32.4, 46.0], [32.5, 46.0], [32.6, 46.0], [32.7, 47.0], [32.8, 47.0], [32.9, 47.0], [33.0, 47.0], [33.1, 47.0], [33.2, 47.0], [33.3, 47.0], [33.4, 47.0], [33.5, 47.0], [33.6, 47.0], [33.7, 47.0], [33.8, 47.0], [33.9, 47.0], [34.0, 47.0], [34.1, 47.0], [34.2, 47.0], [34.3, 47.0], [34.4, 47.0], [34.5, 47.0], [34.6, 47.0], [34.7, 47.0], [34.8, 47.0], [34.9, 47.0], [35.0, 47.0], [35.1, 47.0], [35.2, 47.0], [35.3, 47.0], [35.4, 47.0], [35.5, 47.0], [35.6, 47.0], [35.7, 47.0], [35.8, 47.0], [35.9, 47.0], [36.0, 47.0], [36.1, 47.0], [36.2, 47.0], [36.3, 47.0], [36.4, 47.0], [36.5, 47.0], [36.6, 47.0], [36.7, 47.0], [36.8, 47.0], [36.9, 47.0], [37.0, 47.0], [37.1, 47.0], [37.2, 47.0], [37.3, 47.0], [37.4, 47.0], [37.5, 47.0], [37.6, 47.0], [37.7, 47.0], [37.8, 47.0], [37.9, 47.0], [38.0, 47.0], [38.1, 47.0], [38.2, 47.0], [38.3, 47.0], [38.4, 47.0], [38.5, 47.0], [38.6, 47.0], [38.7, 47.0], [38.8, 47.0], [38.9, 48.0], [39.0, 48.0], [39.1, 48.0], [39.2, 48.0], [39.3, 48.0], [39.4, 48.0], [39.5, 48.0], [39.6, 48.0], [39.7, 48.0], [39.8, 48.0], [39.9, 48.0], [40.0, 48.0], [40.1, 48.0], [40.2, 48.0], [40.3, 48.0], [40.4, 48.0], [40.5, 48.0], [40.6, 48.0], [40.7, 48.0], [40.8, 48.0], [40.9, 48.0], [41.0, 48.0], [41.1, 48.0], [41.2, 48.0], [41.3, 48.0], [41.4, 48.0], [41.5, 48.0], [41.6, 48.0], [41.7, 48.0], [41.8, 48.0], [41.9, 48.0], [42.0, 48.0], [42.1, 48.0], [42.2, 48.0], [42.3, 48.0], [42.4, 49.0], [42.5, 49.0], [42.6, 49.0], [42.7, 49.0], [42.8, 49.0], [42.9, 49.0], [43.0, 49.0], [43.1, 49.0], [43.2, 49.0], [43.3, 49.0], [43.4, 49.0], [43.5, 49.0], [43.6, 49.0], [43.7, 49.0], [43.8, 49.0], [43.9, 49.0], [44.0, 49.0], [44.1, 49.0], [44.2, 49.0], [44.3, 49.0], [44.4, 49.0], [44.5, 49.0], [44.6, 49.0], [44.7, 49.0], [44.8, 49.0], [44.9, 49.0], [45.0, 49.0], [45.1, 49.0], [45.2, 49.0], [45.3, 49.0], [45.4, 49.0], [45.5, 49.0], [45.6, 49.0], [45.7, 49.0], [45.8, 49.0], [45.9, 49.0], [46.0, 49.0], [46.1, 49.0], [46.2, 49.0], [46.3, 49.0], [46.4, 49.0], [46.5, 49.0], [46.6, 49.0], [46.7, 49.0], [46.8, 49.0], [46.9, 50.0], [47.0, 50.0], [47.1, 50.0], [47.2, 50.0], [47.3, 50.0], [47.4, 50.0], [47.5, 50.0], [47.6, 50.0], [47.7, 50.0], [47.8, 50.0], [47.9, 50.0], [48.0, 50.0], [48.1, 50.0], [48.2, 50.0], [48.3, 50.0], [48.4, 50.0], [48.5, 50.0], [48.6, 50.0], [48.7, 50.0], [48.8, 50.0], [48.9, 50.0], [49.0, 50.0], [49.1, 50.0], [49.2, 50.0], [49.3, 50.0], [49.4, 50.0], [49.5, 50.0], [49.6, 50.0], [49.7, 51.0], [49.8, 51.0], [49.9, 51.0], [50.0, 51.0], [50.1, 51.0], [50.2, 51.0], [50.3, 51.0], [50.4, 51.0], [50.5, 51.0], [50.6, 51.0], [50.7, 51.0], [50.8, 51.0], [50.9, 51.0], [51.0, 51.0], [51.1, 51.0], [51.2, 51.0], [51.3, 51.0], [51.4, 51.0], [51.5, 51.0], [51.6, 51.0], [51.7, 51.0], [51.8, 51.0], [51.9, 51.0], [52.0, 52.0], [52.1, 52.0], [52.2, 52.0], [52.3, 52.0], [52.4, 52.0], [52.5, 52.0], [52.6, 52.0], [52.7, 52.0], [52.8, 52.0], [52.9, 52.0], [53.0, 52.0], [53.1, 53.0], [53.2, 53.0], [53.3, 53.0], [53.4, 53.0], [53.5, 53.0], [53.6, 53.0], [53.7, 53.0], [53.8, 53.0], [53.9, 53.0], [54.0, 53.0], [54.1, 53.0], [54.2, 53.0], [54.3, 53.0], [54.4, 53.0], [54.5, 53.0], [54.6, 53.0], [54.7, 53.0], [54.8, 53.0], [54.9, 53.0], [55.0, 53.0], [55.1, 53.0], [55.2, 54.0], [55.3, 54.0], [55.4, 54.0], [55.5, 54.0], [55.6, 54.0], [55.7, 54.0], [55.8, 54.0], [55.9, 54.0], [56.0, 54.0], [56.1, 55.0], [56.2, 55.0], [56.3, 55.0], [56.4, 55.0], [56.5, 55.0], [56.6, 55.0], [56.7, 55.0], [56.8, 55.0], [56.9, 55.0], [57.0, 55.0], [57.1, 55.0], [57.2, 55.0], [57.3, 55.0], [57.4, 55.0], [57.5, 55.0], [57.6, 55.0], [57.7, 55.0], [57.8, 55.0], [57.9, 55.0], [58.0, 55.0], [58.1, 55.0], [58.2, 55.0], [58.3, 55.0], [58.4, 56.0], [58.5, 56.0], [58.6, 56.0], [58.7, 56.0], [58.8, 56.0], [58.9, 56.0], [59.0, 56.0], [59.1, 56.0], [59.2, 56.0], [59.3, 56.0], [59.4, 56.0], [59.5, 56.0], [59.6, 56.0], [59.7, 56.0], [59.8, 56.0], [59.9, 56.0], [60.0, 56.0], [60.1, 56.0], [60.2, 56.0], [60.3, 56.0], [60.4, 56.0], [60.5, 57.0], [60.6, 57.0], [60.7, 57.0], [60.8, 57.0], [60.9, 57.0], [61.0, 57.0], [61.1, 57.0], [61.2, 57.0], [61.3, 57.0], [61.4, 57.0], [61.5, 57.0], [61.6, 57.0], [61.7, 57.0], [61.8, 57.0], [61.9, 58.0], [62.0, 58.0], [62.1, 58.0], [62.2, 58.0], [62.3, 58.0], [62.4, 58.0], [62.5, 58.0], [62.6, 58.0], [62.7, 58.0], [62.8, 58.0], [62.9, 58.0], [63.0, 58.0], [63.1, 58.0], [63.2, 58.0], [63.3, 58.0], [63.4, 58.0], [63.5, 58.0], [63.6, 58.0], [63.7, 59.0], [63.8, 59.0], [63.9, 59.0], [64.0, 59.0], [64.1, 59.0], [64.2, 59.0], [64.3, 59.0], [64.4, 59.0], [64.5, 59.0], [64.6, 59.0], [64.7, 59.0], [64.8, 59.0], [64.9, 59.0], [65.0, 59.0], [65.1, 59.0], [65.2, 59.0], [65.3, 60.0], [65.4, 60.0], [65.5, 60.0], [65.6, 60.0], [65.7, 60.0], [65.8, 60.0], [65.9, 60.0], [66.0, 60.0], [66.1, 60.0], [66.2, 60.0], [66.3, 60.0], [66.4, 60.0], [66.5, 60.0], [66.6, 60.0], [66.7, 60.0], [66.8, 60.0], [66.9, 60.0], [67.0, 60.0], [67.1, 60.0], [67.2, 60.0], [67.3, 60.0], [67.4, 60.0], [67.5, 60.0], [67.6, 60.0], [67.7, 60.0], [67.8, 60.0], [67.9, 60.0], [68.0, 60.0], [68.1, 60.0], [68.2, 60.0], [68.3, 60.0], [68.4, 60.0], [68.5, 61.0], [68.6, 61.0], [68.7, 61.0], [68.8, 61.0], [68.9, 61.0], [69.0, 61.0], [69.1, 61.0], [69.2, 61.0], [69.3, 61.0], [69.4, 61.0], [69.5, 61.0], [69.6, 61.0], [69.7, 62.0], [69.8, 62.0], [69.9, 62.0], [70.0, 62.0], [70.1, 62.0], [70.2, 62.0], [70.3, 63.0], [70.4, 63.0], [70.5, 63.0], [70.6, 63.0], [70.7, 63.0], [70.8, 63.0], [70.9, 63.0], [71.0, 63.0], [71.1, 63.0], [71.2, 63.0], [71.3, 63.0], [71.4, 63.0], [71.5, 63.0], [71.6, 63.0], [71.7, 63.0], [71.8, 63.0], [71.9, 64.0], [72.0, 64.0], [72.1, 64.0], [72.2, 64.0], [72.3, 64.0], [72.4, 64.0], [72.5, 64.0], [72.6, 64.0], [72.7, 64.0], [72.8, 64.0], [72.9, 64.0], [73.0, 64.0], [73.1, 64.0], [73.2, 64.0], [73.3, 64.0], [73.4, 64.0], [73.5, 65.0], [73.6, 65.0], [73.7, 65.0], [73.8, 65.0], [73.9, 65.0], [74.0, 65.0], [74.1, 65.0], [74.2, 65.0], [74.3, 65.0], [74.4, 65.0], [74.5, 65.0], [74.6, 65.0], [74.7, 65.0], [74.8, 65.0], [74.9, 66.0], [75.0, 66.0], [75.1, 66.0], [75.2, 66.0], [75.3, 66.0], [75.4, 66.0], [75.5, 66.0], [75.6, 66.0], [75.7, 66.0], [75.8, 67.0], [75.9, 67.0], [76.0, 67.0], [76.1, 67.0], [76.2, 67.0], [76.3, 68.0], [76.4, 68.0], [76.5, 68.0], [76.6, 68.0], [76.7, 68.0], [76.8, 68.0], [76.9, 68.0], [77.0, 68.0], [77.1, 68.0], [77.2, 68.0], [77.3, 68.0], [77.4, 69.0], [77.5, 69.0], [77.6, 69.0], [77.7, 69.0], [77.8, 69.0], [77.9, 70.0], [78.0, 70.0], [78.1, 70.0], [78.2, 70.0], [78.3, 70.0], [78.4, 71.0], [78.5, 71.0], [78.6, 71.0], [78.7, 71.0], [78.8, 71.0], [78.9, 71.0], [79.0, 72.0], [79.1, 72.0], [79.2, 72.0], [79.3, 72.0], [79.4, 72.0], [79.5, 72.0], [79.6, 72.0], [79.7, 72.0], [79.8, 73.0], [79.9, 73.0], [80.0, 73.0], [80.1, 73.0], [80.2, 73.0], [80.3, 73.0], [80.4, 74.0], [80.5, 74.0], [80.6, 74.0], [80.7, 74.0], [80.8, 74.0], [80.9, 74.0], [81.0, 74.0], [81.1, 74.0], [81.2, 74.0], [81.3, 75.0], [81.4, 76.0], [81.5, 76.0], [81.6, 76.0], [81.7, 76.0], [81.8, 77.0], [81.9, 77.0], [82.0, 77.0], [82.1, 78.0], [82.2, 78.0], [82.3, 79.0], [82.4, 79.0], [82.5, 79.0], [82.6, 79.0], [82.7, 79.0], [82.8, 79.0], [82.9, 79.0], [83.0, 79.0], [83.1, 79.0], [83.2, 80.0], [83.3, 80.0], [83.4, 80.0], [83.5, 80.0], [83.6, 81.0], [83.7, 81.0], [83.8, 81.0], [83.9, 81.0], [84.0, 81.0], [84.1, 83.0], [84.2, 83.0], [84.3, 83.0], [84.4, 84.0], [84.5, 84.0], [84.6, 84.0], [84.7, 84.0], [84.8, 85.0], [84.9, 85.0], [85.0, 85.0], [85.1, 85.0], [85.2, 86.0], [85.3, 86.0], [85.4, 86.0], [85.5, 87.0], [85.6, 87.0], [85.7, 87.0], [85.8, 87.0], [85.9, 89.0], [86.0, 89.0], [86.1, 89.0], [86.2, 89.0], [86.3, 89.0], [86.4, 90.0], [86.5, 90.0], [86.6, 90.0], [86.7, 90.0], [86.8, 90.0], [86.9, 91.0], [87.0, 91.0], [87.1, 92.0], [87.2, 92.0], [87.3, 92.0], [87.4, 92.0], [87.5, 93.0], [87.6, 93.0], [87.7, 93.0], [87.8, 94.0], [87.9, 94.0], [88.0, 94.0], [88.1, 94.0], [88.2, 96.0], [88.3, 97.0], [88.4, 97.0], [88.5, 98.0], [88.6, 98.0], [88.7, 99.0], [88.8, 99.0], [88.9, 103.0], [89.0, 103.0], [89.1, 104.0], [89.2, 104.0], [89.3, 104.0], [89.4, 105.0], [89.5, 105.0], [89.6, 105.0], [89.7, 105.0], [89.8, 106.0], [89.9, 107.0], [90.0, 107.0], [90.1, 107.0], [90.2, 107.0], [90.3, 110.0], [90.4, 110.0], [90.5, 111.0], [90.6, 111.0], [90.7, 114.0], [90.8, 115.0], [90.9, 115.0], [91.0, 115.0], [91.1, 115.0], [91.2, 116.0], [91.3, 116.0], [91.4, 116.0], [91.5, 117.0], [91.6, 117.0], [91.7, 121.0], [91.8, 121.0], [91.9, 121.0], [92.0, 121.0], [92.1, 122.0], [92.2, 132.0], [92.3, 132.0], [92.4, 143.0], [92.5, 143.0], [92.6, 148.0], [92.7, 148.0], [92.8, 156.0], [92.9, 156.0], [93.0, 228.0], [93.1, 228.0], [93.2, 228.0], [93.3, 229.0], [93.4, 229.0], [93.5, 237.0], [93.6, 237.0], [93.7, 242.0], [93.8, 253.0], [93.9, 253.0], [94.0, 267.0], [94.1, 267.0], [94.2, 267.0], [94.3, 267.0], [94.4, 267.0], [94.5, 267.0], [94.6, 267.0], [94.7, 267.0], [94.8, 267.0], [94.9, 271.0], [95.0, 271.0], [95.1, 272.0], [95.2, 272.0], [95.3, 276.0], [95.4, 279.0], [95.5, 279.0], [95.6, 279.0], [95.7, 279.0], [95.8, 296.0], [95.9, 296.0], [96.0, 296.0], [96.1, 296.0], [96.2, 296.0], [96.3, 297.0], [96.4, 297.0], [96.5, 313.0], [96.6, 313.0], [96.7, 313.0], [96.8, 313.0], [96.9, 313.0], [97.0, 317.0], [97.1, 317.0], [97.2, 331.0], [97.3, 331.0], [97.4, 393.0], [97.5, 393.0], [97.6, 437.0], [97.7, 476.0], [97.8, 476.0], [97.9, 476.0], [98.0, 476.0], [98.1, 476.0], [98.2, 476.0], [98.3, 487.0], [98.4, 487.0], [98.5, 623.0], [98.6, 654.0], [98.7, 654.0], [98.8, 913.0], [98.9, 913.0], [99.0, 961.0], [99.1, 961.0], [99.2, 961.0], [99.3, 961.0], [99.4, 961.0], [99.5, 961.0], [99.6, 961.0], [99.7, 961.0], [99.8, 961.0], [99.9, 961.0]], "isOverall": false, "label": "GetNewsList(10)", "isController": false}, {"data": [[0.0, 163.0], [0.1, 163.0], [0.2, 163.0], [0.3, 163.0], [0.4, 178.0], [0.5, 178.0], [0.6, 180.0], [0.7, 180.0], [0.8, 181.0], [0.9, 185.0], [1.0, 185.0], [1.1, 190.0], [1.2, 190.0], [1.3, 197.0], [1.4, 197.0], [1.5, 200.0], [1.6, 208.0], [1.7, 208.0], [1.8, 226.0], [1.9, 226.0], [2.0, 234.0], [2.1, 234.0], [2.2, 244.0], [2.3, 251.0], [2.4, 251.0], [2.5, 276.0], [2.6, 276.0], [2.7, 288.0], [2.8, 288.0], [2.9, 289.0], [3.0, 293.0], [3.1, 293.0], [3.2, 309.0], [3.3, 309.0], [3.4, 312.0], [3.5, 312.0], [3.6, 316.0], [3.7, 318.0], [3.8, 318.0], [3.9, 319.0], [4.0, 319.0], [4.1, 331.0], [4.2, 331.0], [4.3, 340.0], [4.4, 348.0], [4.5, 348.0], [4.6, 375.0], [4.7, 375.0], [4.8, 376.0], [4.9, 376.0], [5.0, 377.0], [5.1, 381.0], [5.2, 381.0], [5.3, 383.0], [5.4, 383.0], [5.5, 384.0], [5.6, 384.0], [5.7, 393.0], [5.8, 393.0], [5.9, 393.0], [6.0, 399.0], [6.1, 399.0], [6.2, 405.0], [6.3, 405.0], [6.4, 419.0], [6.5, 423.0], [6.6, 423.0], [6.7, 439.0], [6.8, 439.0], [6.9, 443.0], [7.0, 443.0], [7.1, 466.0], [7.2, 468.0], [7.3, 468.0], [7.4, 470.0], [7.5, 470.0], [7.6, 485.0], [7.7, 485.0], [7.8, 485.0], [7.9, 485.0], [8.0, 485.0], [8.1, 493.0], [8.2, 493.0], [8.3, 493.0], [8.4, 493.0], [8.5, 508.0], [8.6, 523.0], [8.7, 523.0], [8.8, 528.0], [8.9, 528.0], [9.0, 550.0], [9.1, 550.0], [9.2, 558.0], [9.3, 559.0], [9.4, 559.0], [9.5, 570.0], [9.6, 570.0], [9.7, 575.0], [9.8, 575.0], [9.9, 583.0], [10.0, 600.0], [10.1, 600.0], [10.2, 614.0], [10.3, 614.0], [10.4, 618.0], [10.5, 618.0], [10.6, 628.0], [10.7, 634.0], [10.8, 634.0], [10.9, 640.0], [11.0, 640.0], [11.1, 642.0], [11.2, 642.0], [11.3, 644.0], [11.4, 644.0], [11.5, 644.0], [11.6, 656.0], [11.7, 656.0], [11.8, 656.0], [11.9, 656.0], [12.0, 659.0], [12.1, 665.0], [12.2, 665.0], [12.3, 667.0], [12.4, 667.0], [12.5, 679.0], [12.6, 679.0], [12.7, 691.0], [12.8, 692.0], [12.9, 692.0], [13.0, 693.0], [13.1, 693.0], [13.2, 694.0], [13.3, 694.0], [13.4, 696.0], [13.5, 702.0], [13.6, 702.0], [13.7, 716.0], [13.8, 716.0], [13.9, 719.0], [14.0, 719.0], [14.1, 721.0], [14.2, 721.0], [14.3, 721.0], [14.4, 721.0], [14.5, 721.0], [14.6, 727.0], [14.7, 727.0], [14.8, 731.0], [14.9, 734.0], [15.0, 734.0], [15.1, 750.0], [15.2, 750.0], [15.3, 759.0], [15.4, 759.0], [15.5, 764.0], [15.6, 769.0], [15.7, 769.0], [15.8, 771.0], [15.9, 771.0], [16.0, 771.0], [16.1, 771.0], [16.2, 772.0], [16.3, 781.0], [16.4, 781.0], [16.5, 782.0], [16.6, 782.0], [16.7, 788.0], [16.8, 788.0], [16.9, 795.0], [17.0, 800.0], [17.1, 800.0], [17.2, 808.0], [17.3, 808.0], [17.4, 809.0], [17.5, 809.0], [17.6, 813.0], [17.7, 823.0], [17.8, 823.0], [17.9, 835.0], [18.0, 835.0], [18.1, 837.0], [18.2, 837.0], [18.3, 840.0], [18.4, 848.0], [18.5, 848.0], [18.6, 858.0], [18.7, 858.0], [18.8, 858.0], [18.9, 858.0], [19.0, 859.0], [19.1, 863.0], [19.2, 863.0], [19.3, 865.0], [19.4, 865.0], [19.5, 867.0], [19.6, 867.0], [19.7, 868.0], [19.8, 870.0], [19.9, 870.0], [20.0, 876.0], [20.1, 876.0], [20.2, 876.0], [20.3, 876.0], [20.4, 878.0], [20.5, 883.0], [20.6, 883.0], [20.7, 884.0], [20.8, 884.0], [20.9, 885.0], [21.0, 885.0], [21.1, 885.0], [21.2, 886.0], [21.3, 886.0], [21.4, 887.0], [21.5, 887.0], [21.6, 887.0], [21.7, 887.0], [21.8, 890.0], [21.9, 890.0], [22.0, 890.0], [22.1, 890.0], [22.2, 890.0], [22.3, 890.0], [22.4, 890.0], [22.5, 890.0], [22.6, 892.0], [22.7, 892.0], [22.8, 893.0], [22.9, 893.0], [23.0, 894.0], [23.1, 894.0], [23.2, 898.0], [23.3, 899.0], [23.4, 899.0], [23.5, 906.0], [23.6, 906.0], [23.7, 906.0], [23.8, 906.0], [23.9, 908.0], [24.0, 909.0], [24.1, 909.0], [24.2, 910.0], [24.3, 910.0], [24.4, 911.0], [24.5, 911.0], [24.6, 912.0], [24.7, 912.0], [24.8, 912.0], [24.9, 915.0], [25.0, 915.0], [25.1, 917.0], [25.2, 917.0], [25.3, 917.0], [25.4, 918.0], [25.5, 918.0], [25.6, 918.0], [25.7, 918.0], [25.8, 919.0], [25.9, 919.0], [26.0, 919.0], [26.1, 921.0], [26.2, 921.0], [26.3, 922.0], [26.4, 922.0], [26.5, 922.0], [26.6, 922.0], [26.7, 922.0], [26.8, 924.0], [26.9, 924.0], [27.0, 926.0], [27.1, 926.0], [27.2, 927.0], [27.3, 927.0], [27.4, 927.0], [27.5, 928.0], [27.6, 928.0], [27.7, 931.0], [27.8, 931.0], [27.9, 931.0], [28.0, 931.0], [28.1, 931.0], [28.2, 931.0], [28.3, 931.0], [28.4, 932.0], [28.5, 932.0], [28.6, 932.0], [28.7, 932.0], [28.8, 933.0], [28.9, 933.0], [29.0, 933.0], [29.1, 933.0], [29.2, 933.0], [29.3, 933.0], [29.4, 933.0], [29.5, 933.0], [29.6, 935.0], [29.7, 935.0], [29.8, 935.0], [29.9, 935.0], [30.0, 935.0], [30.1, 935.0], [30.2, 935.0], [30.3, 935.0], [30.4, 935.0], [30.5, 936.0], [30.6, 936.0], [30.7, 936.0], [30.8, 936.0], [30.9, 936.0], [31.0, 937.0], [31.1, 937.0], [31.2, 938.0], [31.3, 938.0], [31.4, 938.0], [31.5, 938.0], [31.6, 939.0], [31.7, 940.0], [31.8, 940.0], [31.9, 940.0], [32.0, 940.0], [32.1, 941.0], [32.2, 941.0], [32.3, 941.0], [32.4, 942.0], [32.5, 942.0], [32.6, 942.0], [32.7, 942.0], [32.8, 942.0], [32.9, 942.0], [33.0, 943.0], [33.1, 944.0], [33.2, 944.0], [33.3, 944.0], [33.4, 944.0], [33.5, 946.0], [33.6, 946.0], [33.7, 947.0], [33.8, 947.0], [33.9, 947.0], [34.0, 947.0], [34.1, 947.0], [34.2, 947.0], [34.3, 947.0], [34.4, 948.0], [34.5, 948.0], [34.6, 949.0], [34.7, 949.0], [34.8, 949.0], [34.9, 950.0], [35.0, 950.0], [35.1, 950.0], [35.2, 950.0], [35.3, 950.0], [35.4, 950.0], [35.5, 950.0], [35.6, 950.0], [35.7, 950.0], [35.8, 952.0], [35.9, 952.0], [36.0, 952.0], [36.1, 953.0], [36.2, 953.0], [36.3, 953.0], [36.4, 953.0], [36.5, 953.0], [36.6, 953.0], [36.7, 954.0], [36.8, 954.0], [36.9, 954.0], [37.0, 955.0], [37.1, 955.0], [37.2, 956.0], [37.3, 956.0], [37.4, 956.0], [37.5, 957.0], [37.6, 957.0], [37.7, 957.0], [37.8, 957.0], [37.9, 957.0], [38.0, 957.0], [38.1, 958.0], [38.2, 958.0], [38.3, 958.0], [38.4, 958.0], [38.5, 958.0], [38.6, 958.0], [38.7, 958.0], [38.8, 958.0], [38.9, 958.0], [39.0, 958.0], [39.1, 958.0], [39.2, 958.0], [39.3, 958.0], [39.4, 958.0], [39.5, 959.0], [39.6, 959.0], [39.7, 959.0], [39.8, 960.0], [39.9, 960.0], [40.0, 960.0], [40.1, 960.0], [40.2, 960.0], [40.3, 960.0], [40.4, 960.0], [40.5, 961.0], [40.6, 961.0], [40.7, 962.0], [40.8, 962.0], [40.9, 962.0], [41.0, 962.0], [41.1, 962.0], [41.2, 963.0], [41.3, 963.0], [41.4, 963.0], [41.5, 963.0], [41.6, 963.0], [41.7, 964.0], [41.8, 964.0], [41.9, 964.0], [42.0, 964.0], [42.1, 964.0], [42.2, 964.0], [42.3, 965.0], [42.4, 965.0], [42.5, 965.0], [42.6, 966.0], [42.7, 966.0], [42.8, 967.0], [42.9, 967.0], [43.0, 968.0], [43.1, 968.0], [43.2, 968.0], [43.3, 969.0], [43.4, 969.0], [43.5, 969.0], [43.6, 969.0], [43.7, 969.0], [43.8, 969.0], [43.9, 969.0], [44.0, 970.0], [44.1, 970.0], [44.2, 970.0], [44.3, 970.0], [44.4, 971.0], [44.5, 971.0], [44.6, 971.0], [44.7, 971.0], [44.8, 971.0], [44.9, 972.0], [45.0, 972.0], [45.1, 973.0], [45.2, 973.0], [45.3, 973.0], [45.4, 973.0], [45.5, 973.0], [45.6, 973.0], [45.7, 973.0], [45.8, 973.0], [45.9, 974.0], [46.0, 974.0], [46.1, 974.0], [46.2, 974.0], [46.3, 975.0], [46.4, 975.0], [46.5, 975.0], [46.6, 975.0], [46.7, 975.0], [46.8, 975.0], [46.9, 975.0], [47.0, 975.0], [47.1, 975.0], [47.2, 976.0], [47.3, 976.0], [47.4, 976.0], [47.5, 976.0], [47.6, 976.0], [47.7, 977.0], [47.8, 977.0], [47.9, 977.0], [48.0, 977.0], [48.1, 977.0], [48.2, 978.0], [48.3, 978.0], [48.4, 978.0], [48.5, 978.0], [48.6, 978.0], [48.7, 979.0], [48.8, 979.0], [48.9, 979.0], [49.0, 979.0], [49.1, 979.0], [49.2, 979.0], [49.3, 980.0], [49.4, 980.0], [49.5, 980.0], [49.6, 981.0], [49.7, 981.0], [49.8, 982.0], [49.9, 982.0], [50.0, 982.0], [50.1, 982.0], [50.2, 982.0], [50.3, 982.0], [50.4, 982.0], [50.5, 983.0], [50.6, 983.0], [50.7, 983.0], [50.8, 984.0], [50.9, 984.0], [51.0, 984.0], [51.1, 984.0], [51.2, 985.0], [51.3, 985.0], [51.4, 985.0], [51.5, 985.0], [51.6, 985.0], [51.7, 985.0], [51.8, 985.0], [51.9, 986.0], [52.0, 986.0], [52.1, 987.0], [52.2, 987.0], [52.3, 987.0], [52.4, 987.0], [52.5, 987.0], [52.6, 987.0], [52.7, 987.0], [52.8, 988.0], [52.9, 989.0], [53.0, 989.0], [53.1, 989.0], [53.2, 989.0], [53.3, 990.0], [53.4, 990.0], [53.5, 991.0], [53.6, 991.0], [53.7, 991.0], [53.8, 992.0], [53.9, 992.0], [54.0, 992.0], [54.1, 992.0], [54.2, 992.0], [54.3, 993.0], [54.4, 993.0], [54.5, 993.0], [54.6, 993.0], [54.7, 993.0], [54.8, 993.0], [54.9, 994.0], [55.0, 995.0], [55.1, 995.0], [55.2, 995.0], [55.3, 995.0], [55.4, 995.0], [55.5, 995.0], [55.6, 995.0], [55.7, 996.0], [55.8, 996.0], [55.9, 996.0], [56.0, 996.0], [56.1, 997.0], [56.2, 997.0], [56.3, 997.0], [56.4, 997.0], [56.5, 997.0], [56.6, 997.0], [56.7, 997.0], [56.8, 998.0], [56.9, 998.0], [57.0, 998.0], [57.1, 998.0], [57.2, 998.0], [57.3, 998.0], [57.4, 998.0], [57.5, 998.0], [57.6, 998.0], [57.7, 998.0], [57.8, 998.0], [57.9, 998.0], [58.0, 999.0], [58.1, 999.0], [58.2, 999.0], [58.3, 999.0], [58.4, 999.0], [58.5, 999.0], [58.6, 999.0], [58.7, 999.0], [58.8, 999.0], [58.9, 999.0], [59.0, 999.0], [59.1, 1000.0], [59.2, 1000.0], [59.3, 1000.0], [59.4, 1000.0], [59.5, 1000.0], [59.6, 1000.0], [59.7, 1000.0], [59.8, 1000.0], [59.9, 1000.0], [60.0, 1000.0], [60.1, 1000.0], [60.2, 1000.0], [60.3, 1000.0], [60.4, 1000.0], [60.5, 1001.0], [60.6, 1001.0], [60.7, 1001.0], [60.8, 1001.0], [60.9, 1001.0], [61.0, 1001.0], [61.1, 1001.0], [61.2, 1001.0], [61.3, 1002.0], [61.4, 1002.0], [61.5, 1002.0], [61.6, 1002.0], [61.7, 1002.0], [61.8, 1002.0], [61.9, 1002.0], [62.0, 1003.0], [62.1, 1003.0], [62.2, 1003.0], [62.3, 1003.0], [62.4, 1003.0], [62.5, 1003.0], [62.6, 1004.0], [62.7, 1005.0], [62.8, 1005.0], [62.9, 1006.0], [63.0, 1006.0], [63.1, 1006.0], [63.2, 1006.0], [63.3, 1006.0], [63.4, 1006.0], [63.5, 1006.0], [63.6, 1007.0], [63.7, 1007.0], [63.8, 1007.0], [63.9, 1007.0], [64.0, 1008.0], [64.1, 1008.0], [64.2, 1008.0], [64.3, 1008.0], [64.4, 1008.0], [64.5, 1009.0], [64.6, 1009.0], [64.7, 1009.0], [64.8, 1011.0], [64.9, 1011.0], [65.0, 1012.0], [65.1, 1012.0], [65.2, 1012.0], [65.3, 1012.0], [65.4, 1012.0], [65.5, 1012.0], [65.6, 1012.0], [65.7, 1013.0], [65.8, 1013.0], [65.9, 1013.0], [66.0, 1013.0], [66.1, 1013.0], [66.2, 1013.0], [66.3, 1013.0], [66.4, 1014.0], [66.5, 1014.0], [66.6, 1015.0], [66.7, 1015.0], [66.8, 1016.0], [66.9, 1016.0], [67.0, 1018.0], [67.1, 1020.0], [67.2, 1020.0], [67.3, 1020.0], [67.4, 1020.0], [67.5, 1022.0], [67.6, 1022.0], [67.7, 1022.0], [67.8, 1022.0], [67.9, 1022.0], [68.0, 1023.0], [68.1, 1023.0], [68.2, 1023.0], [68.3, 1023.0], [68.4, 1024.0], [68.5, 1025.0], [68.6, 1025.0], [68.7, 1025.0], [68.8, 1025.0], [68.9, 1025.0], [69.0, 1025.0], [69.1, 1028.0], [69.2, 1028.0], [69.3, 1028.0], [69.4, 1028.0], [69.5, 1028.0], [69.6, 1028.0], [69.7, 1028.0], [69.8, 1029.0], [69.9, 1029.0], [70.0, 1029.0], [70.1, 1029.0], [70.2, 1029.0], [70.3, 1030.0], [70.4, 1030.0], [70.5, 1032.0], [70.6, 1032.0], [70.7, 1032.0], [70.8, 1032.0], [70.9, 1032.0], [71.0, 1032.0], [71.1, 1032.0], [71.2, 1035.0], [71.3, 1036.0], [71.4, 1036.0], [71.5, 1038.0], [71.6, 1038.0], [71.7, 1040.0], [71.8, 1040.0], [71.9, 1041.0], [72.0, 1042.0], [72.1, 1042.0], [72.2, 1042.0], [72.3, 1042.0], [72.4, 1043.0], [72.5, 1043.0], [72.6, 1043.0], [72.7, 1043.0], [72.8, 1043.0], [72.9, 1043.0], [73.0, 1043.0], [73.1, 1043.0], [73.2, 1043.0], [73.3, 1043.0], [73.4, 1044.0], [73.5, 1044.0], [73.6, 1044.0], [73.7, 1044.0], [73.8, 1044.0], [73.9, 1044.0], [74.0, 1044.0], [74.1, 1044.0], [74.2, 1044.0], [74.3, 1045.0], [74.4, 1045.0], [74.5, 1045.0], [74.6, 1045.0], [74.7, 1045.0], [74.8, 1045.0], [74.9, 1045.0], [75.0, 1045.0], [75.1, 1045.0], [75.2, 1045.0], [75.3, 1045.0], [75.4, 1045.0], [75.5, 1045.0], [75.6, 1045.0], [75.7, 1045.0], [75.8, 1045.0], [75.9, 1045.0], [76.0, 1045.0], [76.1, 1045.0], [76.2, 1045.0], [76.3, 1045.0], [76.4, 1045.0], [76.5, 1045.0], [76.6, 1045.0], [76.7, 1045.0], [76.8, 1045.0], [76.9, 1045.0], [77.0, 1045.0], [77.1, 1045.0], [77.2, 1045.0], [77.3, 1045.0], [77.4, 1045.0], [77.5, 1045.0], [77.6, 1045.0], [77.7, 1045.0], [77.8, 1046.0], [77.9, 1046.0], [78.0, 1046.0], [78.1, 1046.0], [78.2, 1046.0], [78.3, 1046.0], [78.4, 1046.0], [78.5, 1047.0], [78.6, 1047.0], [78.7, 1047.0], [78.8, 1047.0], [78.9, 1047.0], [79.0, 1047.0], [79.1, 1047.0], [79.2, 1047.0], [79.3, 1047.0], [79.4, 1047.0], [79.5, 1047.0], [79.6, 1047.0], [79.7, 1047.0], [79.8, 1047.0], [79.9, 1047.0], [80.0, 1047.0], [80.1, 1047.0], [80.2, 1047.0], [80.3, 1047.0], [80.4, 1047.0], [80.5, 1047.0], [80.6, 1047.0], [80.7, 1047.0], [80.8, 1047.0], [80.9, 1047.0], [81.0, 1047.0], [81.1, 1048.0], [81.2, 1048.0], [81.3, 1048.0], [81.4, 1048.0], [81.5, 1048.0], [81.6, 1048.0], [81.7, 1048.0], [81.8, 1048.0], [81.9, 1048.0], [82.0, 1049.0], [82.1, 1049.0], [82.2, 1049.0], [82.3, 1049.0], [82.4, 1049.0], [82.5, 1049.0], [82.6, 1049.0], [82.7, 1049.0], [82.8, 1049.0], [82.9, 1049.0], [83.0, 1049.0], [83.1, 1050.0], [83.2, 1050.0], [83.3, 1050.0], [83.4, 1050.0], [83.5, 1050.0], [83.6, 1050.0], [83.7, 1050.0], [83.8, 1050.0], [83.9, 1050.0], [84.0, 1050.0], [84.1, 1050.0], [84.2, 1050.0], [84.3, 1051.0], [84.4, 1051.0], [84.5, 1051.0], [84.6, 1051.0], [84.7, 1051.0], [84.8, 1052.0], [84.9, 1052.0], [85.0, 1054.0], [85.1, 1054.0], [85.2, 1054.0], [85.3, 1055.0], [85.4, 1055.0], [85.5, 1056.0], [85.6, 1056.0], [85.7, 1057.0], [85.8, 1057.0], [85.9, 1058.0], [86.0, 1059.0], [86.1, 1059.0], [86.2, 1059.0], [86.3, 1059.0], [86.4, 1059.0], [86.5, 1059.0], [86.6, 1062.0], [86.7, 1063.0], [86.8, 1063.0], [86.9, 1063.0], [87.0, 1063.0], [87.1, 1064.0], [87.2, 1064.0], [87.3, 1064.0], [87.4, 1065.0], [87.5, 1065.0], [87.6, 1067.0], [87.7, 1067.0], [87.8, 1076.0], [87.9, 1076.0], [88.0, 1076.0], [88.1, 1080.0], [88.2, 1080.0], [88.3, 1081.0], [88.4, 1081.0], [88.5, 1081.0], [88.6, 1081.0], [88.7, 1082.0], [88.8, 1082.0], [88.9, 1082.0], [89.0, 1085.0], [89.1, 1085.0], [89.2, 1085.0], [89.3, 1085.0], [89.4, 1085.0], [89.5, 1088.0], [89.6, 1088.0], [89.7, 1088.0], [89.8, 1088.0], [89.9, 1089.0], [90.0, 1089.0], [90.1, 1090.0], [90.2, 1090.0], [90.3, 1090.0], [90.4, 1090.0], [90.5, 1090.0], [90.6, 1091.0], [90.7, 1091.0], [90.8, 1091.0], [90.9, 1099.0], [91.0, 1099.0], [91.1, 1099.0], [91.2, 1099.0], [91.3, 1100.0], [91.4, 1100.0], [91.5, 1101.0], [91.6, 1106.0], [91.7, 1106.0], [91.8, 1137.0], [91.9, 1137.0], [92.0, 1138.0], [92.1, 1138.0], [92.2, 1138.0], [92.3, 1144.0], [92.4, 1144.0], [92.5, 1158.0], [92.6, 1158.0], [92.7, 1160.0], [92.8, 1160.0], [92.9, 1160.0], [93.0, 1161.0], [93.1, 1161.0], [93.2, 1163.0], [93.3, 1163.0], [93.4, 1164.0], [93.5, 1164.0], [93.6, 1165.0], [93.7, 1168.0], [93.8, 1168.0], [93.9, 1168.0], [94.0, 1168.0], [94.1, 1168.0], [94.2, 1168.0], [94.3, 1169.0], [94.4, 1172.0], [94.5, 1172.0], [94.6, 1256.0], [94.7, 1256.0], [94.8, 1273.0], [94.9, 1273.0], [95.0, 1273.0], [95.1, 1274.0], [95.2, 1274.0], [95.3, 1275.0], [95.4, 1275.0], [95.5, 1276.0], [95.6, 1276.0], [95.7, 1278.0], [95.8, 1278.0], [95.9, 1278.0], [96.0, 1278.0], [96.1, 1278.0], [96.2, 1279.0], [96.3, 1279.0], [96.4, 1280.0], [96.5, 1280.0], [96.6, 1280.0], [96.7, 1280.0], [96.8, 1280.0], [96.9, 1283.0], [97.0, 1283.0], [97.1, 1291.0], [97.2, 1301.0], [97.3, 1301.0], [97.4, 1307.0], [97.5, 1307.0], [97.6, 1307.0], [97.7, 1307.0], [97.8, 1311.0], [97.9, 1311.0], [98.0, 1311.0], [98.1, 1311.0], [98.2, 1311.0], [98.3, 1311.0], [98.4, 1311.0], [98.5, 1312.0], [98.6, 1313.0], [98.7, 1313.0], [98.8, 1313.0], [98.9, 1313.0], [99.0, 1314.0], [99.1, 1314.0], [99.2, 1318.0], [99.3, 1430.0], [99.4, 1430.0], [99.5, 1531.0], [99.6, 1531.0], [99.7, 1531.0], [99.8, 1531.0], [99.9, 1531.0], [100.0, 1531.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 512.0, "series": [{"data": [[2100.0, 1.0], [2200.0, 1.0], [600.0, 10.0], [700.0, 6.0], [2700.0, 4.0], [2900.0, 1.0], [3000.0, 1.0], [3100.0, 1.0], [800.0, 17.0], [3300.0, 1.0], [900.0, 18.0], [1000.0, 83.0], [1100.0, 204.0], [300.0, 5.0], [1200.0, 73.0], [1300.0, 41.0], [1400.0, 50.0], [1500.0, 21.0], [400.0, 4.0], [1600.0, 1.0], [1700.0, 2.0], [1800.0, 3.0], [500.0, 15.0]], "isOverall": false, "label": "Read News", "isController": true}, {"data": [[0.0, 461.0], [300.0, 9.0], [1300.0, 1.0], [700.0, 3.0], [200.0, 38.0], [100.0, 27.0], [400.0, 17.0], [900.0, 1.0], [500.0, 5.0], [1000.0, 1.0]], "isOverall": false, "label": "GetNewsList(5)", "isController": false}, {"data": [[0.0, 512.0], [300.0, 8.0], [100.0, 26.0], [200.0, 17.0], [400.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "GetNewsCount", "isController": false}, {"data": [[0.0, 501.0], [600.0, 2.0], [300.0, 6.0], [200.0, 20.0], [100.0, 23.0], [400.0, 5.0], [900.0, 7.0]], "isOverall": false, "label": "GetNewsList(10)", "isController": false}, {"data": [[600.0, 20.0], [700.0, 20.0], [200.0, 10.0], [800.0, 37.0], [900.0, 203.0], [1000.0, 184.0], [1100.0, 19.0], [300.0, 17.0], [1200.0, 15.0], [1300.0, 12.0], [1400.0, 1.0], [1500.0, 3.0], [100.0, 8.0], [400.0, 13.0], [500.0, 9.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 3300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1719.0, "series": [{"data": [[0.0, 1719.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 541.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 3.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.4590163934426226, "minX": 1.57793472E12, "maxY": 9.76428571428572, "series": [{"data": [[1.57793478E12, 9.76428571428572], [1.57793472E12, 2.4590163934426226], [1.57793484E12, 8.698701298701305]], "isOverall": false, "label": "Read News Thread Group(\u83B7\u53D6\u65B0\u95FB)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793484E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 41.333333333333336, "minX": 1.0, "maxY": 1387.0, "series": [{"data": [[1.0, 390.6666666666667], [2.0, 539.5], [4.0, 720.5], [8.0, 1214.0833333333333], [9.0, 1387.0], [5.0, 791.8333333333334], [10.0, 1222.5546719681909], [3.0, 566.3333333333334], [6.0, 934.75], [7.0, 948.5]], "isOverall": false, "label": "Read News", "isController": true}, {"data": [[9.481349911190048, 1182.3712255772639]], "isOverall": false, "label": "Read News-Aggregated", "isController": true}, {"data": [[1.0, 41.333333333333336], [2.0, 61.33333333333333], [4.0, 102.2], [8.0, 55.666666666666664], [9.0, 86.0], [5.0, 147.0], [10.0, 101.93836978131212], [3.0, 104.83333333333334], [6.0, 98.83333333333334], [7.0, 59.75]], "isOverall": false, "label": "GetNewsList(5)", "isController": false}, {"data": [[9.481349911190048, 100.3179396092362]], "isOverall": false, "label": "GetNewsList(5)-Aggregated", "isController": false}, {"data": [[1.0, 43.333333333333336], [2.0, 54.142857142857146], [4.0, 76.6923076923077], [8.0, 70.88888888888889], [9.0, 368.7142857142857], [5.0, 150.8], [10.0, 61.09274193548385], [3.0, 88.0], [6.0, 78.69230769230771], [7.0, 103.14285714285714]], "isOverall": false, "label": "GetNewsCount", "isController": false}, {"data": [[9.435398230088495, 67.1964601769911]], "isOverall": false, "label": "GetNewsCount-Aggregated", "isController": false}, {"data": [[1.0, 42.0], [2.0, 83.83333333333333], [4.0, 113.58333333333333], [8.0, 46.0], [9.0, 191.0], [5.0, 81.8], [10.0, 82.12549800796812], [3.0, 146.57142857142856], [6.0, 97.76923076923076], [7.0, 89.42857142857142]], "isOverall": false, "label": "GetNewsList(10)", "isController": false}, {"data": [[9.462765957446805, 83.79255319148938]], "isOverall": false, "label": "GetNewsList(10)-Aggregated", "isController": false}, {"data": [[1.0, 280.5], [2.0, 244.33333333333334], [4.0, 370.55555555555554], [8.0, 879.3750000000001], [5.0, 482.3333333333333], [10.0, 977.8122529644268], [3.0, 321.1666666666667], [6.0, 595.5833333333334], [7.0, 749.9285714285714]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[9.446584938704028, 928.5429071803852]], "isOverall": false, "label": "Login-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 10.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.57793472E12, "maxY": 54965.5, "series": [{"data": [[1.57793478E12, 54965.5], [1.57793472E12, 1434.3166666666666], [1.57793484E12, 8837.016666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.57793478E12, 0.0], [1.57793472E12, 0.0], [1.57793484E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793484E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 51.53846153846153, "minX": 1.57793472E12, "maxY": 1209.153039832285, "series": [{"data": [[1.57793478E12, 1209.153039832285], [1.57793472E12, 498.54545454545456], [1.57793484E12, 1112.333333333333]], "isOverall": false, "label": "Read News", "isController": true}, {"data": [[1.57793478E12, 104.45911949685535], [1.57793472E12, 86.54545454545455], [1.57793484E12, 75.99999999999999]], "isOverall": false, "label": "GetNewsList(5)", "isController": false}, {"data": [[1.57793478E12, 67.5431578947368], [1.57793472E12, 51.53846153846153], [1.57793484E12, 67.70129870129868]], "isOverall": false, "label": "GetNewsCount", "isController": false}, {"data": [[1.57793478E12, 85.7831578947368], [1.57793472E12, 75.84615384615385], [1.57793484E12, 72.71052631578947]], "isOverall": false, "label": "GetNewsList(10)", "isController": false}, {"data": [[1.57793478E12, 952.481092436975], [1.57793472E12, 301.69230769230774], [1.57793484E12, 888.9634146341461]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793484E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 51.23076923076923, "minX": 1.57793472E12, "maxY": 1207.8742138364782, "series": [{"data": [[1.57793478E12, 1207.8742138364782], [1.57793472E12, 497.81818181818187], [1.57793484E12, 1109.2133333333336]], "isOverall": false, "label": "Read News", "isController": true}, {"data": [[1.57793478E12, 103.9664570230608], [1.57793472E12, 86.54545454545455], [1.57793484E12, 75.46666666666664]], "isOverall": false, "label": "GetNewsList(5)", "isController": false}, {"data": [[1.57793478E12, 67.421052631579], [1.57793472E12, 51.23076923076923], [1.57793484E12, 67.55844155844152]], "isOverall": false, "label": "GetNewsCount", "isController": false}, {"data": [[1.57793478E12, 85.52631578947366], [1.57793472E12, 75.76923076923077], [1.57793484E12, 69.64473684210527]], "isOverall": false, "label": "GetNewsList(10)", "isController": false}, {"data": [[1.57793478E12, 952.0735294117649], [1.57793472E12, 301.38461538461536], [1.57793484E12, 887.3414634146342]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793484E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.57793472E12, "maxY": 104.18181818181819, "series": [{"data": [[1.57793478E12, 68.66666666666667], [1.57793472E12, 104.18181818181819], [1.57793484E12, 59.39999999999999]], "isOverall": false, "label": "Read News", "isController": true}, {"data": [[1.57793478E12, 4.025157232704409], [1.57793472E12, 0.0], [1.57793484E12, 0.0]], "isOverall": false, "label": "GetNewsList(5)", "isController": false}, {"data": [[1.57793478E12, 0.0], [1.57793472E12, 0.0], [1.57793484E12, 0.0]], "isOverall": false, "label": "GetNewsCount", "isController": false}, {"data": [[1.57793478E12, 0.0], [1.57793472E12, 0.0], [1.57793484E12, 0.0]], "isOverall": false, "label": "GetNewsList(10)", "isController": false}, {"data": [[1.57793478E12, 64.73949579831934], [1.57793472E12, 94.0], [1.57793484E12, 57.01219512195122]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793484E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 34.0, "minX": 1.57793472E12, "maxY": 1531.0, "series": [{"data": [[1.57793478E12, 1531.0], [1.57793472E12, 508.0], [1.57793484E12, 1283.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.57793478E12, 34.0], [1.57793472E12, 35.0], [1.57793484E12, 35.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.57793478E12, 1001.0], [1.57793472E12, 372.29999999999995], [1.57793484E12, 1021.8000000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.57793478E12, 1280.0], [1.57793472E12, 508.0], [1.57793484E12, 1264.5599999999986]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.57793478E12, 1047.0], [1.57793472E12, 393.0], [1.57793484E12, 1088.45]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793484E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 44.0, "minX": 1.0, "maxY": 964.0, "series": [{"data": [[33.0, 108.0], [34.0, 46.5], [35.0, 64.0], [37.0, 51.0], [38.0, 62.5], [39.0, 85.0], [40.0, 50.0], [41.0, 63.0], [42.0, 66.5], [43.0, 63.0], [44.0, 64.0], [4.0, 104.5], [6.0, 257.5], [8.0, 381.0], [11.0, 78.0], [12.0, 44.0], [14.0, 421.0], [15.0, 62.0], [1.0, 181.0], [16.0, 222.0], [19.0, 964.0], [20.0, 63.5], [21.0, 101.0], [22.0, 223.0], [25.0, 63.0], [27.0, 72.5], [28.0, 92.0], [30.0, 54.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 44.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 43.5, "minX": 1.0, "maxY": 964.0, "series": [{"data": [[33.0, 107.5], [34.0, 46.5], [35.0, 64.0], [37.0, 51.0], [38.0, 62.0], [39.0, 85.0], [40.0, 50.0], [41.0, 63.0], [42.0, 66.5], [43.0, 62.5], [44.0, 64.0], [4.0, 104.0], [6.0, 257.5], [8.0, 381.0], [11.0, 78.0], [12.0, 43.5], [14.0, 421.0], [15.0, 62.0], [1.0, 181.0], [16.0, 221.5], [19.0, 964.0], [20.0, 63.5], [21.0, 100.5], [22.0, 223.0], [25.0, 63.0], [27.0, 72.5], [28.0, 92.0], [30.0, 54.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 44.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.9, "minX": 1.57793472E12, "maxY": 31.816666666666666, "series": [{"data": [[1.57793478E12, 31.816666666666666], [1.57793472E12, 0.9], [1.57793484E12, 5.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793484E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.8333333333333334, "minX": 1.57793472E12, "maxY": 31.716666666666665, "series": [{"data": [[1.57793478E12, 31.716666666666665], [1.57793472E12, 0.8333333333333334], [1.57793484E12, 5.166666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793484E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.18333333333333332, "minX": 1.57793472E12, "maxY": 7.95, "series": [{"data": [[1.57793478E12, 7.95], [1.57793472E12, 0.18333333333333332], [1.57793484E12, 1.25]], "isOverall": false, "label": "Read News-success", "isController": true}, {"data": [[1.57793478E12, 7.95], [1.57793472E12, 0.18333333333333332], [1.57793484E12, 1.25]], "isOverall": false, "label": "GetNewsList(5)-success", "isController": false}, {"data": [[1.57793478E12, 7.916666666666667], [1.57793472E12, 0.21666666666666667], [1.57793484E12, 1.2833333333333334]], "isOverall": false, "label": "GetNewsCount-success", "isController": false}, {"data": [[1.57793478E12, 7.916666666666667], [1.57793472E12, 0.21666666666666667], [1.57793484E12, 1.2666666666666666]], "isOverall": false, "label": "GetNewsList(10)-success", "isController": false}, {"data": [[1.57793478E12, 7.933333333333334], [1.57793472E12, 0.21666666666666667], [1.57793484E12, 1.3666666666666667]], "isOverall": false, "label": "Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793484E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.0166666666666666, "minX": 1.57793472E12, "maxY": 39.666666666666664, "series": [{"data": [[1.57793478E12, 39.666666666666664], [1.57793472E12, 1.0166666666666666], [1.57793484E12, 6.416666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793484E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

