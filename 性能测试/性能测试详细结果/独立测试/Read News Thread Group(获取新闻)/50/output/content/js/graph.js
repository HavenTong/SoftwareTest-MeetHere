/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 39.0, "minX": 0.0, "maxY": 7337.0, "series": [{"data": [[0.0, 478.0], [0.1, 478.0], [0.2, 508.0], [0.3, 508.0], [0.4, 530.0], [0.5, 605.0], [0.6, 605.0], [0.7, 684.0], [0.8, 775.0], [0.9, 775.0], [1.0, 810.0], [1.1, 822.0], [1.2, 822.0], [1.3, 895.0], [1.4, 907.0], [1.5, 907.0], [1.6, 918.0], [1.7, 943.0], [1.8, 943.0], [1.9, 1143.0], [2.0, 1216.0], [2.1, 1216.0], [2.2, 1262.0], [2.3, 1304.0], [2.4, 1304.0], [2.5, 1328.0], [2.6, 1338.0], [2.7, 1338.0], [2.8, 1368.0], [2.9, 1368.0], [3.0, 1377.0], [3.1, 1451.0], [3.2, 1451.0], [3.3, 1536.0], [3.4, 1592.0], [3.5, 1592.0], [3.6, 1749.0], [3.7, 1800.0], [3.8, 1800.0], [3.9, 1848.0], [4.0, 1886.0], [4.1, 1886.0], [4.2, 1920.0], [4.3, 2002.0], [4.4, 2002.0], [4.5, 2007.0], [4.6, 2028.0], [4.7, 2028.0], [4.8, 2049.0], [4.9, 2078.0], [5.0, 2078.0], [5.1, 2139.0], [5.2, 2159.0], [5.3, 2159.0], [5.4, 2198.0], [5.5, 2198.0], [5.6, 2446.0], [5.7, 2465.0], [5.8, 2465.0], [5.9, 2566.0], [6.0, 2567.0], [6.1, 2567.0], [6.2, 2596.0], [6.3, 2599.0], [6.4, 2599.0], [6.5, 2607.0], [6.6, 2793.0], [6.7, 2793.0], [6.8, 2797.0], [6.9, 2845.0], [7.0, 2845.0], [7.1, 2945.0], [7.2, 2948.0], [7.3, 2948.0], [7.4, 3116.0], [7.5, 3174.0], [7.6, 3174.0], [7.7, 3269.0], [7.8, 3321.0], [7.9, 3321.0], [8.0, 3341.0], [8.1, 3341.0], [8.2, 3351.0], [8.3, 3451.0], [8.4, 3451.0], [8.5, 3462.0], [8.6, 3464.0], [8.7, 3464.0], [8.8, 3465.0], [8.9, 3466.0], [9.0, 3466.0], [9.1, 3488.0], [9.2, 3492.0], [9.3, 3492.0], [9.4, 3539.0], [9.5, 3627.0], [9.6, 3627.0], [9.7, 3720.0], [9.8, 3753.0], [9.9, 3753.0], [10.0, 3796.0], [10.1, 3799.0], [10.2, 3799.0], [10.3, 3892.0], [10.4, 3898.0], [10.5, 3898.0], [10.6, 3912.0], [10.7, 3912.0], [10.8, 3951.0], [10.9, 3952.0], [11.0, 3952.0], [11.1, 3966.0], [11.2, 3997.0], [11.3, 3997.0], [11.4, 4077.0], [11.5, 4095.0], [11.6, 4095.0], [11.7, 4113.0], [11.8, 4114.0], [11.9, 4114.0], [12.0, 4117.0], [12.1, 4159.0], [12.2, 4159.0], [12.3, 4178.0], [12.4, 4181.0], [12.5, 4181.0], [12.6, 4227.0], [12.7, 4233.0], [12.8, 4233.0], [12.9, 4252.0], [13.0, 4260.0], [13.1, 4260.0], [13.2, 4270.0], [13.3, 4270.0], [13.4, 4307.0], [13.5, 4328.0], [13.6, 4328.0], [13.7, 4330.0], [13.8, 4369.0], [13.9, 4369.0], [14.0, 4390.0], [14.1, 4416.0], [14.2, 4416.0], [14.3, 4437.0], [14.4, 4445.0], [14.5, 4445.0], [14.6, 4500.0], [14.7, 4504.0], [14.8, 4504.0], [14.9, 4504.0], [15.0, 4508.0], [15.1, 4508.0], [15.2, 4509.0], [15.3, 4514.0], [15.4, 4514.0], [15.5, 4527.0], [15.6, 4528.0], [15.7, 4528.0], [15.8, 4535.0], [15.9, 4535.0], [16.0, 4538.0], [16.1, 4544.0], [16.2, 4544.0], [16.3, 4546.0], [16.4, 4549.0], [16.5, 4549.0], [16.6, 4550.0], [16.7, 4561.0], [16.8, 4561.0], [16.9, 4564.0], [17.0, 4584.0], [17.1, 4584.0], [17.2, 4590.0], [17.3, 4597.0], [17.4, 4597.0], [17.5, 4597.0], [17.6, 4598.0], [17.7, 4598.0], [17.8, 4600.0], [17.9, 4617.0], [18.0, 4617.0], [18.1, 4620.0], [18.2, 4622.0], [18.3, 4622.0], [18.4, 4622.0], [18.5, 4622.0], [18.6, 4624.0], [18.7, 4625.0], [18.8, 4625.0], [18.9, 4629.0], [19.0, 4630.0], [19.1, 4630.0], [19.2, 4641.0], [19.3, 4651.0], [19.4, 4651.0], [19.5, 4652.0], [19.6, 4657.0], [19.7, 4657.0], [19.8, 4657.0], [19.9, 4659.0], [20.0, 4659.0], [20.1, 4666.0], [20.2, 4667.0], [20.3, 4667.0], [20.4, 4669.0], [20.5, 4670.0], [20.6, 4670.0], [20.7, 4672.0], [20.8, 4673.0], [20.9, 4673.0], [21.0, 4677.0], [21.1, 4677.0], [21.2, 4694.0], [21.3, 4696.0], [21.4, 4696.0], [21.5, 4698.0], [21.6, 4713.0], [21.7, 4713.0], [21.8, 4714.0], [21.9, 4717.0], [22.0, 4717.0], [22.1, 4717.0], [22.2, 4723.0], [22.3, 4723.0], [22.4, 4724.0], [22.5, 4729.0], [22.6, 4729.0], [22.7, 4730.0], [22.8, 4732.0], [22.9, 4732.0], [23.0, 4733.0], [23.1, 4740.0], [23.2, 4740.0], [23.3, 4747.0], [23.4, 4752.0], [23.5, 4752.0], [23.6, 4753.0], [23.7, 4753.0], [23.8, 4759.0], [23.9, 4759.0], [24.0, 4759.0], [24.1, 4779.0], [24.2, 4782.0], [24.3, 4782.0], [24.4, 4788.0], [24.5, 4789.0], [24.6, 4789.0], [24.7, 4790.0], [24.8, 4791.0], [24.9, 4791.0], [25.0, 4794.0], [25.1, 4795.0], [25.2, 4795.0], [25.3, 4798.0], [25.4, 4807.0], [25.5, 4807.0], [25.6, 4807.0], [25.7, 4813.0], [25.8, 4813.0], [25.9, 4814.0], [26.0, 4816.0], [26.1, 4816.0], [26.2, 4824.0], [26.3, 4827.0], [26.4, 4827.0], [26.5, 4834.0], [26.6, 4834.0], [26.7, 4839.0], [26.8, 4841.0], [26.9, 4841.0], [27.0, 4843.0], [27.1, 4846.0], [27.2, 4846.0], [27.3, 4848.0], [27.4, 4848.0], [27.5, 4848.0], [27.6, 4851.0], [27.7, 4853.0], [27.8, 4853.0], [27.9, 4855.0], [28.0, 4856.0], [28.1, 4856.0], [28.2, 4857.0], [28.3, 4858.0], [28.4, 4858.0], [28.5, 4862.0], [28.6, 4869.0], [28.7, 4869.0], [28.8, 4870.0], [28.9, 4873.0], [29.0, 4873.0], [29.1, 4874.0], [29.2, 4874.0], [29.3, 4879.0], [29.4, 4884.0], [29.5, 4884.0], [29.6, 4886.0], [29.7, 4889.0], [29.8, 4889.0], [29.9, 4894.0], [30.0, 4895.0], [30.1, 4895.0], [30.2, 4896.0], [30.3, 4897.0], [30.4, 4897.0], [30.5, 4908.0], [30.6, 4914.0], [30.7, 4914.0], [30.8, 4915.0], [30.9, 4915.0], [31.0, 4915.0], [31.1, 4920.0], [31.2, 4922.0], [31.3, 4922.0], [31.4, 4922.0], [31.5, 4926.0], [31.6, 4926.0], [31.7, 4926.0], [31.8, 4926.0], [31.9, 4926.0], [32.0, 4929.0], [32.1, 4929.0], [32.2, 4931.0], [32.3, 4932.0], [32.4, 4932.0], [32.5, 4937.0], [32.6, 4940.0], [32.7, 4940.0], [32.8, 4940.0], [32.9, 4946.0], [33.0, 4946.0], [33.1, 4949.0], [33.2, 4952.0], [33.3, 4952.0], [33.4, 4953.0], [33.5, 4958.0], [33.6, 4958.0], [33.7, 4961.0], [33.8, 4968.0], [33.9, 4968.0], [34.0, 4970.0], [34.1, 4978.0], [34.2, 4978.0], [34.3, 4978.0], [34.4, 4978.0], [34.5, 4978.0], [34.6, 4981.0], [34.7, 4981.0], [34.8, 4984.0], [34.9, 4992.0], [35.0, 4992.0], [35.1, 4993.0], [35.2, 4995.0], [35.3, 4995.0], [35.4, 4998.0], [35.5, 5001.0], [35.6, 5001.0], [35.7, 5001.0], [35.8, 5005.0], [35.9, 5005.0], [36.0, 5007.0], [36.1, 5010.0], [36.2, 5010.0], [36.3, 5012.0], [36.4, 5016.0], [36.5, 5016.0], [36.6, 5021.0], [36.7, 5022.0], [36.8, 5022.0], [36.9, 5023.0], [37.0, 5023.0], [37.1, 5024.0], [37.2, 5025.0], [37.3, 5025.0], [37.4, 5026.0], [37.5, 5030.0], [37.6, 5030.0], [37.7, 5032.0], [37.8, 5041.0], [37.9, 5041.0], [38.0, 5041.0], [38.1, 5041.0], [38.2, 5041.0], [38.3, 5041.0], [38.4, 5047.0], [38.5, 5047.0], [38.6, 5050.0], [38.7, 5050.0], [38.8, 5050.0], [38.9, 5053.0], [39.0, 5053.0], [39.1, 5053.0], [39.2, 5053.0], [39.3, 5054.0], [39.4, 5054.0], [39.5, 5058.0], [39.6, 5058.0], [39.7, 5064.0], [39.8, 5064.0], [39.9, 5064.0], [40.0, 5068.0], [40.1, 5070.0], [40.2, 5070.0], [40.3, 5070.0], [40.4, 5074.0], [40.5, 5074.0], [40.6, 5078.0], [40.7, 5080.0], [40.8, 5080.0], [40.9, 5080.0], [41.0, 5080.0], [41.1, 5080.0], [41.2, 5082.0], [41.3, 5084.0], [41.4, 5084.0], [41.5, 5086.0], [41.6, 5089.0], [41.7, 5089.0], [41.8, 5090.0], [41.9, 5093.0], [42.0, 5093.0], [42.1, 5096.0], [42.2, 5096.0], [42.3, 5105.0], [42.4, 5106.0], [42.5, 5106.0], [42.6, 5106.0], [42.7, 5107.0], [42.8, 5107.0], [42.9, 5107.0], [43.0, 5108.0], [43.1, 5108.0], [43.2, 5109.0], [43.3, 5112.0], [43.4, 5112.0], [43.5, 5113.0], [43.6, 5117.0], [43.7, 5117.0], [43.8, 5123.0], [43.9, 5124.0], [44.0, 5124.0], [44.1, 5125.0], [44.2, 5127.0], [44.3, 5127.0], [44.4, 5131.0], [44.5, 5131.0], [44.6, 5131.0], [44.7, 5134.0], [44.8, 5134.0], [44.9, 5135.0], [45.0, 5137.0], [45.1, 5137.0], [45.2, 5137.0], [45.3, 5140.0], [45.4, 5140.0], [45.5, 5140.0], [45.6, 5144.0], [45.7, 5144.0], [45.8, 5144.0], [45.9, 5146.0], [46.0, 5146.0], [46.1, 5147.0], [46.2, 5150.0], [46.3, 5150.0], [46.4, 5151.0], [46.5, 5155.0], [46.6, 5155.0], [46.7, 5155.0], [46.8, 5156.0], [46.9, 5156.0], [47.0, 5156.0], [47.1, 5156.0], [47.2, 5156.0], [47.3, 5161.0], [47.4, 5161.0], [47.5, 5162.0], [47.6, 5162.0], [47.7, 5162.0], [47.8, 5170.0], [47.9, 5173.0], [48.0, 5173.0], [48.1, 5175.0], [48.2, 5179.0], [48.3, 5179.0], [48.4, 5180.0], [48.5, 5180.0], [48.6, 5180.0], [48.7, 5188.0], [48.8, 5189.0], [48.9, 5189.0], [49.0, 5195.0], [49.1, 5200.0], [49.2, 5200.0], [49.3, 5203.0], [49.4, 5205.0], [49.5, 5205.0], [49.6, 5207.0], [49.7, 5207.0], [49.8, 5207.0], [49.9, 5208.0], [50.0, 5210.0], [50.1, 5210.0], [50.2, 5211.0], [50.3, 5211.0], [50.4, 5213.0], [50.5, 5219.0], [50.6, 5219.0], [50.7, 5220.0], [50.8, 5221.0], [50.9, 5221.0], [51.0, 5222.0], [51.1, 5233.0], [51.2, 5233.0], [51.3, 5233.0], [51.4, 5234.0], [51.5, 5234.0], [51.6, 5234.0], [51.7, 5237.0], [51.8, 5237.0], [51.9, 5238.0], [52.0, 5240.0], [52.1, 5240.0], [52.2, 5241.0], [52.3, 5241.0], [52.4, 5241.0], [52.5, 5242.0], [52.6, 5242.0], [52.7, 5242.0], [52.8, 5243.0], [52.9, 5243.0], [53.0, 5244.0], [53.1, 5253.0], [53.2, 5253.0], [53.3, 5255.0], [53.4, 5259.0], [53.5, 5259.0], [53.6, 5260.0], [53.7, 5262.0], [53.8, 5262.0], [53.9, 5263.0], [54.0, 5263.0], [54.1, 5263.0], [54.2, 5264.0], [54.3, 5265.0], [54.4, 5265.0], [54.5, 5266.0], [54.6, 5268.0], [54.7, 5268.0], [54.8, 5273.0], [54.9, 5273.0], [55.0, 5273.0], [55.1, 5275.0], [55.2, 5277.0], [55.3, 5277.0], [55.4, 5279.0], [55.5, 5279.0], [55.6, 5280.0], [55.7, 5280.0], [55.8, 5280.0], [55.9, 5281.0], [56.0, 5281.0], [56.1, 5281.0], [56.2, 5285.0], [56.3, 5285.0], [56.4, 5285.0], [56.5, 5287.0], [56.6, 5287.0], [56.7, 5287.0], [56.8, 5294.0], [56.9, 5295.0], [57.0, 5295.0], [57.1, 5299.0], [57.2, 5300.0], [57.3, 5300.0], [57.4, 5302.0], [57.5, 5308.0], [57.6, 5308.0], [57.7, 5310.0], [57.8, 5315.0], [57.9, 5315.0], [58.0, 5315.0], [58.1, 5315.0], [58.2, 5317.0], [58.3, 5328.0], [58.4, 5328.0], [58.5, 5328.0], [58.6, 5335.0], [58.7, 5335.0], [58.8, 5338.0], [58.9, 5340.0], [59.0, 5340.0], [59.1, 5342.0], [59.2, 5343.0], [59.3, 5343.0], [59.4, 5348.0], [59.5, 5350.0], [59.6, 5350.0], [59.7, 5355.0], [59.8, 5356.0], [59.9, 5356.0], [60.0, 5359.0], [60.1, 5364.0], [60.2, 5364.0], [60.3, 5365.0], [60.4, 5367.0], [60.5, 5367.0], [60.6, 5369.0], [60.7, 5369.0], [60.8, 5370.0], [60.9, 5374.0], [61.0, 5374.0], [61.1, 5377.0], [61.2, 5379.0], [61.3, 5379.0], [61.4, 5380.0], [61.5, 5384.0], [61.6, 5384.0], [61.7, 5386.0], [61.8, 5388.0], [61.9, 5388.0], [62.0, 5389.0], [62.1, 5390.0], [62.2, 5390.0], [62.3, 5391.0], [62.4, 5391.0], [62.5, 5391.0], [62.6, 5391.0], [62.7, 5392.0], [62.8, 5392.0], [62.9, 5394.0], [63.0, 5399.0], [63.1, 5399.0], [63.2, 5400.0], [63.3, 5400.0], [63.4, 5400.0], [63.5, 5402.0], [63.6, 5402.0], [63.7, 5407.0], [63.8, 5410.0], [63.9, 5410.0], [64.0, 5412.0], [64.1, 5413.0], [64.2, 5413.0], [64.3, 5413.0], [64.4, 5415.0], [64.5, 5415.0], [64.6, 5416.0], [64.7, 5419.0], [64.8, 5419.0], [64.9, 5419.0], [65.0, 5422.0], [65.1, 5422.0], [65.2, 5425.0], [65.3, 5426.0], [65.4, 5426.0], [65.5, 5429.0], [65.6, 5430.0], [65.7, 5430.0], [65.8, 5431.0], [65.9, 5431.0], [66.0, 5435.0], [66.1, 5435.0], [66.2, 5435.0], [66.3, 5435.0], [66.4, 5435.0], [66.5, 5435.0], [66.6, 5436.0], [66.7, 5442.0], [66.8, 5442.0], [66.9, 5444.0], [67.0, 5447.0], [67.1, 5447.0], [67.2, 5448.0], [67.3, 5450.0], [67.4, 5450.0], [67.5, 5451.0], [67.6, 5454.0], [67.7, 5454.0], [67.8, 5463.0], [67.9, 5467.0], [68.0, 5467.0], [68.1, 5471.0], [68.2, 5473.0], [68.3, 5473.0], [68.4, 5476.0], [68.5, 5476.0], [68.6, 5479.0], [68.7, 5479.0], [68.8, 5479.0], [68.9, 5480.0], [69.0, 5482.0], [69.1, 5482.0], [69.2, 5482.0], [69.3, 5485.0], [69.4, 5485.0], [69.5, 5488.0], [69.6, 5489.0], [69.7, 5489.0], [69.8, 5490.0], [69.9, 5492.0], [70.0, 5492.0], [70.1, 5495.0], [70.2, 5495.0], [70.3, 5495.0], [70.4, 5498.0], [70.5, 5505.0], [70.6, 5505.0], [70.7, 5507.0], [70.8, 5507.0], [70.9, 5507.0], [71.0, 5512.0], [71.1, 5512.0], [71.2, 5514.0], [71.3, 5514.0], [71.4, 5514.0], [71.5, 5517.0], [71.6, 5521.0], [71.7, 5521.0], [71.8, 5531.0], [71.9, 5533.0], [72.0, 5533.0], [72.1, 5535.0], [72.2, 5536.0], [72.3, 5536.0], [72.4, 5536.0], [72.5, 5536.0], [72.6, 5536.0], [72.7, 5537.0], [72.8, 5538.0], [72.9, 5538.0], [73.0, 5538.0], [73.1, 5541.0], [73.2, 5541.0], [73.3, 5547.0], [73.4, 5548.0], [73.5, 5548.0], [73.6, 5556.0], [73.7, 5556.0], [73.8, 5566.0], [73.9, 5566.0], [74.0, 5566.0], [74.1, 5570.0], [74.2, 5573.0], [74.3, 5573.0], [74.4, 5575.0], [74.5, 5577.0], [74.6, 5577.0], [74.7, 5579.0], [74.8, 5584.0], [74.9, 5584.0], [75.0, 5585.0], [75.1, 5586.0], [75.2, 5586.0], [75.3, 5590.0], [75.4, 5598.0], [75.5, 5598.0], [75.6, 5601.0], [75.7, 5607.0], [75.8, 5607.0], [75.9, 5610.0], [76.0, 5610.0], [76.1, 5610.0], [76.2, 5611.0], [76.3, 5625.0], [76.4, 5625.0], [76.5, 5626.0], [76.6, 5626.0], [76.7, 5627.0], [76.8, 5629.0], [76.9, 5629.0], [77.0, 5630.0], [77.1, 5630.0], [77.2, 5630.0], [77.3, 5630.0], [77.4, 5631.0], [77.5, 5631.0], [77.6, 5631.0], [77.7, 5631.0], [77.8, 5631.0], [77.9, 5633.0], [78.0, 5633.0], [78.1, 5633.0], [78.2, 5633.0], [78.3, 5634.0], [78.4, 5634.0], [78.5, 5640.0], [78.6, 5643.0], [78.7, 5643.0], [78.8, 5644.0], [78.9, 5646.0], [79.0, 5646.0], [79.1, 5648.0], [79.2, 5648.0], [79.3, 5649.0], [79.4, 5652.0], [79.5, 5652.0], [79.6, 5658.0], [79.7, 5664.0], [79.8, 5664.0], [79.9, 5665.0], [80.0, 5669.0], [80.1, 5669.0], [80.2, 5669.0], [80.3, 5672.0], [80.4, 5672.0], [80.5, 5673.0], [80.6, 5675.0], [80.7, 5675.0], [80.8, 5687.0], [80.9, 5687.0], [81.0, 5687.0], [81.1, 5688.0], [81.2, 5693.0], [81.3, 5693.0], [81.4, 5695.0], [81.5, 5710.0], [81.6, 5710.0], [81.7, 5719.0], [81.8, 5719.0], [81.9, 5723.0], [82.0, 5732.0], [82.1, 5732.0], [82.2, 5734.0], [82.3, 5738.0], [82.4, 5738.0], [82.5, 5742.0], [82.6, 5746.0], [82.7, 5746.0], [82.8, 5748.0], [82.9, 5750.0], [83.0, 5750.0], [83.1, 5750.0], [83.2, 5754.0], [83.3, 5754.0], [83.4, 5758.0], [83.5, 5759.0], [83.6, 5759.0], [83.7, 5760.0], [83.8, 5761.0], [83.9, 5761.0], [84.0, 5768.0], [84.1, 5768.0], [84.2, 5768.0], [84.3, 5770.0], [84.4, 5770.0], [84.5, 5770.0], [84.6, 5785.0], [84.7, 5785.0], [84.8, 5795.0], [84.9, 5795.0], [85.0, 5795.0], [85.1, 5797.0], [85.2, 5816.0], [85.3, 5816.0], [85.4, 5818.0], [85.5, 5819.0], [85.6, 5819.0], [85.7, 5823.0], [85.8, 5829.0], [85.9, 5829.0], [86.0, 5838.0], [86.1, 5844.0], [86.2, 5844.0], [86.3, 5844.0], [86.4, 5847.0], [86.5, 5847.0], [86.6, 5847.0], [86.7, 5847.0], [86.8, 5847.0], [86.9, 5847.0], [87.0, 5847.0], [87.1, 5851.0], [87.2, 5857.0], [87.3, 5857.0], [87.4, 5858.0], [87.5, 5861.0], [87.6, 5861.0], [87.7, 5861.0], [87.8, 5862.0], [87.9, 5862.0], [88.0, 5864.0], [88.1, 5864.0], [88.2, 5864.0], [88.3, 5864.0], [88.4, 5869.0], [88.5, 5869.0], [88.6, 5870.0], [88.7, 5877.0], [88.8, 5877.0], [88.9, 5891.0], [89.0, 5895.0], [89.1, 5895.0], [89.2, 5897.0], [89.3, 5905.0], [89.4, 5905.0], [89.5, 5921.0], [89.6, 5921.0], [89.7, 5935.0], [89.8, 5951.0], [89.9, 5951.0], [90.0, 5957.0], [90.1, 5960.0], [90.2, 5960.0], [90.3, 5977.0], [90.4, 5982.0], [90.5, 5982.0], [90.6, 5983.0], [90.7, 5985.0], [90.8, 5985.0], [90.9, 5989.0], [91.0, 5990.0], [91.1, 5990.0], [91.2, 5998.0], [91.3, 6009.0], [91.4, 6009.0], [91.5, 6018.0], [91.6, 6036.0], [91.7, 6036.0], [91.8, 6042.0], [91.9, 6055.0], [92.0, 6055.0], [92.1, 6058.0], [92.2, 6058.0], [92.3, 6062.0], [92.4, 6063.0], [92.5, 6063.0], [92.6, 6063.0], [92.7, 6064.0], [92.8, 6064.0], [92.9, 6064.0], [93.0, 6081.0], [93.1, 6081.0], [93.2, 6082.0], [93.3, 6105.0], [93.4, 6105.0], [93.5, 6122.0], [93.6, 6136.0], [93.7, 6136.0], [93.8, 6146.0], [93.9, 6148.0], [94.0, 6148.0], [94.1, 6157.0], [94.2, 6167.0], [94.3, 6167.0], [94.4, 6171.0], [94.5, 6191.0], [94.6, 6191.0], [94.7, 6197.0], [94.8, 6197.0], [94.9, 6199.0], [95.0, 6256.0], [95.1, 6256.0], [95.2, 6259.0], [95.3, 6267.0], [95.4, 6267.0], [95.5, 6279.0], [95.6, 6285.0], [95.7, 6285.0], [95.8, 6287.0], [95.9, 6288.0], [96.0, 6288.0], [96.1, 6291.0], [96.2, 6339.0], [96.3, 6339.0], [96.4, 6375.0], [96.5, 6377.0], [96.6, 6377.0], [96.7, 6400.0], [96.8, 6429.0], [96.9, 6429.0], [97.0, 6433.0], [97.1, 6434.0], [97.2, 6434.0], [97.3, 6441.0], [97.4, 6441.0], [97.5, 6449.0], [97.6, 6459.0], [97.7, 6459.0], [97.8, 6500.0], [97.9, 6528.0], [98.0, 6528.0], [98.1, 6533.0], [98.2, 6578.0], [98.3, 6578.0], [98.4, 6652.0], [98.5, 6712.0], [98.6, 6712.0], [98.7, 6714.0], [98.8, 6718.0], [98.9, 6718.0], [99.0, 6807.0], [99.1, 6877.0], [99.2, 6877.0], [99.3, 6891.0], [99.4, 6922.0], [99.5, 6922.0], [99.6, 7027.0], [99.7, 7288.0], [99.8, 7288.0], [99.9, 7337.0], [100.0, 7337.0]], "isOverall": false, "label": "Read News", "isController": true}, {"data": [[0.0, 41.0], [0.1, 41.0], [0.2, 44.0], [0.3, 44.0], [0.4, 45.0], [0.5, 46.0], [0.6, 46.0], [0.7, 46.0], [0.8, 47.0], [0.9, 47.0], [1.0, 47.0], [1.1, 47.0], [1.2, 47.0], [1.3, 47.0], [1.4, 48.0], [1.5, 48.0], [1.6, 48.0], [1.7, 48.0], [1.8, 48.0], [1.9, 48.0], [2.0, 49.0], [2.1, 49.0], [2.2, 49.0], [2.3, 49.0], [2.4, 49.0], [2.5, 50.0], [2.6, 50.0], [2.7, 50.0], [2.8, 50.0], [2.9, 50.0], [3.0, 50.0], [3.1, 51.0], [3.2, 51.0], [3.3, 52.0], [3.4, 53.0], [3.5, 53.0], [3.6, 56.0], [3.7, 56.0], [3.8, 56.0], [3.9, 56.0], [4.0, 56.0], [4.1, 56.0], [4.2, 56.0], [4.3, 57.0], [4.4, 57.0], [4.5, 57.0], [4.6, 57.0], [4.7, 57.0], [4.8, 57.0], [4.9, 57.0], [5.0, 57.0], [5.1, 58.0], [5.2, 58.0], [5.3, 58.0], [5.4, 58.0], [5.5, 58.0], [5.6, 58.0], [5.7, 59.0], [5.8, 59.0], [5.9, 59.0], [6.0, 59.0], [6.1, 59.0], [6.2, 59.0], [6.3, 59.0], [6.4, 59.0], [6.5, 59.0], [6.6, 59.0], [6.7, 59.0], [6.8, 59.0], [6.9, 59.0], [7.0, 59.0], [7.1, 59.0], [7.2, 59.0], [7.3, 59.0], [7.4, 59.0], [7.5, 60.0], [7.6, 60.0], [7.7, 60.0], [7.8, 61.0], [7.9, 61.0], [8.0, 61.0], [8.1, 61.0], [8.2, 61.0], [8.3, 61.0], [8.4, 61.0], [8.5, 61.0], [8.6, 61.0], [8.7, 61.0], [8.8, 61.0], [8.9, 62.0], [9.0, 62.0], [9.1, 62.0], [9.2, 62.0], [9.3, 62.0], [9.4, 62.0], [9.5, 62.0], [9.6, 62.0], [9.7, 63.0], [9.8, 63.0], [9.9, 63.0], [10.0, 63.0], [10.1, 63.0], [10.2, 63.0], [10.3, 63.0], [10.4, 63.0], [10.5, 63.0], [10.6, 63.0], [10.7, 63.0], [10.8, 63.0], [10.9, 63.0], [11.0, 63.0], [11.1, 64.0], [11.2, 64.0], [11.3, 64.0], [11.4, 64.0], [11.5, 64.0], [11.6, 64.0], [11.7, 64.0], [11.8, 65.0], [11.9, 65.0], [12.0, 65.0], [12.1, 66.0], [12.2, 66.0], [12.3, 66.0], [12.4, 67.0], [12.5, 67.0], [12.6, 67.0], [12.7, 67.0], [12.8, 67.0], [12.9, 67.0], [13.0, 67.0], [13.1, 67.0], [13.2, 67.0], [13.3, 67.0], [13.4, 68.0], [13.5, 68.0], [13.6, 68.0], [13.7, 68.0], [13.8, 68.0], [13.9, 68.0], [14.0, 68.0], [14.1, 68.0], [14.2, 68.0], [14.3, 68.0], [14.4, 68.0], [14.5, 68.0], [14.6, 68.0], [14.7, 69.0], [14.8, 69.0], [14.9, 69.0], [15.0, 69.0], [15.1, 69.0], [15.2, 69.0], [15.3, 70.0], [15.4, 70.0], [15.5, 70.0], [15.6, 70.0], [15.7, 70.0], [15.8, 70.0], [15.9, 70.0], [16.0, 70.0], [16.1, 70.0], [16.2, 70.0], [16.3, 70.0], [16.4, 70.0], [16.5, 70.0], [16.6, 70.0], [16.7, 70.0], [16.8, 70.0], [16.9, 71.0], [17.0, 71.0], [17.1, 71.0], [17.2, 71.0], [17.3, 71.0], [17.4, 71.0], [17.5, 71.0], [17.6, 71.0], [17.7, 71.0], [17.8, 71.0], [17.9, 71.0], [18.0, 71.0], [18.1, 71.0], [18.2, 72.0], [18.3, 72.0], [18.4, 72.0], [18.5, 72.0], [18.6, 72.0], [18.7, 72.0], [18.8, 72.0], [18.9, 72.0], [19.0, 72.0], [19.1, 72.0], [19.2, 72.0], [19.3, 72.0], [19.4, 72.0], [19.5, 72.0], [19.6, 72.0], [19.7, 72.0], [19.8, 72.0], [19.9, 72.0], [20.0, 72.0], [20.1, 72.0], [20.2, 72.0], [20.3, 72.0], [20.4, 72.0], [20.5, 73.0], [20.6, 73.0], [20.7, 73.0], [20.8, 73.0], [20.9, 73.0], [21.0, 73.0], [21.1, 73.0], [21.2, 73.0], [21.3, 74.0], [21.4, 74.0], [21.5, 74.0], [21.6, 74.0], [21.7, 74.0], [21.8, 74.0], [21.9, 74.0], [22.0, 74.0], [22.1, 74.0], [22.2, 74.0], [22.3, 74.0], [22.4, 74.0], [22.5, 75.0], [22.6, 75.0], [22.7, 75.0], [22.8, 75.0], [22.9, 75.0], [23.0, 75.0], [23.1, 76.0], [23.2, 76.0], [23.3, 76.0], [23.4, 77.0], [23.5, 77.0], [23.6, 77.0], [23.7, 77.0], [23.8, 77.0], [23.9, 77.0], [24.0, 77.0], [24.1, 78.0], [24.2, 78.0], [24.3, 78.0], [24.4, 78.0], [24.5, 79.0], [24.6, 79.0], [24.7, 79.0], [24.8, 79.0], [24.9, 79.0], [25.0, 79.0], [25.1, 79.0], [25.2, 79.0], [25.3, 79.0], [25.4, 79.0], [25.5, 79.0], [25.6, 79.0], [25.7, 80.0], [25.8, 80.0], [25.9, 80.0], [26.0, 80.0], [26.1, 80.0], [26.2, 80.0], [26.3, 80.0], [26.4, 80.0], [26.5, 80.0], [26.6, 80.0], [26.7, 80.0], [26.8, 80.0], [26.9, 80.0], [27.0, 80.0], [27.1, 81.0], [27.2, 81.0], [27.3, 81.0], [27.4, 81.0], [27.5, 81.0], [27.6, 81.0], [27.7, 81.0], [27.8, 81.0], [27.9, 81.0], [28.0, 81.0], [28.1, 81.0], [28.2, 81.0], [28.3, 81.0], [28.4, 81.0], [28.5, 81.0], [28.6, 81.0], [28.7, 81.0], [28.8, 82.0], [28.9, 82.0], [29.0, 82.0], [29.1, 82.0], [29.2, 82.0], [29.3, 82.0], [29.4, 82.0], [29.5, 82.0], [29.6, 82.0], [29.7, 82.0], [29.8, 82.0], [29.9, 82.0], [30.0, 82.0], [30.1, 82.0], [30.2, 82.0], [30.3, 82.0], [30.4, 82.0], [30.5, 83.0], [30.6, 83.0], [30.7, 83.0], [30.8, 83.0], [30.9, 83.0], [31.0, 83.0], [31.1, 83.0], [31.2, 84.0], [31.3, 84.0], [31.4, 84.0], [31.5, 84.0], [31.6, 84.0], [31.7, 84.0], [31.8, 84.0], [31.9, 84.0], [32.0, 84.0], [32.1, 84.0], [32.2, 84.0], [32.3, 84.0], [32.4, 84.0], [32.5, 84.0], [32.6, 85.0], [32.7, 85.0], [32.8, 85.0], [32.9, 85.0], [33.0, 85.0], [33.1, 85.0], [33.2, 85.0], [33.3, 85.0], [33.4, 85.0], [33.5, 86.0], [33.6, 86.0], [33.7, 86.0], [33.8, 86.0], [33.9, 86.0], [34.0, 86.0], [34.1, 86.0], [34.2, 86.0], [34.3, 86.0], [34.4, 86.0], [34.5, 86.0], [34.6, 87.0], [34.7, 87.0], [34.8, 87.0], [34.9, 87.0], [35.0, 87.0], [35.1, 87.0], [35.2, 88.0], [35.3, 88.0], [35.4, 88.0], [35.5, 88.0], [35.6, 88.0], [35.7, 88.0], [35.8, 88.0], [35.9, 88.0], [36.0, 88.0], [36.1, 88.0], [36.2, 88.0], [36.3, 89.0], [36.4, 89.0], [36.5, 89.0], [36.6, 89.0], [36.7, 89.0], [36.8, 89.0], [36.9, 90.0], [37.0, 90.0], [37.1, 90.0], [37.2, 90.0], [37.3, 90.0], [37.4, 90.0], [37.5, 90.0], [37.6, 90.0], [37.7, 90.0], [37.8, 90.0], [37.9, 90.0], [38.0, 91.0], [38.1, 91.0], [38.2, 91.0], [38.3, 91.0], [38.4, 92.0], [38.5, 92.0], [38.6, 92.0], [38.7, 92.0], [38.8, 92.0], [38.9, 92.0], [39.0, 92.0], [39.1, 92.0], [39.2, 93.0], [39.3, 93.0], [39.4, 93.0], [39.5, 93.0], [39.6, 93.0], [39.7, 93.0], [39.8, 93.0], [39.9, 93.0], [40.0, 94.0], [40.1, 94.0], [40.2, 94.0], [40.3, 94.0], [40.4, 94.0], [40.5, 94.0], [40.6, 94.0], [40.7, 94.0], [40.8, 94.0], [40.9, 94.0], [41.0, 94.0], [41.1, 94.0], [41.2, 94.0], [41.3, 95.0], [41.4, 95.0], [41.5, 95.0], [41.6, 95.0], [41.7, 95.0], [41.8, 95.0], [41.9, 95.0], [42.0, 95.0], [42.1, 95.0], [42.2, 95.0], [42.3, 95.0], [42.4, 95.0], [42.5, 95.0], [42.6, 95.0], [42.7, 95.0], [42.8, 95.0], [42.9, 95.0], [43.0, 95.0], [43.1, 95.0], [43.2, 96.0], [43.3, 97.0], [43.4, 97.0], [43.5, 97.0], [43.6, 97.0], [43.7, 97.0], [43.8, 97.0], [43.9, 97.0], [44.0, 97.0], [44.1, 97.0], [44.2, 98.0], [44.3, 98.0], [44.4, 98.0], [44.5, 98.0], [44.6, 98.0], [44.7, 98.0], [44.8, 98.0], [44.9, 99.0], [45.0, 99.0], [45.1, 99.0], [45.2, 99.0], [45.3, 100.0], [45.4, 100.0], [45.5, 100.0], [45.6, 100.0], [45.7, 100.0], [45.8, 101.0], [45.9, 101.0], [46.0, 101.0], [46.1, 102.0], [46.2, 102.0], [46.3, 102.0], [46.4, 102.0], [46.5, 102.0], [46.6, 102.0], [46.7, 103.0], [46.8, 103.0], [46.9, 103.0], [47.0, 103.0], [47.1, 103.0], [47.2, 103.0], [47.3, 104.0], [47.4, 104.0], [47.5, 104.0], [47.6, 104.0], [47.7, 104.0], [47.8, 104.0], [47.9, 104.0], [48.0, 104.0], [48.1, 104.0], [48.2, 104.0], [48.3, 104.0], [48.4, 104.0], [48.5, 105.0], [48.6, 105.0], [48.7, 105.0], [48.8, 106.0], [48.9, 106.0], [49.0, 107.0], [49.1, 107.0], [49.2, 107.0], [49.3, 108.0], [49.4, 108.0], [49.5, 108.0], [49.6, 109.0], [49.7, 109.0], [49.8, 109.0], [49.9, 110.0], [50.0, 110.0], [50.1, 110.0], [50.2, 110.0], [50.3, 110.0], [50.4, 110.0], [50.5, 111.0], [50.6, 111.0], [50.7, 111.0], [50.8, 111.0], [50.9, 111.0], [51.0, 111.0], [51.1, 112.0], [51.2, 112.0], [51.3, 113.0], [51.4, 113.0], [51.5, 113.0], [51.6, 113.0], [51.7, 114.0], [51.8, 114.0], [51.9, 114.0], [52.0, 114.0], [52.1, 114.0], [52.2, 114.0], [52.3, 115.0], [52.4, 115.0], [52.5, 115.0], [52.6, 115.0], [52.7, 115.0], [52.8, 115.0], [52.9, 115.0], [53.0, 116.0], [53.1, 116.0], [53.2, 116.0], [53.3, 117.0], [53.4, 119.0], [53.5, 119.0], [53.6, 120.0], [53.7, 121.0], [53.8, 121.0], [53.9, 123.0], [54.0, 123.0], [54.1, 123.0], [54.2, 124.0], [54.3, 124.0], [54.4, 124.0], [54.5, 125.0], [54.6, 126.0], [54.7, 126.0], [54.8, 126.0], [54.9, 127.0], [55.0, 127.0], [55.1, 128.0], [55.2, 129.0], [55.3, 129.0], [55.4, 129.0], [55.5, 129.0], [55.6, 131.0], [55.7, 132.0], [55.8, 132.0], [55.9, 132.0], [56.0, 132.0], [56.1, 132.0], [56.2, 134.0], [56.3, 136.0], [56.4, 136.0], [56.5, 138.0], [56.6, 138.0], [56.7, 138.0], [56.8, 138.0], [56.9, 139.0], [57.0, 139.0], [57.1, 140.0], [57.2, 140.0], [57.3, 140.0], [57.4, 140.0], [57.5, 141.0], [57.6, 141.0], [57.7, 142.0], [57.8, 146.0], [57.9, 146.0], [58.0, 147.0], [58.1, 147.0], [58.2, 149.0], [58.3, 149.0], [58.4, 149.0], [58.5, 150.0], [58.6, 150.0], [58.7, 150.0], [58.8, 152.0], [58.9, 152.0], [59.0, 152.0], [59.1, 153.0], [59.2, 154.0], [59.3, 154.0], [59.4, 154.0], [59.5, 155.0], [59.6, 155.0], [59.7, 156.0], [59.8, 156.0], [59.9, 156.0], [60.0, 156.0], [60.1, 157.0], [60.2, 157.0], [60.3, 157.0], [60.4, 158.0], [60.5, 158.0], [60.6, 159.0], [60.7, 159.0], [60.8, 159.0], [60.9, 159.0], [61.0, 159.0], [61.1, 159.0], [61.2, 161.0], [61.3, 161.0], [61.4, 161.0], [61.5, 162.0], [61.6, 162.0], [61.7, 162.0], [61.8, 162.0], [61.9, 162.0], [62.0, 163.0], [62.1, 163.0], [62.2, 163.0], [62.3, 163.0], [62.4, 164.0], [62.5, 164.0], [62.6, 169.0], [62.7, 170.0], [62.8, 170.0], [62.9, 170.0], [63.0, 171.0], [63.1, 171.0], [63.2, 174.0], [63.3, 174.0], [63.4, 175.0], [63.5, 175.0], [63.6, 175.0], [63.7, 176.0], [63.8, 177.0], [63.9, 177.0], [64.0, 179.0], [64.1, 183.0], [64.2, 183.0], [64.3, 185.0], [64.4, 186.0], [64.5, 186.0], [64.6, 187.0], [64.7, 187.0], [64.8, 187.0], [64.9, 187.0], [65.0, 189.0], [65.1, 189.0], [65.2, 192.0], [65.3, 199.0], [65.4, 199.0], [65.5, 217.0], [65.6, 217.0], [65.7, 217.0], [65.8, 218.0], [65.9, 218.0], [66.0, 219.0], [66.1, 225.0], [66.2, 225.0], [66.3, 227.0], [66.4, 227.0], [66.5, 227.0], [66.6, 227.0], [66.7, 227.0], [66.8, 227.0], [66.9, 227.0], [67.0, 231.0], [67.1, 231.0], [67.2, 243.0], [67.3, 249.0], [67.4, 249.0], [67.5, 250.0], [67.6, 250.0], [67.7, 250.0], [67.8, 250.0], [67.9, 251.0], [68.0, 251.0], [68.1, 254.0], [68.2, 256.0], [68.3, 256.0], [68.4, 256.0], [68.5, 256.0], [68.6, 256.0], [68.7, 257.0], [68.8, 257.0], [68.9, 257.0], [69.0, 259.0], [69.1, 259.0], [69.2, 261.0], [69.3, 262.0], [69.4, 262.0], [69.5, 266.0], [69.6, 267.0], [69.7, 267.0], [69.8, 267.0], [69.9, 267.0], [70.0, 267.0], [70.1, 268.0], [70.2, 269.0], [70.3, 269.0], [70.4, 270.0], [70.5, 270.0], [70.6, 270.0], [70.7, 270.0], [70.8, 270.0], [70.9, 270.0], [71.0, 272.0], [71.1, 272.0], [71.2, 272.0], [71.3, 273.0], [71.4, 273.0], [71.5, 273.0], [71.6, 274.0], [71.7, 274.0], [71.8, 278.0], [71.9, 278.0], [72.0, 278.0], [72.1, 278.0], [72.2, 278.0], [72.3, 278.0], [72.4, 279.0], [72.5, 280.0], [72.6, 280.0], [72.7, 280.0], [72.8, 281.0], [72.9, 281.0], [73.0, 283.0], [73.1, 283.0], [73.2, 283.0], [73.3, 285.0], [73.4, 285.0], [73.5, 285.0], [73.6, 285.0], [73.7, 285.0], [73.8, 286.0], [73.9, 286.0], [74.0, 286.0], [74.1, 288.0], [74.2, 290.0], [74.3, 290.0], [74.4, 293.0], [74.5, 297.0], [74.6, 297.0], [74.7, 298.0], [74.8, 304.0], [74.9, 304.0], [75.0, 306.0], [75.1, 307.0], [75.2, 307.0], [75.3, 309.0], [75.4, 309.0], [75.5, 309.0], [75.6, 309.0], [75.7, 310.0], [75.8, 310.0], [75.9, 313.0], [76.0, 314.0], [76.1, 314.0], [76.2, 314.0], [76.3, 314.0], [76.4, 314.0], [76.5, 315.0], [76.6, 315.0], [76.7, 318.0], [76.8, 318.0], [76.9, 318.0], [77.0, 319.0], [77.1, 319.0], [77.2, 319.0], [77.3, 319.0], [77.4, 320.0], [77.5, 320.0], [77.6, 322.0], [77.7, 325.0], [77.8, 325.0], [77.9, 326.0], [78.0, 330.0], [78.1, 330.0], [78.2, 331.0], [78.3, 332.0], [78.4, 332.0], [78.5, 333.0], [78.6, 333.0], [78.7, 333.0], [78.8, 334.0], [78.9, 334.0], [79.0, 334.0], [79.1, 334.0], [79.2, 334.0], [79.3, 335.0], [79.4, 336.0], [79.5, 336.0], [79.6, 342.0], [79.7, 343.0], [79.8, 343.0], [79.9, 343.0], [80.0, 343.0], [80.1, 343.0], [80.2, 343.0], [80.3, 344.0], [80.4, 344.0], [80.5, 345.0], [80.6, 346.0], [80.7, 346.0], [80.8, 346.0], [80.9, 346.0], [81.0, 346.0], [81.1, 348.0], [81.2, 350.0], [81.3, 350.0], [81.4, 353.0], [81.5, 354.0], [81.6, 354.0], [81.7, 355.0], [81.8, 355.0], [81.9, 355.0], [82.0, 359.0], [82.1, 359.0], [82.2, 361.0], [82.3, 363.0], [82.4, 363.0], [82.5, 364.0], [82.6, 366.0], [82.7, 366.0], [82.8, 366.0], [82.9, 367.0], [83.0, 367.0], [83.1, 368.0], [83.2, 373.0], [83.3, 373.0], [83.4, 376.0], [83.5, 378.0], [83.6, 378.0], [83.7, 380.0], [83.8, 380.0], [83.9, 380.0], [84.0, 381.0], [84.1, 381.0], [84.2, 381.0], [84.3, 382.0], [84.4, 382.0], [84.5, 384.0], [84.6, 385.0], [84.7, 385.0], [84.8, 385.0], [84.9, 386.0], [85.0, 386.0], [85.1, 388.0], [85.2, 388.0], [85.3, 388.0], [85.4, 389.0], [85.5, 389.0], [85.6, 389.0], [85.7, 389.0], [85.8, 390.0], [85.9, 390.0], [86.0, 391.0], [86.1, 393.0], [86.2, 393.0], [86.3, 393.0], [86.4, 393.0], [86.5, 393.0], [86.6, 393.0], [86.7, 393.0], [86.8, 393.0], [86.9, 394.0], [87.0, 394.0], [87.1, 395.0], [87.2, 401.0], [87.3, 401.0], [87.4, 403.0], [87.5, 406.0], [87.6, 406.0], [87.7, 410.0], [87.8, 412.0], [87.9, 412.0], [88.0, 413.0], [88.1, 415.0], [88.2, 415.0], [88.3, 430.0], [88.4, 432.0], [88.5, 432.0], [88.6, 432.0], [88.7, 441.0], [88.8, 441.0], [88.9, 444.0], [89.0, 444.0], [89.1, 444.0], [89.2, 448.0], [89.3, 448.0], [89.4, 448.0], [89.5, 449.0], [89.6, 449.0], [89.7, 450.0], [89.8, 454.0], [89.9, 454.0], [90.0, 463.0], [90.1, 466.0], [90.2, 466.0], [90.3, 469.0], [90.4, 472.0], [90.5, 472.0], [90.6, 473.0], [90.7, 474.0], [90.8, 474.0], [90.9, 481.0], [91.0, 484.0], [91.1, 484.0], [91.2, 485.0], [91.3, 487.0], [91.4, 487.0], [91.5, 494.0], [91.6, 500.0], [91.7, 500.0], [91.8, 501.0], [91.9, 502.0], [92.0, 502.0], [92.1, 505.0], [92.2, 505.0], [92.3, 505.0], [92.4, 506.0], [92.5, 506.0], [92.6, 513.0], [92.7, 514.0], [92.8, 514.0], [92.9, 515.0], [93.0, 520.0], [93.1, 520.0], [93.2, 520.0], [93.3, 520.0], [93.4, 520.0], [93.5, 520.0], [93.6, 520.0], [93.7, 520.0], [93.8, 521.0], [93.9, 522.0], [94.0, 522.0], [94.1, 525.0], [94.2, 527.0], [94.3, 527.0], [94.4, 527.0], [94.5, 533.0], [94.6, 533.0], [94.7, 536.0], [94.8, 536.0], [94.9, 541.0], [95.0, 541.0], [95.1, 541.0], [95.2, 543.0], [95.3, 551.0], [95.4, 551.0], [95.5, 551.0], [95.6, 561.0], [95.7, 561.0], [95.8, 578.0], [95.9, 578.0], [96.0, 578.0], [96.1, 615.0], [96.2, 636.0], [96.3, 636.0], [96.4, 638.0], [96.5, 641.0], [96.6, 641.0], [96.7, 644.0], [96.8, 646.0], [96.9, 646.0], [97.0, 648.0], [97.1, 648.0], [97.2, 648.0], [97.3, 660.0], [97.4, 660.0], [97.5, 683.0], [97.6, 705.0], [97.7, 705.0], [97.8, 707.0], [97.9, 753.0], [98.0, 753.0], [98.1, 768.0], [98.2, 830.0], [98.3, 830.0], [98.4, 831.0], [98.5, 831.0], [98.6, 831.0], [98.7, 846.0], [98.8, 865.0], [98.9, 865.0], [99.0, 896.0], [99.1, 927.0], [99.2, 927.0], [99.3, 954.0], [99.4, 973.0], [99.5, 973.0], [99.6, 1044.0], [99.7, 1125.0], [99.8, 1125.0], [99.9, 1486.0], [100.0, 1486.0]], "isOverall": false, "label": "GetNewsList(5)", "isController": false}, {"data": [[0.0, 39.0], [0.1, 39.0], [0.2, 40.0], [0.3, 40.0], [0.4, 43.0], [0.5, 47.0], [0.6, 47.0], [0.7, 49.0], [0.8, 52.0], [0.9, 52.0], [1.0, 53.0], [1.1, 54.0], [1.2, 54.0], [1.3, 54.0], [1.4, 58.0], [1.5, 58.0], [1.6, 58.0], [1.7, 59.0], [1.8, 59.0], [1.9, 60.0], [2.0, 60.0], [2.1, 60.0], [2.2, 60.0], [2.3, 60.0], [2.4, 60.0], [2.5, 61.0], [2.6, 61.0], [2.7, 61.0], [2.8, 62.0], [2.9, 63.0], [3.0, 63.0], [3.1, 63.0], [3.2, 64.0], [3.3, 64.0], [3.4, 64.0], [3.5, 68.0], [3.6, 68.0], [3.7, 68.0], [3.8, 68.0], [3.9, 68.0], [4.0, 69.0], [4.1, 69.0], [4.2, 69.0], [4.3, 72.0], [4.4, 73.0], [4.5, 73.0], [4.6, 74.0], [4.7, 74.0], [4.8, 74.0], [4.9, 74.0], [5.0, 75.0], [5.1, 75.0], [5.2, 77.0], [5.3, 77.0], [5.4, 77.0], [5.5, 78.0], [5.6, 78.0], [5.7, 78.0], [5.8, 78.0], [5.9, 78.0], [6.0, 79.0], [6.1, 79.0], [6.2, 79.0], [6.3, 79.0], [6.4, 79.0], [6.5, 79.0], [6.6, 79.0], [6.7, 79.0], [6.8, 79.0], [6.9, 80.0], [7.0, 80.0], [7.1, 80.0], [7.2, 80.0], [7.3, 81.0], [7.4, 81.0], [7.5, 81.0], [7.6, 81.0], [7.7, 81.0], [7.8, 81.0], [7.9, 81.0], [8.0, 81.0], [8.1, 81.0], [8.2, 81.0], [8.3, 81.0], [8.4, 81.0], [8.5, 82.0], [8.6, 82.0], [8.7, 82.0], [8.8, 82.0], [8.9, 82.0], [9.0, 82.0], [9.1, 82.0], [9.2, 82.0], [9.3, 82.0], [9.4, 82.0], [9.5, 82.0], [9.6, 83.0], [9.7, 83.0], [9.8, 83.0], [9.9, 83.0], [10.0, 83.0], [10.1, 83.0], [10.2, 83.0], [10.3, 83.0], [10.4, 84.0], [10.5, 84.0], [10.6, 84.0], [10.7, 84.0], [10.8, 84.0], [10.9, 84.0], [11.0, 84.0], [11.1, 84.0], [11.2, 84.0], [11.3, 84.0], [11.4, 85.0], [11.5, 85.0], [11.6, 85.0], [11.7, 85.0], [11.8, 85.0], [11.9, 85.0], [12.0, 85.0], [12.1, 85.0], [12.2, 86.0], [12.3, 86.0], [12.4, 86.0], [12.5, 86.0], [12.6, 86.0], [12.7, 86.0], [12.8, 86.0], [12.9, 87.0], [13.0, 87.0], [13.1, 87.0], [13.2, 87.0], [13.3, 87.0], [13.4, 87.0], [13.5, 87.0], [13.6, 87.0], [13.7, 87.0], [13.8, 88.0], [13.9, 88.0], [14.0, 88.0], [14.1, 88.0], [14.2, 88.0], [14.3, 88.0], [14.4, 88.0], [14.5, 88.0], [14.6, 88.0], [14.7, 88.0], [14.8, 88.0], [14.9, 89.0], [15.0, 89.0], [15.1, 89.0], [15.2, 89.0], [15.3, 89.0], [15.4, 89.0], [15.5, 89.0], [15.6, 89.0], [15.7, 90.0], [15.8, 90.0], [15.9, 90.0], [16.0, 90.0], [16.1, 90.0], [16.2, 90.0], [16.3, 90.0], [16.4, 90.0], [16.5, 90.0], [16.6, 90.0], [16.7, 90.0], [16.8, 90.0], [16.9, 90.0], [17.0, 91.0], [17.1, 91.0], [17.2, 91.0], [17.3, 91.0], [17.4, 91.0], [17.5, 91.0], [17.6, 91.0], [17.7, 91.0], [17.8, 91.0], [17.9, 91.0], [18.0, 91.0], [18.1, 92.0], [18.2, 92.0], [18.3, 92.0], [18.4, 92.0], [18.5, 92.0], [18.6, 92.0], [18.7, 92.0], [18.8, 92.0], [18.9, 92.0], [19.0, 92.0], [19.1, 92.0], [19.2, 92.0], [19.3, 92.0], [19.4, 92.0], [19.5, 92.0], [19.6, 92.0], [19.7, 93.0], [19.8, 93.0], [19.9, 93.0], [20.0, 93.0], [20.1, 93.0], [20.2, 93.0], [20.3, 93.0], [20.4, 93.0], [20.5, 93.0], [20.6, 93.0], [20.7, 93.0], [20.8, 93.0], [20.9, 93.0], [21.0, 93.0], [21.1, 93.0], [21.2, 93.0], [21.3, 93.0], [21.4, 94.0], [21.5, 94.0], [21.6, 94.0], [21.7, 94.0], [21.8, 94.0], [21.9, 94.0], [22.0, 94.0], [22.1, 94.0], [22.2, 94.0], [22.3, 94.0], [22.4, 94.0], [22.5, 94.0], [22.6, 95.0], [22.7, 95.0], [22.8, 95.0], [22.9, 95.0], [23.0, 95.0], [23.1, 95.0], [23.2, 95.0], [23.3, 95.0], [23.4, 96.0], [23.5, 96.0], [23.6, 96.0], [23.7, 96.0], [23.8, 96.0], [23.9, 96.0], [24.0, 96.0], [24.1, 97.0], [24.2, 97.0], [24.3, 97.0], [24.4, 97.0], [24.5, 97.0], [24.6, 97.0], [24.7, 97.0], [24.8, 97.0], [24.9, 97.0], [25.0, 97.0], [25.1, 97.0], [25.2, 97.0], [25.3, 97.0], [25.4, 97.0], [25.5, 97.0], [25.6, 97.0], [25.7, 97.0], [25.8, 97.0], [25.9, 97.0], [26.0, 97.0], [26.1, 97.0], [26.2, 97.0], [26.3, 97.0], [26.4, 98.0], [26.5, 98.0], [26.6, 98.0], [26.7, 98.0], [26.8, 98.0], [26.9, 98.0], [27.0, 98.0], [27.1, 98.0], [27.2, 98.0], [27.3, 98.0], [27.4, 98.0], [27.5, 98.0], [27.6, 98.0], [27.7, 98.0], [27.8, 98.0], [27.9, 98.0], [28.0, 98.0], [28.1, 98.0], [28.2, 98.0], [28.3, 98.0], [28.4, 98.0], [28.5, 98.0], [28.6, 98.0], [28.7, 98.0], [28.8, 98.0], [28.9, 98.0], [29.0, 99.0], [29.1, 99.0], [29.2, 99.0], [29.3, 99.0], [29.4, 99.0], [29.5, 99.0], [29.6, 99.0], [29.7, 100.0], [29.8, 100.0], [29.9, 100.0], [30.0, 100.0], [30.1, 100.0], [30.2, 100.0], [30.3, 100.0], [30.4, 100.0], [30.5, 100.0], [30.6, 100.0], [30.7, 100.0], [30.8, 100.0], [30.9, 100.0], [31.0, 101.0], [31.1, 101.0], [31.2, 101.0], [31.3, 101.0], [31.4, 101.0], [31.5, 101.0], [31.6, 101.0], [31.7, 101.0], [31.8, 101.0], [31.9, 101.0], [32.0, 101.0], [32.1, 101.0], [32.2, 101.0], [32.3, 101.0], [32.4, 101.0], [32.5, 101.0], [32.6, 101.0], [32.7, 101.0], [32.8, 101.0], [32.9, 101.0], [33.0, 101.0], [33.1, 102.0], [33.2, 102.0], [33.3, 102.0], [33.4, 102.0], [33.5, 102.0], [33.6, 102.0], [33.7, 102.0], [33.8, 102.0], [33.9, 102.0], [34.0, 102.0], [34.1, 102.0], [34.2, 102.0], [34.3, 102.0], [34.4, 102.0], [34.5, 102.0], [34.6, 103.0], [34.7, 103.0], [34.8, 103.0], [34.9, 103.0], [35.0, 103.0], [35.1, 103.0], [35.2, 103.0], [35.3, 103.0], [35.4, 103.0], [35.5, 103.0], [35.6, 103.0], [35.7, 103.0], [35.8, 103.0], [35.9, 103.0], [36.0, 103.0], [36.1, 103.0], [36.2, 103.0], [36.3, 103.0], [36.4, 104.0], [36.5, 104.0], [36.6, 104.0], [36.7, 104.0], [36.8, 104.0], [36.9, 104.0], [37.0, 104.0], [37.1, 104.0], [37.2, 104.0], [37.3, 104.0], [37.4, 104.0], [37.5, 104.0], [37.6, 105.0], [37.7, 105.0], [37.8, 105.0], [37.9, 105.0], [38.0, 105.0], [38.1, 106.0], [38.2, 106.0], [38.3, 106.0], [38.4, 106.0], [38.5, 106.0], [38.6, 106.0], [38.7, 106.0], [38.8, 107.0], [38.9, 107.0], [39.0, 107.0], [39.1, 107.0], [39.2, 107.0], [39.3, 107.0], [39.4, 107.0], [39.5, 107.0], [39.6, 107.0], [39.7, 107.0], [39.8, 107.0], [39.9, 107.0], [40.0, 107.0], [40.1, 107.0], [40.2, 107.0], [40.3, 107.0], [40.4, 107.0], [40.5, 107.0], [40.6, 107.0], [40.7, 107.0], [40.8, 107.0], [40.9, 107.0], [41.0, 108.0], [41.1, 108.0], [41.2, 108.0], [41.3, 108.0], [41.4, 108.0], [41.5, 108.0], [41.6, 108.0], [41.7, 108.0], [41.8, 108.0], [41.9, 108.0], [42.0, 108.0], [42.1, 108.0], [42.2, 108.0], [42.3, 109.0], [42.4, 109.0], [42.5, 109.0], [42.6, 109.0], [42.7, 109.0], [42.8, 109.0], [42.9, 109.0], [43.0, 109.0], [43.1, 109.0], [43.2, 109.0], [43.3, 109.0], [43.4, 109.0], [43.5, 109.0], [43.6, 109.0], [43.7, 109.0], [43.8, 110.0], [43.9, 110.0], [44.0, 110.0], [44.1, 110.0], [44.2, 110.0], [44.3, 110.0], [44.4, 110.0], [44.5, 110.0], [44.6, 110.0], [44.7, 110.0], [44.8, 110.0], [44.9, 111.0], [45.0, 111.0], [45.1, 111.0], [45.2, 111.0], [45.3, 111.0], [45.4, 111.0], [45.5, 111.0], [45.6, 111.0], [45.7, 111.0], [45.8, 112.0], [45.9, 112.0], [46.0, 112.0], [46.1, 112.0], [46.2, 112.0], [46.3, 113.0], [46.4, 113.0], [46.5, 113.0], [46.6, 113.0], [46.7, 114.0], [46.8, 114.0], [46.9, 114.0], [47.0, 115.0], [47.1, 115.0], [47.2, 115.0], [47.3, 115.0], [47.4, 115.0], [47.5, 115.0], [47.6, 116.0], [47.7, 116.0], [47.8, 116.0], [47.9, 116.0], [48.0, 116.0], [48.1, 116.0], [48.2, 116.0], [48.3, 116.0], [48.4, 116.0], [48.5, 116.0], [48.6, 116.0], [48.7, 116.0], [48.8, 117.0], [48.9, 117.0], [49.0, 117.0], [49.1, 117.0], [49.2, 117.0], [49.3, 117.0], [49.4, 118.0], [49.5, 118.0], [49.6, 118.0], [49.7, 118.0], [49.8, 118.0], [49.9, 118.0], [50.0, 118.0], [50.1, 118.0], [50.2, 119.0], [50.3, 119.0], [50.4, 119.0], [50.5, 119.0], [50.6, 119.0], [50.7, 119.0], [50.8, 119.0], [50.9, 119.0], [51.0, 119.0], [51.1, 120.0], [51.2, 120.0], [51.3, 120.0], [51.4, 120.0], [51.5, 120.0], [51.6, 120.0], [51.7, 120.0], [51.8, 120.0], [51.9, 120.0], [52.0, 120.0], [52.1, 120.0], [52.2, 121.0], [52.3, 121.0], [52.4, 121.0], [52.5, 121.0], [52.6, 121.0], [52.7, 121.0], [52.8, 121.0], [52.9, 121.0], [53.0, 121.0], [53.1, 121.0], [53.2, 122.0], [53.3, 122.0], [53.4, 122.0], [53.5, 122.0], [53.6, 122.0], [53.7, 122.0], [53.8, 122.0], [53.9, 122.0], [54.0, 122.0], [54.1, 122.0], [54.2, 122.0], [54.3, 123.0], [54.4, 124.0], [54.5, 124.0], [54.6, 124.0], [54.7, 126.0], [54.8, 126.0], [54.9, 126.0], [55.0, 126.0], [55.1, 127.0], [55.2, 127.0], [55.3, 127.0], [55.4, 127.0], [55.5, 127.0], [55.6, 127.0], [55.7, 127.0], [55.8, 127.0], [55.9, 127.0], [56.0, 128.0], [56.1, 128.0], [56.2, 128.0], [56.3, 128.0], [56.4, 129.0], [56.5, 129.0], [56.6, 129.0], [56.7, 129.0], [56.8, 129.0], [56.9, 129.0], [57.0, 129.0], [57.1, 129.0], [57.2, 130.0], [57.3, 130.0], [57.4, 130.0], [57.5, 130.0], [57.6, 131.0], [57.7, 131.0], [57.8, 131.0], [57.9, 131.0], [58.0, 131.0], [58.1, 132.0], [58.2, 132.0], [58.3, 132.0], [58.4, 132.0], [58.5, 132.0], [58.6, 132.0], [58.7, 132.0], [58.8, 132.0], [58.9, 132.0], [59.0, 133.0], [59.1, 133.0], [59.2, 133.0], [59.3, 133.0], [59.4, 133.0], [59.5, 133.0], [59.6, 137.0], [59.7, 138.0], [59.8, 138.0], [59.9, 139.0], [60.0, 139.0], [60.1, 139.0], [60.2, 139.0], [60.3, 139.0], [60.4, 140.0], [60.5, 140.0], [60.6, 140.0], [60.7, 141.0], [60.8, 142.0], [60.9, 142.0], [61.0, 142.0], [61.1, 143.0], [61.2, 143.0], [61.3, 143.0], [61.4, 143.0], [61.5, 143.0], [61.6, 143.0], [61.7, 143.0], [61.8, 143.0], [61.9, 144.0], [62.0, 145.0], [62.1, 145.0], [62.2, 146.0], [62.3, 146.0], [62.4, 146.0], [62.5, 147.0], [62.6, 148.0], [62.7, 148.0], [62.8, 148.0], [62.9, 148.0], [63.0, 148.0], [63.1, 150.0], [63.2, 151.0], [63.3, 151.0], [63.4, 152.0], [63.5, 152.0], [63.6, 152.0], [63.7, 152.0], [63.8, 156.0], [63.9, 156.0], [64.0, 157.0], [64.1, 157.0], [64.2, 157.0], [64.3, 159.0], [64.4, 160.0], [64.5, 160.0], [64.6, 161.0], [64.7, 161.0], [64.8, 161.0], [64.9, 162.0], [65.0, 163.0], [65.1, 163.0], [65.2, 165.0], [65.3, 165.0], [65.4, 165.0], [65.5, 167.0], [65.6, 167.0], [65.7, 167.0], [65.8, 169.0], [65.9, 169.0], [66.0, 169.0], [66.1, 170.0], [66.2, 170.0], [66.3, 171.0], [66.4, 172.0], [66.5, 172.0], [66.6, 172.0], [66.7, 172.0], [66.8, 172.0], [66.9, 173.0], [67.0, 174.0], [67.1, 174.0], [67.2, 174.0], [67.3, 174.0], [67.4, 174.0], [67.5, 176.0], [67.6, 177.0], [67.7, 177.0], [67.8, 178.0], [67.9, 179.0], [68.0, 179.0], [68.1, 180.0], [68.2, 180.0], [68.3, 180.0], [68.4, 180.0], [68.5, 181.0], [68.6, 181.0], [68.7, 183.0], [68.8, 184.0], [68.9, 184.0], [69.0, 185.0], [69.1, 185.0], [69.2, 185.0], [69.3, 186.0], [69.4, 189.0], [69.5, 189.0], [69.6, 189.0], [69.7, 190.0], [69.8, 190.0], [69.9, 192.0], [70.0, 192.0], [70.1, 193.0], [70.2, 194.0], [70.3, 194.0], [70.4, 196.0], [70.5, 196.0], [70.6, 196.0], [70.7, 197.0], [70.8, 198.0], [70.9, 198.0], [71.0, 198.0], [71.1, 198.0], [71.2, 198.0], [71.3, 200.0], [71.4, 203.0], [71.5, 203.0], [71.6, 203.0], [71.7, 206.0], [71.8, 206.0], [71.9, 208.0], [72.0, 213.0], [72.1, 213.0], [72.2, 215.0], [72.3, 218.0], [72.4, 218.0], [72.5, 228.0], [72.6, 230.0], [72.7, 230.0], [72.8, 234.0], [72.9, 235.0], [73.0, 235.0], [73.1, 235.0], [73.2, 243.0], [73.3, 243.0], [73.4, 249.0], [73.5, 250.0], [73.6, 250.0], [73.7, 250.0], [73.8, 258.0], [73.9, 258.0], [74.0, 259.0], [74.1, 263.0], [74.2, 263.0], [74.3, 268.0], [74.4, 268.0], [74.5, 268.0], [74.6, 269.0], [74.7, 271.0], [74.8, 271.0], [74.9, 276.0], [75.0, 276.0], [75.1, 280.0], [75.2, 280.0], [75.3, 280.0], [75.4, 283.0], [75.5, 284.0], [75.6, 284.0], [75.7, 285.0], [75.8, 287.0], [75.9, 287.0], [76.0, 290.0], [76.1, 291.0], [76.2, 291.0], [76.3, 292.0], [76.4, 292.0], [76.5, 292.0], [76.6, 293.0], [76.7, 295.0], [76.8, 295.0], [76.9, 296.0], [77.0, 297.0], [77.1, 297.0], [77.2, 298.0], [77.3, 299.0], [77.4, 299.0], [77.5, 301.0], [77.6, 302.0], [77.7, 302.0], [77.8, 303.0], [77.9, 308.0], [78.0, 308.0], [78.1, 309.0], [78.2, 309.0], [78.3, 309.0], [78.4, 309.0], [78.5, 310.0], [78.6, 310.0], [78.7, 313.0], [78.8, 315.0], [78.9, 315.0], [79.0, 315.0], [79.1, 315.0], [79.2, 315.0], [79.3, 316.0], [79.4, 316.0], [79.5, 316.0], [79.6, 316.0], [79.7, 317.0], [79.8, 317.0], [79.9, 320.0], [80.0, 320.0], [80.1, 321.0], [80.2, 322.0], [80.3, 322.0], [80.4, 323.0], [80.5, 323.0], [80.6, 323.0], [80.7, 324.0], [80.8, 325.0], [80.9, 325.0], [81.0, 329.0], [81.1, 331.0], [81.2, 331.0], [81.3, 331.0], [81.4, 331.0], [81.5, 331.0], [81.6, 336.0], [81.7, 338.0], [81.8, 338.0], [81.9, 338.0], [82.0, 339.0], [82.1, 339.0], [82.2, 340.0], [82.3, 340.0], [82.4, 340.0], [82.5, 343.0], [82.6, 344.0], [82.7, 344.0], [82.8, 344.0], [82.9, 345.0], [83.0, 345.0], [83.1, 346.0], [83.2, 348.0], [83.3, 348.0], [83.4, 351.0], [83.5, 351.0], [83.6, 351.0], [83.7, 351.0], [83.8, 353.0], [83.9, 353.0], [84.0, 355.0], [84.1, 356.0], [84.2, 356.0], [84.3, 356.0], [84.4, 356.0], [84.5, 356.0], [84.6, 357.0], [84.7, 358.0], [84.8, 358.0], [84.9, 360.0], [85.0, 360.0], [85.1, 360.0], [85.2, 364.0], [85.3, 364.0], [85.4, 365.0], [85.5, 365.0], [85.6, 365.0], [85.7, 366.0], [85.8, 371.0], [85.9, 371.0], [86.0, 372.0], [86.1, 375.0], [86.2, 375.0], [86.3, 376.0], [86.4, 378.0], [86.5, 378.0], [86.6, 378.0], [86.7, 381.0], [86.8, 381.0], [86.9, 389.0], [87.0, 390.0], [87.1, 390.0], [87.2, 392.0], [87.3, 392.0], [87.4, 392.0], [87.5, 392.0], [87.6, 393.0], [87.7, 393.0], [87.8, 393.0], [87.9, 396.0], [88.0, 396.0], [88.1, 397.0], [88.2, 397.0], [88.3, 397.0], [88.4, 398.0], [88.5, 398.0], [88.6, 398.0], [88.7, 400.0], [88.8, 400.0], [88.9, 400.0], [89.0, 400.0], [89.1, 404.0], [89.2, 404.0], [89.3, 408.0], [89.4, 409.0], [89.5, 409.0], [89.6, 410.0], [89.7, 413.0], [89.8, 413.0], [89.9, 414.0], [90.0, 414.0], [90.1, 417.0], [90.2, 419.0], [90.3, 419.0], [90.4, 425.0], [90.5, 425.0], [90.6, 425.0], [90.7, 427.0], [90.8, 434.0], [90.9, 434.0], [91.0, 439.0], [91.1, 440.0], [91.2, 440.0], [91.3, 443.0], [91.4, 446.0], [91.5, 446.0], [91.6, 446.0], [91.7, 446.0], [91.8, 446.0], [91.9, 448.0], [92.0, 454.0], [92.1, 454.0], [92.2, 457.0], [92.3, 459.0], [92.4, 459.0], [92.5, 465.0], [92.6, 470.0], [92.7, 470.0], [92.8, 472.0], [92.9, 480.0], [93.0, 480.0], [93.1, 481.0], [93.2, 482.0], [93.3, 482.0], [93.4, 486.0], [93.5, 490.0], [93.6, 490.0], [93.7, 493.0], [93.8, 493.0], [93.9, 493.0], [94.0, 494.0], [94.1, 498.0], [94.2, 498.0], [94.3, 498.0], [94.4, 500.0], [94.5, 500.0], [94.6, 503.0], [94.7, 503.0], [94.8, 503.0], [94.9, 507.0], [95.0, 507.0], [95.1, 512.0], [95.2, 516.0], [95.3, 516.0], [95.4, 518.0], [95.5, 520.0], [95.6, 520.0], [95.7, 527.0], [95.8, 530.0], [95.9, 530.0], [96.0, 541.0], [96.1, 544.0], [96.2, 544.0], [96.3, 546.0], [96.4, 563.0], [96.5, 563.0], [96.6, 566.0], [96.7, 567.0], [96.8, 567.0], [96.9, 593.0], [97.0, 602.0], [97.1, 602.0], [97.2, 604.0], [97.3, 626.0], [97.4, 626.0], [97.5, 639.0], [97.6, 656.0], [97.7, 656.0], [97.8, 666.0], [97.9, 668.0], [98.0, 668.0], [98.1, 679.0], [98.2, 724.0], [98.3, 724.0], [98.4, 747.0], [98.5, 831.0], [98.6, 831.0], [98.7, 853.0], [98.8, 897.0], [98.9, 897.0], [99.0, 940.0], [99.1, 952.0], [99.2, 952.0], [99.3, 984.0], [99.4, 1138.0], [99.5, 1138.0], [99.6, 1151.0], [99.7, 1196.0], [99.8, 1196.0], [99.9, 1226.0], [100.0, 1226.0]], "isOverall": false, "label": "GetNewsCount", "isController": false}, {"data": [[0.0, 43.0], [0.1, 43.0], [0.2, 44.0], [0.3, 44.0], [0.4, 45.0], [0.5, 45.0], [0.6, 45.0], [0.7, 45.0], [0.8, 46.0], [0.9, 46.0], [1.0, 47.0], [1.1, 47.0], [1.2, 47.0], [1.3, 47.0], [1.4, 47.0], [1.5, 47.0], [1.6, 47.0], [1.7, 47.0], [1.8, 47.0], [1.9, 47.0], [2.0, 49.0], [2.1, 49.0], [2.2, 49.0], [2.3, 50.0], [2.4, 50.0], [2.5, 50.0], [2.6, 50.0], [2.7, 50.0], [2.8, 50.0], [2.9, 51.0], [3.0, 51.0], [3.1, 51.0], [3.2, 51.0], [3.3, 51.0], [3.4, 52.0], [3.5, 52.0], [3.6, 52.0], [3.7, 52.0], [3.8, 52.0], [3.9, 52.0], [4.0, 52.0], [4.1, 52.0], [4.2, 52.0], [4.3, 52.0], [4.4, 52.0], [4.5, 52.0], [4.6, 53.0], [4.7, 53.0], [4.8, 53.0], [4.9, 53.0], [5.0, 53.0], [5.1, 53.0], [5.2, 53.0], [5.3, 53.0], [5.4, 54.0], [5.5, 54.0], [5.6, 54.0], [5.7, 54.0], [5.8, 54.0], [5.9, 54.0], [6.0, 54.0], [6.1, 54.0], [6.2, 54.0], [6.3, 54.0], [6.4, 55.0], [6.5, 55.0], [6.6, 55.0], [6.7, 55.0], [6.8, 55.0], [6.9, 55.0], [7.0, 55.0], [7.1, 55.0], [7.2, 56.0], [7.3, 56.0], [7.4, 56.0], [7.5, 56.0], [7.6, 57.0], [7.7, 57.0], [7.8, 57.0], [7.9, 57.0], [8.0, 57.0], [8.1, 57.0], [8.2, 57.0], [8.3, 57.0], [8.4, 57.0], [8.5, 57.0], [8.6, 57.0], [8.7, 58.0], [8.8, 58.0], [8.9, 58.0], [9.0, 58.0], [9.1, 58.0], [9.2, 58.0], [9.3, 58.0], [9.4, 58.0], [9.5, 58.0], [9.6, 58.0], [9.7, 58.0], [9.8, 58.0], [9.9, 58.0], [10.0, 58.0], [10.1, 58.0], [10.2, 58.0], [10.3, 58.0], [10.4, 58.0], [10.5, 59.0], [10.6, 59.0], [10.7, 59.0], [10.8, 59.0], [10.9, 59.0], [11.0, 59.0], [11.1, 59.0], [11.2, 59.0], [11.3, 59.0], [11.4, 59.0], [11.5, 59.0], [11.6, 59.0], [11.7, 59.0], [11.8, 59.0], [11.9, 60.0], [12.0, 60.0], [12.1, 60.0], [12.2, 60.0], [12.3, 60.0], [12.4, 60.0], [12.5, 61.0], [12.6, 61.0], [12.7, 61.0], [12.8, 61.0], [12.9, 61.0], [13.0, 61.0], [13.1, 61.0], [13.2, 61.0], [13.3, 61.0], [13.4, 61.0], [13.5, 61.0], [13.6, 62.0], [13.7, 62.0], [13.8, 62.0], [13.9, 62.0], [14.0, 62.0], [14.1, 62.0], [14.2, 62.0], [14.3, 62.0], [14.4, 62.0], [14.5, 62.0], [14.6, 63.0], [14.7, 63.0], [14.8, 63.0], [14.9, 63.0], [15.0, 63.0], [15.1, 63.0], [15.2, 63.0], [15.3, 63.0], [15.4, 63.0], [15.5, 63.0], [15.6, 63.0], [15.7, 64.0], [15.8, 64.0], [15.9, 64.0], [16.0, 64.0], [16.1, 64.0], [16.2, 64.0], [16.3, 64.0], [16.4, 64.0], [16.5, 65.0], [16.6, 65.0], [16.7, 65.0], [16.8, 65.0], [16.9, 65.0], [17.0, 65.0], [17.1, 65.0], [17.2, 66.0], [17.3, 66.0], [17.4, 66.0], [17.5, 66.0], [17.6, 66.0], [17.7, 66.0], [17.8, 67.0], [17.9, 67.0], [18.0, 67.0], [18.1, 67.0], [18.2, 67.0], [18.3, 67.0], [18.4, 67.0], [18.5, 67.0], [18.6, 67.0], [18.7, 67.0], [18.8, 67.0], [18.9, 68.0], [19.0, 68.0], [19.1, 68.0], [19.2, 68.0], [19.3, 68.0], [19.4, 68.0], [19.5, 69.0], [19.6, 69.0], [19.7, 69.0], [19.8, 69.0], [19.9, 69.0], [20.0, 69.0], [20.1, 69.0], [20.2, 69.0], [20.3, 69.0], [20.4, 69.0], [20.5, 69.0], [20.6, 69.0], [20.7, 69.0], [20.8, 69.0], [20.9, 70.0], [21.0, 70.0], [21.1, 70.0], [21.2, 70.0], [21.3, 70.0], [21.4, 70.0], [21.5, 70.0], [21.6, 70.0], [21.7, 70.0], [21.8, 71.0], [21.9, 71.0], [22.0, 71.0], [22.1, 71.0], [22.2, 71.0], [22.3, 71.0], [22.4, 71.0], [22.5, 71.0], [22.6, 71.0], [22.7, 71.0], [22.8, 72.0], [22.9, 72.0], [23.0, 72.0], [23.1, 72.0], [23.2, 72.0], [23.3, 72.0], [23.4, 72.0], [23.5, 72.0], [23.6, 72.0], [23.7, 72.0], [23.8, 73.0], [23.9, 73.0], [24.0, 73.0], [24.1, 73.0], [24.2, 73.0], [24.3, 73.0], [24.4, 73.0], [24.5, 73.0], [24.6, 73.0], [24.7, 73.0], [24.8, 73.0], [24.9, 73.0], [25.0, 73.0], [25.1, 73.0], [25.2, 73.0], [25.3, 73.0], [25.4, 74.0], [25.5, 74.0], [25.6, 74.0], [25.7, 74.0], [25.8, 74.0], [25.9, 74.0], [26.0, 74.0], [26.1, 74.0], [26.2, 74.0], [26.3, 74.0], [26.4, 74.0], [26.5, 74.0], [26.6, 74.0], [26.7, 74.0], [26.8, 75.0], [26.9, 75.0], [27.0, 75.0], [27.1, 75.0], [27.2, 75.0], [27.3, 75.0], [27.4, 75.0], [27.5, 75.0], [27.6, 75.0], [27.7, 75.0], [27.8, 75.0], [27.9, 75.0], [28.0, 75.0], [28.1, 75.0], [28.2, 75.0], [28.3, 75.0], [28.4, 75.0], [28.5, 75.0], [28.6, 75.0], [28.7, 75.0], [28.8, 75.0], [28.9, 75.0], [29.0, 75.0], [29.1, 76.0], [29.2, 76.0], [29.3, 76.0], [29.4, 76.0], [29.5, 76.0], [29.6, 76.0], [29.7, 76.0], [29.8, 76.0], [29.9, 76.0], [30.0, 76.0], [30.1, 77.0], [30.2, 77.0], [30.3, 77.0], [30.4, 77.0], [30.5, 77.0], [30.6, 77.0], [30.7, 77.0], [30.8, 77.0], [30.9, 77.0], [31.0, 77.0], [31.1, 77.0], [31.2, 77.0], [31.3, 77.0], [31.4, 78.0], [31.5, 78.0], [31.6, 78.0], [31.7, 78.0], [31.8, 78.0], [31.9, 78.0], [32.0, 78.0], [32.1, 79.0], [32.2, 79.0], [32.3, 79.0], [32.4, 79.0], [32.5, 79.0], [32.6, 79.0], [32.7, 79.0], [32.8, 79.0], [32.9, 79.0], [33.0, 79.0], [33.1, 79.0], [33.2, 79.0], [33.3, 79.0], [33.4, 79.0], [33.5, 79.0], [33.6, 80.0], [33.7, 80.0], [33.8, 80.0], [33.9, 80.0], [34.0, 80.0], [34.1, 80.0], [34.2, 80.0], [34.3, 80.0], [34.4, 80.0], [34.5, 80.0], [34.6, 80.0], [34.7, 80.0], [34.8, 80.0], [34.9, 81.0], [35.0, 81.0], [35.1, 81.0], [35.2, 81.0], [35.3, 81.0], [35.4, 81.0], [35.5, 81.0], [35.6, 81.0], [35.7, 81.0], [35.8, 81.0], [35.9, 81.0], [36.0, 81.0], [36.1, 81.0], [36.2, 81.0], [36.3, 81.0], [36.4, 81.0], [36.5, 81.0], [36.6, 81.0], [36.7, 81.0], [36.8, 81.0], [36.9, 81.0], [37.0, 81.0], [37.1, 82.0], [37.2, 82.0], [37.3, 82.0], [37.4, 82.0], [37.5, 82.0], [37.6, 82.0], [37.7, 82.0], [37.8, 82.0], [37.9, 82.0], [38.0, 82.0], [38.1, 82.0], [38.2, 82.0], [38.3, 82.0], [38.4, 82.0], [38.5, 82.0], [38.6, 82.0], [38.7, 82.0], [38.8, 82.0], [38.9, 82.0], [39.0, 82.0], [39.1, 82.0], [39.2, 82.0], [39.3, 82.0], [39.4, 82.0], [39.5, 82.0], [39.6, 82.0], [39.7, 83.0], [39.8, 83.0], [39.9, 83.0], [40.0, 83.0], [40.1, 83.0], [40.2, 83.0], [40.3, 83.0], [40.4, 83.0], [40.5, 83.0], [40.6, 83.0], [40.7, 83.0], [40.8, 83.0], [40.9, 83.0], [41.0, 83.0], [41.1, 83.0], [41.2, 83.0], [41.3, 83.0], [41.4, 84.0], [41.5, 84.0], [41.6, 84.0], [41.7, 84.0], [41.8, 84.0], [41.9, 84.0], [42.0, 84.0], [42.1, 84.0], [42.2, 84.0], [42.3, 84.0], [42.4, 84.0], [42.5, 84.0], [42.6, 85.0], [42.7, 85.0], [42.8, 85.0], [42.9, 85.0], [43.0, 85.0], [43.1, 85.0], [43.2, 85.0], [43.3, 85.0], [43.4, 85.0], [43.5, 85.0], [43.6, 85.0], [43.7, 85.0], [43.8, 85.0], [43.9, 85.0], [44.0, 85.0], [44.1, 85.0], [44.2, 85.0], [44.3, 86.0], [44.4, 86.0], [44.5, 86.0], [44.6, 86.0], [44.7, 86.0], [44.8, 86.0], [44.9, 86.0], [45.0, 86.0], [45.1, 86.0], [45.2, 86.0], [45.3, 86.0], [45.4, 86.0], [45.5, 86.0], [45.6, 86.0], [45.7, 86.0], [45.8, 86.0], [45.9, 86.0], [46.0, 86.0], [46.1, 86.0], [46.2, 86.0], [46.3, 86.0], [46.4, 86.0], [46.5, 86.0], [46.6, 86.0], [46.7, 86.0], [46.8, 86.0], [46.9, 86.0], [47.0, 86.0], [47.1, 86.0], [47.2, 87.0], [47.3, 87.0], [47.4, 87.0], [47.5, 87.0], [47.6, 87.0], [47.7, 87.0], [47.8, 87.0], [47.9, 87.0], [48.0, 87.0], [48.1, 87.0], [48.2, 87.0], [48.3, 87.0], [48.4, 87.0], [48.5, 87.0], [48.6, 87.0], [48.7, 87.0], [48.8, 87.0], [48.9, 87.0], [49.0, 87.0], [49.1, 88.0], [49.2, 88.0], [49.3, 88.0], [49.4, 88.0], [49.5, 88.0], [49.6, 88.0], [49.7, 88.0], [49.8, 88.0], [49.9, 88.0], [50.0, 88.0], [50.1, 89.0], [50.2, 89.0], [50.3, 89.0], [50.4, 89.0], [50.5, 89.0], [50.6, 89.0], [50.7, 90.0], [50.8, 90.0], [50.9, 90.0], [51.0, 90.0], [51.1, 90.0], [51.2, 90.0], [51.3, 90.0], [51.4, 90.0], [51.5, 90.0], [51.6, 90.0], [51.7, 90.0], [51.8, 90.0], [51.9, 90.0], [52.0, 91.0], [52.1, 91.0], [52.2, 91.0], [52.3, 91.0], [52.4, 91.0], [52.5, 92.0], [52.6, 92.0], [52.7, 92.0], [52.8, 92.0], [52.9, 93.0], [53.0, 93.0], [53.1, 93.0], [53.2, 93.0], [53.3, 93.0], [53.4, 93.0], [53.5, 94.0], [53.6, 94.0], [53.7, 94.0], [53.8, 94.0], [53.9, 94.0], [54.0, 94.0], [54.1, 94.0], [54.2, 94.0], [54.3, 94.0], [54.4, 94.0], [54.5, 94.0], [54.6, 94.0], [54.7, 94.0], [54.8, 95.0], [54.9, 95.0], [55.0, 95.0], [55.1, 95.0], [55.2, 95.0], [55.3, 95.0], [55.4, 95.0], [55.5, 95.0], [55.6, 95.0], [55.7, 95.0], [55.8, 96.0], [55.9, 96.0], [56.0, 96.0], [56.1, 96.0], [56.2, 96.0], [56.3, 96.0], [56.4, 96.0], [56.5, 96.0], [56.6, 96.0], [56.7, 96.0], [56.8, 96.0], [56.9, 96.0], [57.0, 96.0], [57.1, 96.0], [57.2, 96.0], [57.3, 96.0], [57.4, 96.0], [57.5, 97.0], [57.6, 97.0], [57.7, 97.0], [57.8, 97.0], [57.9, 97.0], [58.0, 97.0], [58.1, 97.0], [58.2, 97.0], [58.3, 98.0], [58.4, 98.0], [58.5, 98.0], [58.6, 98.0], [58.7, 98.0], [58.8, 98.0], [58.9, 98.0], [59.0, 99.0], [59.1, 99.0], [59.2, 99.0], [59.3, 100.0], [59.4, 100.0], [59.5, 100.0], [59.6, 100.0], [59.7, 100.0], [59.8, 101.0], [59.9, 101.0], [60.0, 101.0], [60.1, 102.0], [60.2, 102.0], [60.3, 102.0], [60.4, 102.0], [60.5, 102.0], [60.6, 102.0], [60.7, 102.0], [60.8, 102.0], [60.9, 102.0], [61.0, 102.0], [61.1, 102.0], [61.2, 102.0], [61.3, 103.0], [61.4, 103.0], [61.5, 103.0], [61.6, 103.0], [61.7, 103.0], [61.8, 104.0], [61.9, 104.0], [62.0, 104.0], [62.1, 104.0], [62.2, 104.0], [62.3, 104.0], [62.4, 104.0], [62.5, 105.0], [62.6, 105.0], [62.7, 105.0], [62.8, 106.0], [62.9, 106.0], [63.0, 106.0], [63.1, 106.0], [63.2, 106.0], [63.3, 106.0], [63.4, 106.0], [63.5, 106.0], [63.6, 106.0], [63.7, 106.0], [63.8, 106.0], [63.9, 107.0], [64.0, 107.0], [64.1, 107.0], [64.2, 107.0], [64.3, 107.0], [64.4, 107.0], [64.5, 108.0], [64.6, 108.0], [64.7, 108.0], [64.8, 108.0], [64.9, 108.0], [65.0, 108.0], [65.1, 108.0], [65.2, 108.0], [65.3, 108.0], [65.4, 109.0], [65.5, 109.0], [65.6, 109.0], [65.7, 109.0], [65.8, 109.0], [65.9, 110.0], [66.0, 110.0], [66.1, 110.0], [66.2, 110.0], [66.3, 110.0], [66.4, 110.0], [66.5, 110.0], [66.6, 111.0], [66.7, 111.0], [66.8, 111.0], [66.9, 112.0], [67.0, 112.0], [67.1, 112.0], [67.2, 112.0], [67.3, 112.0], [67.4, 112.0], [67.5, 113.0], [67.6, 113.0], [67.7, 113.0], [67.8, 113.0], [67.9, 113.0], [68.0, 113.0], [68.1, 114.0], [68.2, 114.0], [68.3, 114.0], [68.4, 114.0], [68.5, 114.0], [68.6, 114.0], [68.7, 115.0], [68.8, 115.0], [68.9, 116.0], [69.0, 116.0], [69.1, 116.0], [69.2, 117.0], [69.3, 117.0], [69.4, 118.0], [69.5, 118.0], [69.6, 118.0], [69.7, 118.0], [69.8, 121.0], [69.9, 121.0], [70.0, 121.0], [70.1, 121.0], [70.2, 121.0], [70.3, 121.0], [70.4, 124.0], [70.5, 124.0], [70.6, 124.0], [70.7, 125.0], [70.8, 125.0], [70.9, 126.0], [71.0, 128.0], [71.1, 128.0], [71.2, 128.0], [71.3, 129.0], [71.4, 129.0], [71.5, 136.0], [71.6, 137.0], [71.7, 137.0], [71.8, 139.0], [71.9, 142.0], [72.0, 142.0], [72.1, 143.0], [72.2, 143.0], [72.3, 143.0], [72.4, 143.0], [72.5, 145.0], [72.6, 145.0], [72.7, 145.0], [72.8, 149.0], [72.9, 149.0], [73.0, 151.0], [73.1, 151.0], [73.2, 152.0], [73.3, 153.0], [73.4, 153.0], [73.5, 153.0], [73.6, 154.0], [73.7, 154.0], [73.8, 154.0], [73.9, 156.0], [74.0, 156.0], [74.1, 161.0], [74.2, 161.0], [74.3, 161.0], [74.4, 163.0], [74.5, 163.0], [74.6, 163.0], [74.7, 164.0], [74.8, 165.0], [74.9, 165.0], [75.0, 165.0], [75.1, 169.0], [75.2, 169.0], [75.3, 173.0], [75.4, 174.0], [75.5, 174.0], [75.6, 175.0], [75.7, 176.0], [75.8, 176.0], [75.9, 178.0], [76.0, 191.0], [76.1, 191.0], [76.2, 194.0], [76.3, 213.0], [76.4, 213.0], [76.5, 214.0], [76.6, 217.0], [76.7, 217.0], [76.8, 217.0], [76.9, 225.0], [77.0, 225.0], [77.1, 225.0], [77.2, 225.0], [77.3, 226.0], [77.4, 228.0], [77.5, 228.0], [77.6, 229.0], [77.7, 229.0], [77.8, 229.0], [77.9, 234.0], [78.0, 236.0], [78.1, 236.0], [78.2, 236.0], [78.3, 236.0], [78.4, 236.0], [78.5, 241.0], [78.6, 243.0], [78.7, 243.0], [78.8, 243.0], [78.9, 249.0], [79.0, 249.0], [79.1, 249.0], [79.2, 250.0], [79.3, 250.0], [79.4, 257.0], [79.5, 258.0], [79.6, 258.0], [79.7, 258.0], [79.8, 261.0], [79.9, 261.0], [80.0, 263.0], [80.1, 265.0], [80.2, 265.0], [80.3, 266.0], [80.4, 267.0], [80.5, 267.0], [80.6, 268.0], [80.7, 270.0], [80.8, 270.0], [80.9, 270.0], [81.0, 270.0], [81.1, 271.0], [81.2, 271.0], [81.3, 271.0], [81.4, 271.0], [81.5, 271.0], [81.6, 271.0], [81.7, 272.0], [81.8, 276.0], [81.9, 276.0], [82.0, 278.0], [82.1, 279.0], [82.2, 279.0], [82.3, 282.0], [82.4, 285.0], [82.5, 285.0], [82.6, 286.0], [82.7, 287.0], [82.8, 287.0], [82.9, 291.0], [83.0, 293.0], [83.1, 293.0], [83.2, 293.0], [83.3, 294.0], [83.4, 294.0], [83.5, 294.0], [83.6, 295.0], [83.7, 295.0], [83.8, 295.0], [83.9, 296.0], [84.0, 296.0], [84.1, 303.0], [84.2, 303.0], [84.3, 303.0], [84.4, 307.0], [84.5, 309.0], [84.6, 309.0], [84.7, 313.0], [84.8, 313.0], [84.9, 316.0], [85.0, 316.0], [85.1, 316.0], [85.2, 317.0], [85.3, 317.0], [85.4, 317.0], [85.5, 317.0], [85.6, 325.0], [85.7, 325.0], [85.8, 329.0], [85.9, 330.0], [86.0, 330.0], [86.1, 335.0], [86.2, 342.0], [86.3, 342.0], [86.4, 343.0], [86.5, 344.0], [86.6, 344.0], [86.7, 346.0], [86.8, 350.0], [86.9, 350.0], [87.0, 353.0], [87.1, 355.0], [87.2, 355.0], [87.3, 355.0], [87.4, 358.0], [87.5, 358.0], [87.6, 360.0], [87.7, 361.0], [87.8, 361.0], [87.9, 363.0], [88.0, 365.0], [88.1, 365.0], [88.2, 366.0], [88.3, 368.0], [88.4, 368.0], [88.5, 369.0], [88.6, 369.0], [88.7, 369.0], [88.8, 377.0], [88.9, 377.0], [89.0, 377.0], [89.1, 379.0], [89.2, 379.0], [89.3, 383.0], [89.4, 386.0], [89.5, 386.0], [89.6, 397.0], [89.7, 407.0], [89.8, 407.0], [89.9, 412.0], [90.0, 413.0], [90.1, 413.0], [90.2, 415.0], [90.3, 422.0], [90.4, 422.0], [90.5, 424.0], [90.6, 432.0], [90.7, 432.0], [90.8, 437.0], [90.9, 442.0], [91.0, 442.0], [91.1, 446.0], [91.2, 447.0], [91.3, 447.0], [91.4, 447.0], [91.5, 456.0], [91.6, 456.0], [91.7, 461.0], [91.8, 473.0], [91.9, 473.0], [92.0, 474.0], [92.1, 475.0], [92.2, 475.0], [92.3, 475.0], [92.4, 475.0], [92.5, 475.0], [92.6, 477.0], [92.7, 477.0], [92.8, 487.0], [92.9, 496.0], [93.0, 496.0], [93.1, 501.0], [93.2, 506.0], [93.3, 506.0], [93.4, 514.0], [93.5, 532.0], [93.6, 532.0], [93.7, 536.0], [93.8, 536.0], [93.9, 536.0], [94.0, 542.0], [94.1, 544.0], [94.2, 544.0], [94.3, 557.0], [94.4, 569.0], [94.5, 569.0], [94.6, 574.0], [94.7, 587.0], [94.8, 587.0], [94.9, 587.0], [95.0, 596.0], [95.1, 596.0], [95.2, 601.0], [95.3, 604.0], [95.4, 604.0], [95.5, 621.0], [95.6, 622.0], [95.7, 622.0], [95.8, 625.0], [95.9, 625.0], [96.0, 625.0], [96.1, 625.0], [96.2, 625.0], [96.3, 626.0], [96.4, 642.0], [96.5, 642.0], [96.6, 653.0], [96.7, 661.0], [96.8, 661.0], [96.9, 669.0], [97.0, 682.0], [97.1, 682.0], [97.2, 693.0], [97.3, 694.0], [97.4, 694.0], [97.5, 712.0], [97.6, 729.0], [97.7, 729.0], [97.8, 784.0], [97.9, 796.0], [98.0, 796.0], [98.1, 841.0], [98.2, 847.0], [98.3, 847.0], [98.4, 888.0], [98.5, 914.0], [98.6, 914.0], [98.7, 939.0], [98.8, 954.0], [98.9, 954.0], [99.0, 1006.0], [99.1, 1009.0], [99.2, 1009.0], [99.3, 1009.0], [99.4, 1032.0], [99.5, 1032.0], [99.6, 1112.0], [99.7, 1127.0], [99.8, 1127.0], [99.9, 1857.0], [100.0, 1857.0]], "isOverall": false, "label": "GetNewsList(10)", "isController": false}, {"data": [[0.0, 185.0], [0.1, 185.0], [0.2, 264.0], [0.3, 270.0], [0.4, 270.0], [0.5, 319.0], [0.6, 346.0], [0.7, 346.0], [0.8, 385.0], [0.9, 460.0], [1.0, 567.0], [1.1, 567.0], [1.2, 574.0], [1.3, 619.0], [1.4, 619.0], [1.5, 634.0], [1.6, 639.0], [1.7, 639.0], [1.8, 708.0], [1.9, 751.0], [2.0, 902.0], [2.1, 902.0], [2.2, 956.0], [2.3, 1077.0], [2.4, 1077.0], [2.5, 1101.0], [2.6, 1101.0], [2.7, 1101.0], [2.8, 1109.0], [2.9, 1150.0], [3.0, 1162.0], [3.1, 1162.0], [3.2, 1168.0], [3.3, 1185.0], [3.4, 1185.0], [3.5, 1353.0], [3.6, 1368.0], [3.7, 1491.0], [3.8, 1491.0], [3.9, 1508.0], [4.0, 1527.0], [4.1, 1527.0], [4.2, 1529.0], [4.3, 1575.0], [4.4, 1575.0], [4.5, 1579.0], [4.6, 1606.0], [4.7, 1613.0], [4.8, 1613.0], [4.9, 1669.0], [5.0, 1703.0], [5.1, 1703.0], [5.2, 1742.0], [5.3, 1779.0], [5.4, 1779.0], [5.5, 1812.0], [5.6, 1835.0], [5.7, 1862.0], [5.8, 1862.0], [5.9, 1878.0], [6.0, 1899.0], [6.1, 1899.0], [6.2, 1944.0], [6.3, 1946.0], [6.4, 1946.0], [6.5, 2028.0], [6.6, 2031.0], [6.7, 2148.0], [6.8, 2148.0], [6.9, 2194.0], [7.0, 2211.0], [7.1, 2211.0], [7.2, 2297.0], [7.3, 2303.0], [7.4, 2305.0], [7.5, 2305.0], [7.6, 2312.0], [7.7, 2329.0], [7.8, 2329.0], [7.9, 2331.0], [8.0, 2371.0], [8.1, 2371.0], [8.2, 2372.0], [8.3, 2379.0], [8.4, 2529.0], [8.5, 2529.0], [8.6, 2561.0], [8.7, 2576.0], [8.8, 2576.0], [8.9, 2758.0], [9.0, 2781.0], [9.1, 2781.0], [9.2, 2853.0], [9.3, 2871.0], [9.4, 2881.0], [9.5, 2881.0], [9.6, 2892.0], [9.7, 2901.0], [9.8, 2901.0], [9.9, 2951.0], [10.0, 2956.0], [10.1, 2972.0], [10.2, 2972.0], [10.3, 2974.0], [10.4, 2983.0], [10.5, 2983.0], [10.6, 3011.0], [10.7, 3030.0], [10.8, 3030.0], [10.9, 3036.0], [11.0, 3052.0], [11.1, 3077.0], [11.2, 3077.0], [11.3, 3080.0], [11.4, 3086.0], [11.5, 3086.0], [11.6, 3183.0], [11.7, 3222.0], [11.8, 3222.0], [11.9, 3283.0], [12.0, 3292.0], [12.1, 3348.0], [12.2, 3348.0], [12.3, 3389.0], [12.4, 3464.0], [12.5, 3464.0], [12.6, 3464.0], [12.7, 3476.0], [12.8, 3476.0], [12.9, 3519.0], [13.0, 3522.0], [13.1, 3541.0], [13.2, 3541.0], [13.3, 3544.0], [13.4, 3551.0], [13.5, 3551.0], [13.6, 3551.0], [13.7, 3552.0], [13.8, 3578.0], [13.9, 3578.0], [14.0, 3585.0], [14.1, 3601.0], [14.2, 3601.0], [14.3, 3621.0], [14.4, 3623.0], [14.5, 3623.0], [14.6, 3627.0], [14.7, 3652.0], [14.8, 3660.0], [14.9, 3660.0], [15.0, 3664.0], [15.1, 3667.0], [15.2, 3667.0], [15.3, 3672.0], [15.4, 3672.0], [15.5, 3672.0], [15.6, 3674.0], [15.7, 3688.0], [15.8, 3717.0], [15.9, 3717.0], [16.0, 3734.0], [16.1, 3763.0], [16.2, 3763.0], [16.3, 3766.0], [16.4, 3811.0], [16.5, 3811.0], [16.6, 3816.0], [16.7, 3816.0], [16.8, 3828.0], [16.9, 3828.0], [17.0, 3829.0], [17.1, 3842.0], [17.2, 3842.0], [17.3, 3849.0], [17.4, 3873.0], [17.5, 3885.0], [17.6, 3885.0], [17.7, 3893.0], [17.8, 3893.0], [17.9, 3893.0], [18.0, 3897.0], [18.1, 3906.0], [18.2, 3906.0], [18.3, 3908.0], [18.4, 3909.0], [18.5, 3956.0], [18.6, 3956.0], [18.7, 3959.0], [18.8, 3962.0], [18.9, 3962.0], [19.0, 3962.0], [19.1, 3963.0], [19.2, 3963.0], [19.3, 3966.0], [19.4, 3988.0], [19.5, 3997.0], [19.6, 3997.0], [19.7, 4028.0], [19.8, 4033.0], [19.9, 4033.0], [20.0, 4033.0], [20.1, 4034.0], [20.2, 4035.0], [20.3, 4035.0], [20.4, 4039.0], [20.5, 4045.0], [20.6, 4045.0], [20.7, 4047.0], [20.8, 4047.0], [20.9, 4047.0], [21.0, 4048.0], [21.1, 4049.0], [21.2, 4050.0], [21.3, 4050.0], [21.4, 4056.0], [21.5, 4059.0], [21.6, 4059.0], [21.7, 4059.0], [21.8, 4062.0], [21.9, 4062.0], [22.0, 4064.0], [22.1, 4088.0], [22.2, 4107.0], [22.3, 4107.0], [22.4, 4109.0], [22.5, 4110.0], [22.6, 4110.0], [22.7, 4115.0], [22.8, 4126.0], [22.9, 4126.0], [23.0, 4141.0], [23.1, 4143.0], [23.2, 4153.0], [23.3, 4153.0], [23.4, 4156.0], [23.5, 4157.0], [23.6, 4157.0], [23.7, 4157.0], [23.8, 4158.0], [23.9, 4158.0], [24.0, 4158.0], [24.1, 4165.0], [24.2, 4185.0], [24.3, 4185.0], [24.4, 4189.0], [24.5, 4191.0], [24.6, 4191.0], [24.7, 4191.0], [24.8, 4192.0], [24.9, 4192.0], [25.0, 4192.0], [25.1, 4194.0], [25.2, 4199.0], [25.3, 4199.0], [25.4, 4199.0], [25.5, 4219.0], [25.6, 4219.0], [25.7, 4221.0], [25.8, 4223.0], [25.9, 4225.0], [26.0, 4225.0], [26.1, 4228.0], [26.2, 4228.0], [26.3, 4228.0], [26.4, 4231.0], [26.5, 4233.0], [26.6, 4233.0], [26.7, 4234.0], [26.8, 4239.0], [26.9, 4239.0], [27.0, 4239.0], [27.1, 4240.0], [27.2, 4255.0], [27.3, 4255.0], [27.4, 4257.0], [27.5, 4263.0], [27.6, 4272.0], [27.7, 4272.0], [27.8, 4274.0], [27.9, 4282.0], [28.0, 4282.0], [28.1, 4282.0], [28.2, 4282.0], [28.3, 4282.0], [28.4, 4282.0], [28.5, 4283.0], [28.6, 4289.0], [28.7, 4289.0], [28.8, 4292.0], [28.9, 4296.0], [29.0, 4296.0], [29.1, 4296.0], [29.2, 4301.0], [29.3, 4301.0], [29.4, 4301.0], [29.5, 4301.0], [29.6, 4302.0], [29.7, 4302.0], [29.8, 4310.0], [29.9, 4310.0], [30.0, 4310.0], [30.1, 4313.0], [30.2, 4317.0], [30.3, 4321.0], [30.4, 4321.0], [30.5, 4322.0], [30.6, 4324.0], [30.7, 4324.0], [30.8, 4332.0], [30.9, 4334.0], [31.0, 4334.0], [31.1, 4334.0], [31.2, 4339.0], [31.3, 4339.0], [31.4, 4339.0], [31.5, 4341.0], [31.6, 4346.0], [31.7, 4346.0], [31.8, 4348.0], [31.9, 4348.0], [32.0, 4348.0], [32.1, 4350.0], [32.2, 4351.0], [32.3, 4353.0], [32.4, 4353.0], [32.5, 4354.0], [32.6, 4355.0], [32.7, 4355.0], [32.8, 4355.0], [32.9, 4357.0], [33.0, 4357.0], [33.1, 4358.0], [33.2, 4359.0], [33.3, 4360.0], [33.4, 4360.0], [33.5, 4360.0], [33.6, 4362.0], [33.7, 4362.0], [33.8, 4364.0], [33.9, 4364.0], [34.0, 4365.0], [34.1, 4365.0], [34.2, 4366.0], [34.3, 4368.0], [34.4, 4368.0], [34.5, 4370.0], [34.6, 4373.0], [34.7, 4373.0], [34.8, 4373.0], [34.9, 4379.0], [35.0, 4379.0], [35.1, 4379.0], [35.2, 4387.0], [35.3, 4387.0], [35.4, 4387.0], [35.5, 4387.0], [35.6, 4390.0], [35.7, 4390.0], [35.8, 4390.0], [35.9, 4398.0], [36.0, 4400.0], [36.1, 4400.0], [36.2, 4401.0], [36.3, 4401.0], [36.4, 4401.0], [36.5, 4402.0], [36.6, 4412.0], [36.7, 4415.0], [36.8, 4415.0], [36.9, 4416.0], [37.0, 4418.0], [37.1, 4418.0], [37.2, 4418.0], [37.3, 4419.0], [37.4, 4419.0], [37.5, 4420.0], [37.6, 4423.0], [37.7, 4425.0], [37.8, 4425.0], [37.9, 4428.0], [38.0, 4429.0], [38.1, 4429.0], [38.2, 4429.0], [38.3, 4431.0], [38.4, 4431.0], [38.5, 4435.0], [38.6, 4447.0], [38.7, 4448.0], [38.8, 4448.0], [38.9, 4452.0], [39.0, 4455.0], [39.1, 4455.0], [39.2, 4455.0], [39.3, 4455.0], [39.4, 4455.0], [39.5, 4456.0], [39.6, 4459.0], [39.7, 4459.0], [39.8, 4459.0], [39.9, 4461.0], [40.0, 4462.0], [40.1, 4462.0], [40.2, 4464.0], [40.3, 4466.0], [40.4, 4468.0], [40.5, 4468.0], [40.6, 4470.0], [40.7, 4472.0], [40.8, 4472.0], [40.9, 4472.0], [41.0, 4474.0], [41.1, 4474.0], [41.2, 4475.0], [41.3, 4476.0], [41.4, 4476.0], [41.5, 4476.0], [41.6, 4476.0], [41.7, 4477.0], [41.8, 4477.0], [41.9, 4480.0], [42.0, 4480.0], [42.1, 4480.0], [42.2, 4481.0], [42.3, 4490.0], [42.4, 4490.0], [42.5, 4490.0], [42.6, 4493.0], [42.7, 4495.0], [42.8, 4495.0], [42.9, 4503.0], [43.0, 4504.0], [43.1, 4504.0], [43.2, 4506.0], [43.3, 4507.0], [43.4, 4512.0], [43.5, 4512.0], [43.6, 4514.0], [43.7, 4516.0], [43.8, 4516.0], [43.9, 4516.0], [44.0, 4520.0], [44.1, 4522.0], [44.2, 4522.0], [44.3, 4525.0], [44.4, 4526.0], [44.5, 4526.0], [44.6, 4529.0], [44.7, 4530.0], [44.8, 4530.0], [44.9, 4532.0], [45.0, 4533.0], [45.1, 4533.0], [45.2, 4533.0], [45.3, 4534.0], [45.4, 4537.0], [45.5, 4537.0], [45.6, 4542.0], [45.7, 4544.0], [45.8, 4544.0], [45.9, 4545.0], [46.0, 4545.0], [46.1, 4545.0], [46.2, 4545.0], [46.3, 4549.0], [46.4, 4549.0], [46.5, 4549.0], [46.6, 4550.0], [46.7, 4554.0], [46.8, 4565.0], [46.9, 4565.0], [47.0, 4566.0], [47.1, 4568.0], [47.2, 4568.0], [47.3, 4569.0], [47.4, 4577.0], [47.5, 4577.0], [47.6, 4578.0], [47.7, 4581.0], [47.8, 4583.0], [47.9, 4583.0], [48.0, 4584.0], [48.1, 4584.0], [48.2, 4584.0], [48.3, 4587.0], [48.4, 4587.0], [48.5, 4587.0], [48.6, 4587.0], [48.7, 4587.0], [48.8, 4588.0], [48.9, 4588.0], [49.0, 4591.0], [49.1, 4593.0], [49.2, 4593.0], [49.3, 4595.0], [49.4, 4598.0], [49.5, 4598.0], [49.6, 4598.0], [49.7, 4599.0], [49.8, 4599.0], [49.9, 4599.0], [50.0, 4602.0], [50.1, 4603.0], [50.2, 4603.0], [50.3, 4603.0], [50.4, 4608.0], [50.5, 4611.0], [50.6, 4611.0], [50.7, 4612.0], [50.8, 4613.0], [50.9, 4613.0], [51.0, 4614.0], [51.1, 4615.0], [51.2, 4615.0], [51.3, 4615.0], [51.4, 4616.0], [51.5, 4619.0], [51.6, 4619.0], [51.7, 4619.0], [51.8, 4620.0], [51.9, 4620.0], [52.0, 4621.0], [52.1, 4626.0], [52.2, 4626.0], [52.3, 4626.0], [52.4, 4627.0], [52.5, 4632.0], [52.6, 4632.0], [52.7, 4632.0], [52.8, 4632.0], [52.9, 4632.0], [53.0, 4633.0], [53.1, 4637.0], [53.2, 4637.0], [53.3, 4639.0], [53.4, 4639.0], [53.5, 4641.0], [53.6, 4641.0], [53.7, 4645.0], [53.8, 4647.0], [53.9, 4647.0], [54.0, 4653.0], [54.1, 4656.0], [54.2, 4660.0], [54.3, 4660.0], [54.4, 4661.0], [54.5, 4663.0], [54.6, 4663.0], [54.7, 4664.0], [54.8, 4666.0], [54.9, 4666.0], [55.0, 4670.0], [55.1, 4671.0], [55.2, 4672.0], [55.3, 4672.0], [55.4, 4672.0], [55.5, 4674.0], [55.6, 4674.0], [55.7, 4677.0], [55.8, 4680.0], [55.9, 4680.0], [56.0, 4683.0], [56.1, 4684.0], [56.2, 4685.0], [56.3, 4685.0], [56.4, 4688.0], [56.5, 4693.0], [56.6, 4693.0], [56.7, 4693.0], [56.8, 4698.0], [56.9, 4698.0], [57.0, 4698.0], [57.1, 4700.0], [57.2, 4700.0], [57.3, 4700.0], [57.4, 4700.0], [57.5, 4701.0], [57.6, 4701.0], [57.7, 4701.0], [57.8, 4703.0], [57.9, 4703.0], [58.0, 4703.0], [58.1, 4703.0], [58.2, 4703.0], [58.3, 4703.0], [58.4, 4704.0], [58.5, 4705.0], [58.6, 4705.0], [58.7, 4711.0], [58.8, 4716.0], [58.9, 4716.0], [59.0, 4716.0], [59.1, 4718.0], [59.2, 4719.0], [59.3, 4719.0], [59.4, 4724.0], [59.5, 4725.0], [59.6, 4725.0], [59.7, 4725.0], [59.8, 4731.0], [59.9, 4732.0], [60.0, 4732.0], [60.1, 4734.0], [60.2, 4734.0], [60.3, 4734.0], [60.4, 4735.0], [60.5, 4735.0], [60.6, 4735.0], [60.7, 4735.0], [60.8, 4736.0], [60.9, 4737.0], [61.0, 4737.0], [61.1, 4738.0], [61.2, 4738.0], [61.3, 4738.0], [61.4, 4751.0], [61.5, 4751.0], [61.6, 4756.0], [61.7, 4756.0], [61.8, 4757.0], [61.9, 4757.0], [62.0, 4757.0], [62.1, 4757.0], [62.2, 4757.0], [62.3, 4757.0], [62.4, 4759.0], [62.5, 4760.0], [62.6, 4760.0], [62.7, 4760.0], [62.8, 4762.0], [62.9, 4762.0], [63.0, 4762.0], [63.1, 4767.0], [63.2, 4771.0], [63.3, 4771.0], [63.4, 4772.0], [63.5, 4774.0], [63.6, 4775.0], [63.7, 4775.0], [63.8, 4775.0], [63.9, 4777.0], [64.0, 4777.0], [64.1, 4781.0], [64.2, 4781.0], [64.3, 4784.0], [64.4, 4784.0], [64.5, 4787.0], [64.6, 4789.0], [64.7, 4789.0], [64.8, 4792.0], [64.9, 4797.0], [65.0, 4797.0], [65.1, 4805.0], [65.2, 4807.0], [65.3, 4809.0], [65.4, 4809.0], [65.5, 4810.0], [65.6, 4816.0], [65.7, 4816.0], [65.8, 4817.0], [65.9, 4817.0], [66.0, 4817.0], [66.1, 4819.0], [66.2, 4819.0], [66.3, 4820.0], [66.4, 4820.0], [66.5, 4821.0], [66.6, 4822.0], [66.7, 4822.0], [66.8, 4823.0], [66.9, 4823.0], [67.0, 4828.0], [67.1, 4828.0], [67.2, 4830.0], [67.3, 4838.0], [67.4, 4838.0], [67.5, 4839.0], [67.6, 4842.0], [67.7, 4842.0], [67.8, 4843.0], [67.9, 4845.0], [68.0, 4846.0], [68.1, 4846.0], [68.2, 4846.0], [68.3, 4846.0], [68.4, 4846.0], [68.5, 4846.0], [68.6, 4848.0], [68.7, 4848.0], [68.8, 4848.0], [68.9, 4848.0], [69.0, 4848.0], [69.1, 4848.0], [69.2, 4848.0], [69.3, 4849.0], [69.4, 4849.0], [69.5, 4849.0], [69.6, 4849.0], [69.7, 4849.0], [69.8, 4849.0], [69.9, 4850.0], [70.0, 4850.0], [70.1, 4850.0], [70.2, 4851.0], [70.3, 4857.0], [70.4, 4857.0], [70.5, 4859.0], [70.6, 4874.0], [70.7, 4877.0], [70.8, 4877.0], [70.9, 4881.0], [71.0, 4882.0], [71.1, 4882.0], [71.2, 4887.0], [71.3, 4887.0], [71.4, 4887.0], [71.5, 4890.0], [71.6, 4893.0], [71.7, 4895.0], [71.8, 4895.0], [71.9, 4898.0], [72.0, 4899.0], [72.1, 4899.0], [72.2, 4899.0], [72.3, 4901.0], [72.4, 4901.0], [72.5, 4902.0], [72.6, 4902.0], [72.7, 4902.0], [72.8, 4902.0], [72.9, 4903.0], [73.0, 4904.0], [73.1, 4904.0], [73.2, 4915.0], [73.3, 4924.0], [73.4, 4925.0], [73.5, 4925.0], [73.6, 4925.0], [73.7, 4932.0], [73.8, 4932.0], [73.9, 4932.0], [74.0, 4942.0], [74.1, 4942.0], [74.2, 4942.0], [74.3, 4943.0], [74.4, 4953.0], [74.5, 4953.0], [74.6, 4958.0], [74.7, 4959.0], [74.8, 4959.0], [74.9, 4964.0], [75.0, 4968.0], [75.1, 4968.0], [75.2, 4968.0], [75.3, 4969.0], [75.4, 4969.0], [75.5, 4969.0], [75.6, 4969.0], [75.7, 4976.0], [75.8, 4976.0], [75.9, 4976.0], [76.0, 4976.0], [76.1, 4976.0], [76.2, 4977.0], [76.3, 4977.0], [76.4, 4977.0], [76.5, 4977.0], [76.6, 4978.0], [76.7, 4989.0], [76.8, 4989.0], [76.9, 4989.0], [77.0, 4992.0], [77.1, 4995.0], [77.2, 4995.0], [77.3, 4997.0], [77.4, 4999.0], [77.5, 4999.0], [77.6, 4999.0], [77.7, 5000.0], [77.8, 5000.0], [77.9, 5000.0], [78.0, 5000.0], [78.1, 5001.0], [78.2, 5001.0], [78.3, 5003.0], [78.4, 5007.0], [78.5, 5007.0], [78.6, 5008.0], [78.7, 5013.0], [78.8, 5013.0], [78.9, 5015.0], [79.0, 5019.0], [79.1, 5024.0], [79.2, 5024.0], [79.3, 5025.0], [79.4, 5026.0], [79.5, 5026.0], [79.6, 5026.0], [79.7, 5027.0], [79.8, 5027.0], [79.9, 5029.0], [80.0, 5030.0], [80.1, 5034.0], [80.2, 5034.0], [80.3, 5035.0], [80.4, 5037.0], [80.5, 5037.0], [80.6, 5041.0], [80.7, 5049.0], [80.8, 5049.0], [80.9, 5049.0], [81.0, 5052.0], [81.1, 5054.0], [81.2, 5054.0], [81.3, 5055.0], [81.4, 5055.0], [81.5, 5055.0], [81.6, 5056.0], [81.7, 5056.0], [81.8, 5060.0], [81.9, 5060.0], [82.0, 5061.0], [82.1, 5063.0], [82.2, 5063.0], [82.3, 5068.0], [82.4, 5072.0], [82.5, 5072.0], [82.6, 5079.0], [82.7, 5081.0], [82.8, 5083.0], [82.9, 5083.0], [83.0, 5085.0], [83.1, 5089.0], [83.2, 5089.0], [83.3, 5092.0], [83.4, 5101.0], [83.5, 5102.0], [83.6, 5102.0], [83.7, 5105.0], [83.8, 5105.0], [83.9, 5105.0], [84.0, 5108.0], [84.1, 5109.0], [84.2, 5109.0], [84.3, 5110.0], [84.4, 5111.0], [84.5, 5111.0], [84.6, 5111.0], [84.7, 5117.0], [84.8, 5122.0], [84.9, 5122.0], [85.0, 5124.0], [85.1, 5127.0], [85.2, 5127.0], [85.3, 5130.0], [85.4, 5135.0], [85.5, 5135.0], [85.6, 5135.0], [85.7, 5138.0], [85.8, 5142.0], [85.9, 5142.0], [86.0, 5144.0], [86.1, 5144.0], [86.2, 5144.0], [86.3, 5144.0], [86.4, 5144.0], [86.5, 5145.0], [86.6, 5145.0], [86.7, 5148.0], [86.8, 5153.0], [86.9, 5153.0], [87.0, 5156.0], [87.1, 5160.0], [87.2, 5162.0], [87.3, 5162.0], [87.4, 5164.0], [87.5, 5164.0], [87.6, 5164.0], [87.7, 5168.0], [87.8, 5171.0], [87.9, 5171.0], [88.0, 5174.0], [88.1, 5181.0], [88.2, 5191.0], [88.3, 5191.0], [88.4, 5192.0], [88.5, 5194.0], [88.6, 5194.0], [88.7, 5197.0], [88.8, 5198.0], [88.9, 5198.0], [89.0, 5205.0], [89.1, 5210.0], [89.2, 5214.0], [89.3, 5214.0], [89.4, 5216.0], [89.5, 5216.0], [89.6, 5216.0], [89.7, 5228.0], [89.8, 5232.0], [89.9, 5232.0], [90.0, 5232.0], [90.1, 5239.0], [90.2, 5241.0], [90.3, 5241.0], [90.4, 5241.0], [90.5, 5241.0], [90.6, 5241.0], [90.7, 5242.0], [90.8, 5242.0], [90.9, 5242.0], [91.0, 5242.0], [91.1, 5242.0], [91.2, 5242.0], [91.3, 5242.0], [91.4, 5242.0], [91.5, 5242.0], [91.6, 5242.0], [91.7, 5242.0], [91.8, 5242.0], [91.9, 5243.0], [92.0, 5243.0], [92.1, 5243.0], [92.2, 5244.0], [92.3, 5244.0], [92.4, 5252.0], [92.5, 5258.0], [92.6, 5258.0], [92.7, 5260.0], [92.8, 5261.0], [92.9, 5264.0], [93.0, 5264.0], [93.1, 5268.0], [93.2, 5270.0], [93.3, 5270.0], [93.4, 5281.0], [93.5, 5298.0], [93.6, 5302.0], [93.7, 5302.0], [93.8, 5305.0], [93.9, 5307.0], [94.0, 5307.0], [94.1, 5307.0], [94.2, 5310.0], [94.3, 5310.0], [94.4, 5352.0], [94.5, 5354.0], [94.6, 5354.0], [94.7, 5354.0], [94.8, 5365.0], [94.9, 5372.0], [95.0, 5372.0], [95.1, 5373.0], [95.2, 5381.0], [95.3, 5381.0], [95.4, 5396.0], [95.5, 5400.0], [95.6, 5406.0], [95.7, 5406.0], [95.8, 5409.0], [95.9, 5411.0], [96.0, 5411.0], [96.1, 5466.0], [96.2, 5467.0], [96.3, 5467.0], [96.4, 5469.0], [96.5, 5481.0], [96.6, 5512.0], [96.7, 5512.0], [96.8, 5525.0], [96.9, 5542.0], [97.0, 5542.0], [97.1, 5555.0], [97.2, 5563.0], [97.3, 5586.0], [97.4, 5586.0], [97.5, 5606.0], [97.6, 5623.0], [97.7, 5623.0], [97.8, 5635.0], [97.9, 5635.0], [98.0, 5635.0], [98.1, 5635.0], [98.2, 5663.0], [98.3, 5672.0], [98.4, 5672.0], [98.5, 5672.0], [98.6, 5694.0], [98.7, 5694.0], [98.8, 5704.0], [98.9, 6017.0], [99.0, 6017.0], [99.1, 6052.0], [99.2, 6056.0], [99.3, 6057.0], [99.4, 6057.0], [99.5, 6211.0], [99.6, 6285.0], [99.7, 6285.0], [99.8, 6369.0], [99.9, 6563.0], [100.0, 6563.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 390.0, "series": [{"data": [[600.0, 2.0], [700.0, 1.0], [800.0, 3.0], [900.0, 3.0], [1100.0, 1.0], [1200.0, 2.0], [1300.0, 5.0], [1400.0, 1.0], [1500.0, 2.0], [1700.0, 1.0], [1800.0, 3.0], [1900.0, 1.0], [2000.0, 5.0], [2100.0, 3.0], [2400.0, 2.0], [2500.0, 4.0], [2600.0, 1.0], [2700.0, 2.0], [2800.0, 1.0], [2900.0, 2.0], [3100.0, 2.0], [3300.0, 3.0], [3200.0, 1.0], [3400.0, 7.0], [3500.0, 1.0], [3600.0, 1.0], [3700.0, 4.0], [3800.0, 2.0], [3900.0, 5.0], [4000.0, 2.0], [4100.0, 6.0], [4300.0, 5.0], [4200.0, 5.0], [4500.0, 21.0], [4600.0, 25.0], [4400.0, 3.0], [4700.0, 25.0], [4800.0, 33.0], [4900.0, 33.0], [5100.0, 45.0], [5000.0, 44.0], [5200.0, 53.0], [5300.0, 39.0], [5500.0, 33.0], [5400.0, 48.0], [5600.0, 39.0], [5700.0, 24.0], [5800.0, 27.0], [6000.0, 13.0], [6100.0, 11.0], [5900.0, 13.0], [6200.0, 8.0], [6300.0, 3.0], [6400.0, 7.0], [6500.0, 4.0], [6600.0, 1.0], [6800.0, 3.0], [6700.0, 3.0], [6900.0, 1.0], [7000.0, 1.0], [7200.0, 1.0], [7300.0, 1.0], [400.0, 1.0], [500.0, 2.0]], "isOverall": false, "label": "Read News", "isController": true}, {"data": [[0.0, 296.0], [600.0, 10.0], [700.0, 4.0], [200.0, 61.0], [800.0, 6.0], [900.0, 3.0], [1000.0, 1.0], [1100.0, 1.0], [300.0, 81.0], [1400.0, 1.0], [100.0, 132.0], [400.0, 29.0], [500.0, 29.0]], "isOverall": false, "label": "GetNewsList(5)", "isController": false}, {"data": [[0.0, 196.0], [1100.0, 3.0], [300.0, 74.0], [600.0, 8.0], [1200.0, 1.0], [700.0, 2.0], [100.0, 274.0], [200.0, 41.0], [400.0, 38.0], [800.0, 3.0], [900.0, 3.0], [500.0, 17.0]], "isOverall": false, "label": "GetNewsCount", "isController": false}, {"data": [[0.0, 390.0], [600.0, 15.0], [700.0, 4.0], [200.0, 51.0], [800.0, 3.0], [900.0, 3.0], [1000.0, 4.0], [1100.0, 2.0], [300.0, 37.0], [100.0, 112.0], [400.0, 22.0], [1800.0, 1.0], [500.0, 14.0]], "isOverall": false, "label": "GetNewsList(10)", "isController": false}, {"data": [[600.0, 3.0], [700.0, 2.0], [900.0, 2.0], [1000.0, 1.0], [1100.0, 7.0], [1300.0, 2.0], [1400.0, 1.0], [1500.0, 5.0], [1600.0, 3.0], [1700.0, 3.0], [1800.0, 5.0], [1900.0, 2.0], [2000.0, 2.0], [2100.0, 2.0], [2300.0, 8.0], [2200.0, 2.0], [2500.0, 3.0], [2700.0, 2.0], [2800.0, 4.0], [2900.0, 6.0], [3000.0, 7.0], [3100.0, 1.0], [3300.0, 2.0], [3200.0, 3.0], [3400.0, 3.0], [3500.0, 9.0], [3600.0, 12.0], [3700.0, 4.0], [3800.0, 12.0], [3900.0, 11.0], [4000.0, 18.0], [4100.0, 23.0], [4300.0, 48.0], [4200.0, 26.0], [4400.0, 48.0], [4500.0, 50.0], [4600.0, 50.0], [4700.0, 56.0], [4800.0, 51.0], [5000.0, 40.0], [4900.0, 38.0], [5100.0, 39.0], [5200.0, 33.0], [5300.0, 13.0], [5400.0, 8.0], [5500.0, 6.0], [5600.0, 9.0], [5700.0, 1.0], [6000.0, 4.0], [6200.0, 2.0], [6300.0, 1.0], [6500.0, 1.0], [100.0, 1.0], [200.0, 2.0], [300.0, 3.0], [400.0, 1.0], [500.0, 2.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 7300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 155.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1843.0, "series": [{"data": [[0.0, 1843.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 155.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 677.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 38.41323529411767, "minX": 1.57793424E12, "maxY": 49.12004530011326, "series": [{"data": [[1.5779343E12, 49.12004530011326], [1.57793424E12, 38.41323529411767]], "isOverall": false, "label": "Read News Thread Group(\u83B7\u53D6\u65B0\u95FB)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5779343E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 41.0, "minX": 1.0, "maxY": 5311.926186291738, "series": [{"data": [[32.0, 3299.285714285714], [33.0, 2526.5], [34.0, 4660.0], [36.0, 2819.0], [37.0, 2948.0], [38.0, 4568.0], [39.0, 4714.0], [41.0, 3488.0], [40.0, 4620.0], [42.0, 4095.25], [43.0, 3257.5], [44.0, 3295.0], [45.0, 3451.0], [47.0, 4672.5], [3.0, 508.0], [48.0, 4631.5], [50.0, 5311.926186291738], [4.0, 530.0], [6.0, 589.0], [8.0, 775.0], [9.0, 895.0], [10.0, 816.0], [11.0, 922.6666666666666], [14.0, 1143.0], [15.0, 1309.6666666666667], [16.0, 1372.5], [17.0, 1323.3333333333333], [19.0, 1564.0], [20.0, 1749.0], [21.0, 3720.0], [22.0, 1824.0], [24.0, 2002.0], [25.0, 1978.0], [27.0, 2143.5], [30.0, 2465.0], [31.0, 2567.0]], "isOverall": false, "label": "Read News", "isController": true}, {"data": [[47.34862385321102, 4986.308868501532]], "isOverall": false, "label": "Read News-Aggregated", "isController": true}, {"data": [[32.0, 93.71428571428572], [33.0, 87.5], [34.0, 257.3333333333333], [36.0, 99.5], [37.0, 82.0], [38.0, 216.66666666666666], [39.0, 80.0], [41.0, 278.0], [40.0, 108.0], [42.0, 74.75], [43.0, 131.0], [44.0, 104.0], [45.0, 225.0], [47.0, 82.5], [3.0, 41.0], [48.0, 98.5], [50.0, 218.08260105448167], [4.0, 101.0], [6.0, 83.66666666666667], [8.0, 268.0], [9.0, 81.0], [10.0, 105.5], [11.0, 84.33333333333333], [14.0, 95.0], [15.0, 118.66666666666667], [16.0, 81.0], [17.0, 96.33333333333333], [19.0, 190.5], [20.0, 85.0], [21.0, 100.0], [22.0, 87.0], [24.0, 314.0], [25.0, 74.4], [27.0, 101.25], [30.0, 322.0], [31.0, 82.0]], "isOverall": false, "label": "GetNewsList(5)", "isController": false}, {"data": [[47.34862385321102, 204.50764525993873]], "isOverall": false, "label": "GetNewsList(5)-Aggregated", "isController": false}, {"data": [[2.0, 153.5], [32.0, 102.75], [35.0, 86.0], [34.0, 296.6666666666667], [36.0, 178.0], [37.0, 110.0], [38.0, 104.0], [39.0, 92.25], [40.0, 208.0], [41.0, 335.0], [42.0, 285.0], [43.0, 105.33333333333333], [45.0, 404.3333333333333], [44.0, 120.5], [47.0, 129.5], [3.0, 51.5], [48.0, 91.5], [49.0, 92.5], [50.0, 207.10739436619707], [5.0, 78.66666666666667], [6.0, 47.0], [8.0, 259.0], [9.0, 58.0], [10.0, 119.5], [12.0, 68.0], [14.0, 93.66666666666667], [16.0, 57.6], [17.0, 49.0], [19.0, 147.0], [21.0, 79.0], [22.0, 74.0], [24.0, 103.4], [26.0, 60.25], [27.0, 75.0], [29.0, 98.5], [30.0, 177.0], [31.0, 269.0]], "isOverall": false, "label": "GetNewsCount", "isController": false}, {"data": [[47.03333333333333, 198.13939393939407]], "isOverall": false, "label": "GetNewsCount-Aggregated", "isController": false}, {"data": [[32.0, 84.8], [2.0, 234.0], [35.0, 88.5], [34.0, 153.33333333333334], [37.0, 116.5], [39.0, 72.0], [38.0, 270.6666666666667], [40.0, 154.0], [42.0, 119.55555555555556], [43.0, 95.0], [44.0, 91.6], [47.0, 422.0], [3.0, 243.0], [48.0, 103.0], [49.0, 91.0], [50.0, 179.72934973637967], [4.0, 116.0], [5.0, 128.0], [6.0, 111.5], [7.0, 75.0], [9.0, 79.5], [10.0, 100.5], [11.0, 95.0], [13.0, 229.0], [14.0, 88.66666666666667], [16.0, 80.33333333333333], [17.0, 80.33333333333333], [19.0, 93.0], [20.0, 111.0], [21.0, 90.0], [22.0, 108.0], [24.0, 72.5], [25.0, 77.0], [27.0, 85.75], [28.0, 124.0], [29.0, 250.0], [31.0, 105.66666666666667]], "isOverall": false, "label": "GetNewsList(10)", "isController": false}, {"data": [[47.202127659574465, 171.33282674772022]], "isOverall": false, "label": "GetNewsList(10)-Aggregated", "isController": false}, {"data": [[32.0, 3095.3333333333335], [34.0, 3094.0], [35.0, 3234.5], [36.0, 3660.6666666666665], [38.0, 3816.4285714285716], [39.0, 4088.6666666666665], [40.0, 3613.7000000000003], [41.0, 4310.5], [42.0, 3190.0], [43.0, 3424.6666666666665], [45.0, 3897.0], [44.0, 4128.0], [47.0, 4218.8], [46.0, 4885.0], [3.0, 489.0], [48.0, 3467.0], [49.0, 3470.0], [50.0, 4719.096322241686], [4.0, 843.5], [5.0, 654.3333333333333], [6.0, 1266.5], [7.0, 1119.5], [8.0, 1158.0], [9.0, 967.75], [10.0, 619.0], [11.0, 2028.0], [12.0, 1561.0], [13.0, 1485.0], [14.0, 1834.0], [15.0, 1799.3333333333335], [1.0, 185.0], [16.0, 1493.6], [17.0, 1185.0], [19.0, 1491.0], [20.0, 3066.6666666666665], [21.0, 2047.75], [22.0, 3551.0], [23.0, 1606.0], [24.0, 1754.75], [26.0, 1896.25], [27.0, 1944.0], [29.0, 3675.4444444444443], [30.0, 2641.3333333333335], [31.0, 2758.2]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[45.81365576102418, 4337.541963015647]], "isOverall": false, "label": "Login-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 50.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.57793424E12, "maxY": 60803.71666666667, "series": [{"data": [[1.5779343E12, 60803.71666666667], [1.57793424E12, 15713.55]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.5779343E12, 0.0], [1.57793424E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5779343E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 134.27941176470586, "minX": 1.57793424E12, "maxY": 5357.1081081081065, "series": [{"data": [[1.5779343E12, 5357.1081081081065], [1.57793424E12, 3573.999999999999]], "isOverall": false, "label": "Read News", "isController": true}, {"data": [[1.5779343E12, 222.94594594594585], [1.57793424E12, 134.27941176470586]], "isOverall": false, "label": "GetNewsList(5)", "isController": false}, {"data": [[1.5779343E12, 212.49618320610693], [1.57793424E12, 142.82352941176467]], "isOverall": false, "label": "GetNewsCount", "isController": false}, {"data": [[1.5779343E12, 177.96743295019138], [1.57793424E12, 145.86764705882356]], "isOverall": false, "label": "GetNewsList(10)", "isController": false}, {"data": [[1.5779343E12, 4622.137566137562], [1.57793424E12, 3151.0294117647068]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5779343E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 133.0073529411765, "minX": 1.57793424E12, "maxY": 5328.548262548265, "series": [{"data": [[1.5779343E12, 5328.548262548265], [1.57793424E12, 3569.5661764705874]], "isOverall": false, "label": "Read News", "isController": true}, {"data": [[1.5779343E12, 216.94787644787638], [1.57793424E12, 133.0073529411765]], "isOverall": false, "label": "GetNewsList(5)", "isController": false}, {"data": [[1.5779343E12, 210.62022900763347], [1.57793424E12, 142.53676470588238]], "isOverall": false, "label": "GetNewsCount", "isController": false}, {"data": [[1.5779343E12, 167.72413793103462], [1.57793424E12, 143.77205882352948]], "isOverall": false, "label": "GetNewsList(10)", "isController": false}, {"data": [[1.5779343E12, 4612.668430335094], [1.57793424E12, 3150.250000000001]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5779343E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.57793424E12, "maxY": 102.05598455598452, "series": [{"data": [[1.5779343E12, 102.05598455598452], [1.57793424E12, 96.91176470588236]], "isOverall": false, "label": "Read News", "isController": true}, {"data": [[1.5779343E12, 0.13127413127413123], [1.57793424E12, 0.4705882352941178]], "isOverall": false, "label": "GetNewsList(5)", "isController": false}, {"data": [[1.5779343E12, 49.326335877862604], [1.57793424E12, 39.16176470588236]], "isOverall": false, "label": "GetNewsCount", "isController": false}, {"data": [[1.5779343E12, 0.0], [1.57793424E12, 0.5073529411764709]], "isOverall": false, "label": "GetNewsList(10)", "isController": false}, {"data": [[1.5779343E12, 52.005291005291014], [1.57793424E12, 56.7720588235294]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5779343E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 39.0, "minX": 1.57793424E12, "maxY": 6563.0, "series": [{"data": [[1.5779343E12, 6563.0], [1.57793424E12, 5243.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.5779343E12, 44.0], [1.57793424E12, 39.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.5779343E12, 4848.0], [1.57793424E12, 4173.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.5779343E12, 5550.839999999998], [1.57793424E12, 4879.699999999997]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.5779343E12, 5118.999999999999], [1.57793424E12, 4549.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5779343E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 87.0, "minX": 15.0, "maxY": 637.0, "series": [{"data": [[32.0, 98.0], [33.0, 440.5], [34.0, 114.5], [35.0, 139.0], [37.0, 143.0], [36.0, 108.5], [39.0, 111.0], [40.0, 446.5], [41.0, 293.0], [44.0, 637.0], [45.0, 198.5], [46.0, 107.0], [47.0, 259.0], [49.0, 174.0], [51.0, 265.5], [50.0, 178.0], [53.0, 148.0], [57.0, 103.0], [56.0, 87.0], [59.0, 270.0], [63.0, 333.0], [66.0, 132.5], [68.0, 215.0], [76.0, 125.0], [15.0, 128.0], [17.0, 115.0], [18.0, 94.0], [19.0, 101.0], [20.0, 114.5], [21.0, 290.0], [23.0, 218.5], [24.0, 235.0], [25.0, 127.5], [26.0, 125.5], [27.0, 124.0], [28.0, 110.0], [29.0, 291.5], [30.0, 108.0], [31.0, 130.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 76.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 87.0, "minX": 15.0, "maxY": 603.0, "series": [{"data": [[32.0, 98.0], [33.0, 397.5], [34.0, 114.5], [35.0, 138.0], [37.0, 139.0], [36.0, 107.5], [39.0, 111.0], [40.0, 446.0], [41.0, 293.0], [44.0, 603.0], [45.0, 198.5], [46.0, 107.0], [47.0, 259.0], [49.0, 174.0], [51.0, 265.5], [50.0, 159.0], [53.0, 148.0], [57.0, 102.0], [56.0, 87.0], [59.0, 270.0], [63.0, 333.0], [66.0, 132.5], [68.0, 215.0], [76.0, 125.0], [15.0, 128.0], [17.0, 115.0], [18.0, 94.0], [19.0, 100.0], [20.0, 114.5], [21.0, 290.0], [23.0, 218.5], [24.0, 235.0], [25.0, 127.5], [26.0, 125.5], [27.0, 124.0], [28.0, 109.0], [29.0, 286.0], [30.0, 105.0], [31.0, 129.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 76.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 9.9, "minX": 1.57793424E12, "maxY": 34.68333333333333, "series": [{"data": [[1.5779343E12, 34.68333333333333], [1.57793424E12, 9.9]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5779343E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 9.066666666666666, "minX": 1.57793424E12, "maxY": 35.516666666666666, "series": [{"data": [[1.5779343E12, 35.516666666666666], [1.57793424E12, 9.066666666666666]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5779343E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 2.2666666666666666, "minX": 1.57793424E12, "maxY": 9.45, "series": [{"data": [[1.5779343E12, 8.633333333333333], [1.57793424E12, 2.2666666666666666]], "isOverall": false, "label": "Read News-success", "isController": true}, {"data": [[1.5779343E12, 8.633333333333333], [1.57793424E12, 2.2666666666666666]], "isOverall": false, "label": "GetNewsList(5)-success", "isController": false}, {"data": [[1.5779343E12, 8.733333333333333], [1.57793424E12, 2.2666666666666666]], "isOverall": false, "label": "GetNewsCount-success", "isController": false}, {"data": [[1.5779343E12, 8.7], [1.57793424E12, 2.2666666666666666]], "isOverall": false, "label": "GetNewsList(10)-success", "isController": false}, {"data": [[1.5779343E12, 9.45], [1.57793424E12, 2.2666666666666666]], "isOverall": false, "label": "Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5779343E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 11.333333333333334, "minX": 1.57793424E12, "maxY": 44.15, "series": [{"data": [[1.5779343E12, 44.15], [1.57793424E12, 11.333333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5779343E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

