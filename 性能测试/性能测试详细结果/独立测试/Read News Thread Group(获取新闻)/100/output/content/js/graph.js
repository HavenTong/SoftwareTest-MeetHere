/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 41.0, "minX": 0.0, "maxY": 31410.0, "series": [{"data": [[0.0, 843.0], [0.1, 843.0], [0.2, 1008.0], [0.3, 1008.0], [0.4, 1037.0], [0.5, 1040.0], [0.6, 1040.0], [0.7, 1100.0], [0.8, 1100.0], [0.9, 1139.0], [1.0, 1140.0], [1.1, 1140.0], [1.2, 1140.0], [1.3, 1146.0], [1.4, 1146.0], [1.5, 1160.0], [1.6, 1160.0], [1.7, 1591.0], [1.8, 1665.0], [1.9, 1665.0], [2.0, 2427.0], [2.1, 2427.0], [2.2, 2519.0], [2.3, 2616.0], [2.4, 2616.0], [2.5, 2620.0], [2.6, 2647.0], [2.7, 2647.0], [2.8, 2659.0], [2.9, 2659.0], [3.0, 2667.0], [3.1, 2702.0], [3.2, 2702.0], [3.3, 2703.0], [3.4, 3490.0], [3.5, 3490.0], [3.6, 3540.0], [3.7, 3540.0], [3.8, 3636.0], [3.9, 3803.0], [4.0, 3803.0], [4.1, 3898.0], [4.2, 3898.0], [4.3, 4058.0], [4.4, 4078.0], [4.5, 4078.0], [4.6, 4080.0], [4.7, 4153.0], [4.8, 4153.0], [4.9, 4221.0], [5.0, 4221.0], [5.1, 4221.0], [5.2, 4279.0], [5.3, 4279.0], [5.4, 4384.0], [5.5, 4384.0], [5.6, 4435.0], [5.7, 4450.0], [5.8, 4450.0], [5.9, 4519.0], [6.0, 4635.0], [6.1, 4635.0], [6.2, 4651.0], [6.3, 4651.0], [6.4, 4857.0], [6.5, 4911.0], [6.6, 4911.0], [6.7, 4982.0], [6.8, 5090.0], [6.9, 5090.0], [7.0, 5167.0], [7.1, 5167.0], [7.2, 5241.0], [7.3, 5289.0], [7.4, 5289.0], [7.5, 5331.0], [7.6, 5331.0], [7.7, 5390.0], [7.8, 5573.0], [7.9, 5573.0], [8.0, 5727.0], [8.1, 5862.0], [8.2, 5862.0], [8.3, 6033.0], [8.4, 6033.0], [8.5, 6215.0], [8.6, 6234.0], [8.7, 6234.0], [8.8, 6316.0], [8.9, 6345.0], [9.0, 6345.0], [9.1, 6394.0], [9.2, 6394.0], [9.3, 6397.0], [9.4, 6558.0], [9.5, 6558.0], [9.6, 6629.0], [9.7, 6629.0], [9.8, 6668.0], [9.9, 6679.0], [10.0, 6679.0], [10.1, 6681.0], [10.2, 6778.0], [10.3, 6778.0], [10.4, 6793.0], [10.5, 6793.0], [10.6, 6834.0], [10.7, 6895.0], [10.8, 6895.0], [10.9, 6916.0], [11.0, 6916.0], [11.1, 6983.0], [11.2, 7009.0], [11.3, 7009.0], [11.4, 7067.0], [11.5, 7181.0], [11.6, 7181.0], [11.7, 7183.0], [11.8, 7183.0], [11.9, 7194.0], [12.0, 7211.0], [12.1, 7211.0], [12.2, 7212.0], [12.3, 7216.0], [12.4, 7216.0], [12.5, 7242.0], [12.6, 7242.0], [12.7, 7251.0], [12.8, 7269.0], [12.9, 7269.0], [13.0, 7290.0], [13.1, 7290.0], [13.2, 7320.0], [13.3, 7336.0], [13.4, 7336.0], [13.5, 7360.0], [13.6, 7360.0], [13.7, 7360.0], [13.8, 7368.0], [13.9, 7368.0], [14.0, 7390.0], [14.1, 7397.0], [14.2, 7397.0], [14.3, 7397.0], [14.4, 7397.0], [14.5, 7428.0], [14.6, 7437.0], [14.7, 7437.0], [14.8, 7446.0], [14.9, 7453.0], [15.0, 7453.0], [15.1, 7476.0], [15.2, 7476.0], [15.3, 7508.0], [15.4, 7532.0], [15.5, 7532.0], [15.6, 7540.0], [15.7, 7581.0], [15.8, 7581.0], [15.9, 7585.0], [16.0, 7585.0], [16.1, 7586.0], [16.2, 7614.0], [16.3, 7614.0], [16.4, 7637.0], [16.5, 7637.0], [16.6, 7668.0], [16.7, 7669.0], [16.8, 7669.0], [16.9, 7685.0], [17.0, 7689.0], [17.1, 7689.0], [17.2, 7728.0], [17.3, 7728.0], [17.4, 7742.0], [17.5, 7770.0], [17.6, 7770.0], [17.7, 7821.0], [17.8, 7837.0], [17.9, 7837.0], [18.0, 7873.0], [18.1, 7873.0], [18.2, 7875.0], [18.3, 7888.0], [18.4, 7888.0], [18.5, 7899.0], [18.6, 7899.0], [18.7, 7911.0], [18.8, 7913.0], [18.9, 7913.0], [19.0, 7916.0], [19.1, 7938.0], [19.2, 7938.0], [19.3, 7945.0], [19.4, 7945.0], [19.5, 7954.0], [19.6, 7975.0], [19.7, 7975.0], [19.8, 7980.0], [19.9, 7980.0], [20.0, 7985.0], [20.1, 7986.0], [20.2, 7986.0], [20.3, 7992.0], [20.4, 7997.0], [20.5, 7997.0], [20.6, 8017.0], [20.7, 8017.0], [20.8, 8034.0], [20.9, 8036.0], [21.0, 8036.0], [21.1, 8098.0], [21.2, 8123.0], [21.3, 8123.0], [21.4, 8167.0], [21.5, 8167.0], [21.6, 8194.0], [21.7, 8207.0], [21.8, 8207.0], [21.9, 8238.0], [22.0, 8238.0], [22.1, 8245.0], [22.2, 8267.0], [22.3, 8267.0], [22.4, 8286.0], [22.5, 8299.0], [22.6, 8299.0], [22.7, 8307.0], [22.8, 8307.0], [22.9, 8362.0], [23.0, 8364.0], [23.1, 8364.0], [23.2, 8369.0], [23.3, 8369.0], [23.4, 8388.0], [23.5, 8430.0], [23.6, 8430.0], [23.7, 8476.0], [23.8, 8484.0], [23.9, 8484.0], [24.0, 8491.0], [24.1, 8491.0], [24.2, 8534.0], [24.3, 8544.0], [24.4, 8544.0], [24.5, 8548.0], [24.6, 8580.0], [24.7, 8580.0], [24.8, 8593.0], [24.9, 8593.0], [25.0, 8611.0], [25.1, 8625.0], [25.2, 8625.0], [25.3, 8671.0], [25.4, 8671.0], [25.5, 8684.0], [25.6, 8731.0], [25.7, 8731.0], [25.8, 8739.0], [25.9, 8753.0], [26.0, 8753.0], [26.1, 8770.0], [26.2, 8770.0], [26.3, 8771.0], [26.4, 8807.0], [26.5, 8807.0], [26.6, 8812.0], [26.7, 8822.0], [26.8, 8822.0], [26.9, 8823.0], [27.0, 8823.0], [27.1, 8829.0], [27.2, 8912.0], [27.3, 8912.0], [27.4, 8923.0], [27.5, 8923.0], [27.6, 8961.0], [27.7, 9004.0], [27.8, 9004.0], [27.9, 9012.0], [28.0, 9024.0], [28.1, 9024.0], [28.2, 9035.0], [28.3, 9035.0], [28.4, 9041.0], [28.5, 9041.0], [28.6, 9041.0], [28.7, 9047.0], [28.8, 9047.0], [28.9, 9059.0], [29.0, 9075.0], [29.1, 9075.0], [29.2, 9077.0], [29.3, 9091.0], [29.4, 9091.0], [29.5, 9093.0], [29.6, 9093.0], [29.7, 9100.0], [29.8, 9115.0], [29.9, 9115.0], [30.0, 9127.0], [30.1, 9133.0], [30.2, 9133.0], [30.3, 9153.0], [30.4, 9153.0], [30.5, 9170.0], [30.6, 9174.0], [30.7, 9174.0], [30.8, 9186.0], [30.9, 9186.0], [31.0, 9199.0], [31.1, 9224.0], [31.2, 9224.0], [31.3, 9265.0], [31.4, 9273.0], [31.5, 9273.0], [31.6, 9280.0], [31.7, 9280.0], [31.8, 9285.0], [31.9, 9299.0], [32.0, 9299.0], [32.1, 9306.0], [32.2, 9306.0], [32.3, 9323.0], [32.4, 9334.0], [32.5, 9334.0], [32.6, 9352.0], [32.7, 9358.0], [32.8, 9358.0], [32.9, 9363.0], [33.0, 9363.0], [33.1, 9378.0], [33.2, 9387.0], [33.3, 9387.0], [33.4, 9391.0], [33.5, 9402.0], [33.6, 9402.0], [33.7, 9414.0], [33.8, 9414.0], [33.9, 9415.0], [34.0, 9432.0], [34.1, 9432.0], [34.2, 9434.0], [34.3, 9434.0], [34.4, 9447.0], [34.5, 9452.0], [34.6, 9452.0], [34.7, 9457.0], [34.8, 9462.0], [34.9, 9462.0], [35.0, 9467.0], [35.1, 9467.0], [35.2, 9468.0], [35.3, 9471.0], [35.4, 9471.0], [35.5, 9475.0], [35.6, 9487.0], [35.7, 9487.0], [35.8, 9501.0], [35.9, 9501.0], [36.0, 9512.0], [36.1, 9551.0], [36.2, 9551.0], [36.3, 9564.0], [36.4, 9564.0], [36.5, 9565.0], [36.6, 9580.0], [36.7, 9580.0], [36.8, 9594.0], [36.9, 9597.0], [37.0, 9597.0], [37.1, 9602.0], [37.2, 9602.0], [37.3, 9613.0], [37.4, 9630.0], [37.5, 9630.0], [37.6, 9670.0], [37.7, 9670.0], [37.8, 9685.0], [37.9, 9690.0], [38.0, 9690.0], [38.1, 9691.0], [38.2, 9698.0], [38.3, 9698.0], [38.4, 9704.0], [38.5, 9704.0], [38.6, 9708.0], [38.7, 9713.0], [38.8, 9713.0], [38.9, 9723.0], [39.0, 9731.0], [39.1, 9731.0], [39.2, 9739.0], [39.3, 9739.0], [39.4, 9791.0], [39.5, 9792.0], [39.6, 9792.0], [39.7, 9800.0], [39.8, 9800.0], [39.9, 9805.0], [40.0, 9806.0], [40.1, 9806.0], [40.2, 9810.0], [40.3, 9814.0], [40.4, 9814.0], [40.5, 9816.0], [40.6, 9816.0], [40.7, 9822.0], [40.8, 9825.0], [40.9, 9825.0], [41.0, 9827.0], [41.1, 9827.0], [41.2, 9829.0], [41.3, 9846.0], [41.4, 9846.0], [41.5, 9854.0], [41.6, 9859.0], [41.7, 9859.0], [41.8, 9862.0], [41.9, 9862.0], [42.0, 9864.0], [42.1, 9867.0], [42.2, 9867.0], [42.3, 9869.0], [42.4, 9871.0], [42.5, 9871.0], [42.6, 9881.0], [42.7, 9881.0], [42.8, 9886.0], [42.9, 9902.0], [43.0, 9902.0], [43.1, 9917.0], [43.2, 9917.0], [43.3, 9926.0], [43.4, 9934.0], [43.5, 9934.0], [43.6, 9935.0], [43.7, 9938.0], [43.8, 9938.0], [43.9, 9939.0], [44.0, 9939.0], [44.1, 9945.0], [44.2, 9946.0], [44.3, 9946.0], [44.4, 9948.0], [44.5, 9953.0], [44.6, 9953.0], [44.7, 9960.0], [44.8, 9960.0], [44.9, 9961.0], [45.0, 9966.0], [45.1, 9966.0], [45.2, 9969.0], [45.3, 9969.0], [45.4, 9987.0], [45.5, 9998.0], [45.6, 9998.0], [45.7, 9999.0], [45.8, 10010.0], [45.9, 10010.0], [46.0, 10012.0], [46.1, 10012.0], [46.2, 10012.0], [46.3, 10012.0], [46.4, 10012.0], [46.5, 10015.0], [46.6, 10015.0], [46.7, 10024.0], [46.8, 10032.0], [46.9, 10032.0], [47.0, 10039.0], [47.1, 10041.0], [47.2, 10041.0], [47.3, 10046.0], [47.4, 10046.0], [47.5, 10052.0], [47.6, 10054.0], [47.7, 10054.0], [47.8, 10055.0], [47.9, 10060.0], [48.0, 10060.0], [48.1, 10064.0], [48.2, 10064.0], [48.3, 10074.0], [48.4, 10075.0], [48.5, 10075.0], [48.6, 10076.0], [48.7, 10076.0], [48.8, 10080.0], [48.9, 10081.0], [49.0, 10081.0], [49.1, 10082.0], [49.2, 10085.0], [49.3, 10085.0], [49.4, 10086.0], [49.5, 10086.0], [49.6, 10089.0], [49.7, 10097.0], [49.8, 10097.0], [49.9, 10122.0], [50.0, 10126.0], [50.1, 10126.0], [50.2, 10132.0], [50.3, 10132.0], [50.4, 10133.0], [50.5, 10139.0], [50.6, 10139.0], [50.7, 10164.0], [50.8, 10164.0], [50.9, 10195.0], [51.0, 10197.0], [51.1, 10197.0], [51.2, 10198.0], [51.3, 10207.0], [51.4, 10207.0], [51.5, 10210.0], [51.6, 10210.0], [51.7, 10211.0], [51.8, 10211.0], [51.9, 10211.0], [52.0, 10213.0], [52.1, 10213.0], [52.2, 10235.0], [52.3, 10246.0], [52.4, 10246.0], [52.5, 10247.0], [52.6, 10259.0], [52.7, 10259.0], [52.8, 10268.0], [52.9, 10268.0], [53.0, 10270.0], [53.1, 10271.0], [53.2, 10271.0], [53.3, 10275.0], [53.4, 10285.0], [53.5, 10285.0], [53.6, 10288.0], [53.7, 10288.0], [53.8, 10290.0], [53.9, 10292.0], [54.0, 10292.0], [54.1, 10299.0], [54.2, 10299.0], [54.3, 10309.0], [54.4, 10315.0], [54.5, 10315.0], [54.6, 10318.0], [54.7, 10321.0], [54.8, 10321.0], [54.9, 10322.0], [55.0, 10322.0], [55.1, 10325.0], [55.2, 10326.0], [55.3, 10326.0], [55.4, 10331.0], [55.5, 10331.0], [55.6, 10353.0], [55.7, 10358.0], [55.8, 10358.0], [55.9, 10365.0], [56.0, 10372.0], [56.1, 10372.0], [56.2, 10373.0], [56.3, 10373.0], [56.4, 10382.0], [56.5, 10386.0], [56.6, 10386.0], [56.7, 10402.0], [56.8, 10412.0], [56.9, 10412.0], [57.0, 10414.0], [57.1, 10414.0], [57.2, 10419.0], [57.3, 10421.0], [57.4, 10421.0], [57.5, 10428.0], [57.6, 10428.0], [57.7, 10442.0], [57.8, 10443.0], [57.9, 10443.0], [58.0, 10444.0], [58.1, 10444.0], [58.2, 10444.0], [58.3, 10446.0], [58.4, 10446.0], [58.5, 10448.0], [58.6, 10461.0], [58.7, 10461.0], [58.8, 10465.0], [58.9, 10469.0], [59.0, 10469.0], [59.1, 10481.0], [59.2, 10481.0], [59.3, 10482.0], [59.4, 10482.0], [59.5, 10482.0], [59.6, 10484.0], [59.7, 10484.0], [59.8, 10489.0], [59.9, 10490.0], [60.0, 10490.0], [60.1, 10496.0], [60.2, 10499.0], [60.3, 10499.0], [60.4, 10517.0], [60.5, 10517.0], [60.6, 10520.0], [60.7, 10526.0], [60.8, 10526.0], [60.9, 10530.0], [61.0, 10530.0], [61.1, 10550.0], [61.2, 10562.0], [61.3, 10562.0], [61.4, 10580.0], [61.5, 10594.0], [61.6, 10594.0], [61.7, 10613.0], [61.8, 10613.0], [61.9, 10614.0], [62.0, 10615.0], [62.1, 10615.0], [62.2, 10624.0], [62.3, 10626.0], [62.4, 10626.0], [62.5, 10628.0], [62.6, 10628.0], [62.7, 10630.0], [62.8, 10636.0], [62.9, 10636.0], [63.0, 10638.0], [63.1, 10638.0], [63.2, 10641.0], [63.3, 10651.0], [63.4, 10651.0], [63.5, 10652.0], [63.6, 10659.0], [63.7, 10659.0], [63.8, 10660.0], [63.9, 10660.0], [64.0, 10664.0], [64.1, 10670.0], [64.2, 10670.0], [64.3, 10681.0], [64.4, 10681.0], [64.5, 10685.0], [64.6, 10705.0], [64.7, 10705.0], [64.8, 10739.0], [64.9, 10743.0], [65.0, 10743.0], [65.1, 10751.0], [65.2, 10751.0], [65.3, 10761.0], [65.4, 10774.0], [65.5, 10774.0], [65.6, 10777.0], [65.7, 10777.0], [65.8, 10777.0], [65.9, 10783.0], [66.0, 10783.0], [66.1, 10786.0], [66.2, 10799.0], [66.3, 10799.0], [66.4, 10805.0], [66.5, 10805.0], [66.6, 10813.0], [66.7, 10814.0], [66.8, 10814.0], [66.9, 10820.0], [67.0, 10822.0], [67.1, 10822.0], [67.2, 10825.0], [67.3, 10825.0], [67.4, 10828.0], [67.5, 10833.0], [67.6, 10833.0], [67.7, 10846.0], [67.8, 10851.0], [67.9, 10851.0], [68.0, 10864.0], [68.1, 10864.0], [68.2, 10869.0], [68.3, 10876.0], [68.4, 10876.0], [68.5, 10877.0], [68.6, 10877.0], [68.7, 10880.0], [68.8, 10885.0], [68.9, 10885.0], [69.0, 10891.0], [69.1, 10895.0], [69.2, 10895.0], [69.3, 10895.0], [69.4, 10895.0], [69.5, 10906.0], [69.6, 10916.0], [69.7, 10916.0], [69.8, 10932.0], [69.9, 10932.0], [70.0, 10933.0], [70.1, 10933.0], [70.2, 10933.0], [70.3, 10938.0], [70.4, 10945.0], [70.5, 10945.0], [70.6, 10945.0], [70.7, 10945.0], [70.8, 10958.0], [70.9, 10960.0], [71.0, 10960.0], [71.1, 10964.0], [71.2, 10973.0], [71.3, 10973.0], [71.4, 10984.0], [71.5, 10984.0], [71.6, 10990.0], [71.7, 10992.0], [71.8, 10992.0], [71.9, 10994.0], [72.0, 10994.0], [72.1, 10998.0], [72.2, 11002.0], [72.3, 11002.0], [72.4, 11037.0], [72.5, 11046.0], [72.6, 11046.0], [72.7, 11051.0], [72.8, 11051.0], [72.9, 11060.0], [73.0, 11065.0], [73.1, 11065.0], [73.2, 11096.0], [73.3, 11096.0], [73.4, 11099.0], [73.5, 11106.0], [73.6, 11106.0], [73.7, 11119.0], [73.8, 11123.0], [73.9, 11123.0], [74.0, 11142.0], [74.1, 11142.0], [74.2, 11144.0], [74.3, 11145.0], [74.4, 11145.0], [74.5, 11147.0], [74.6, 11173.0], [74.7, 11173.0], [74.8, 11202.0], [74.9, 11202.0], [75.0, 11206.0], [75.1, 11221.0], [75.2, 11221.0], [75.3, 11222.0], [75.4, 11222.0], [75.5, 11229.0], [75.6, 11262.0], [75.7, 11262.0], [75.8, 11262.0], [75.9, 11263.0], [76.0, 11263.0], [76.1, 11265.0], [76.2, 11265.0], [76.3, 11271.0], [76.4, 11281.0], [76.5, 11281.0], [76.6, 11287.0], [76.7, 11298.0], [76.8, 11298.0], [76.9, 11306.0], [77.0, 11306.0], [77.1, 11308.0], [77.2, 11316.0], [77.3, 11316.0], [77.4, 11331.0], [77.5, 11331.0], [77.6, 11346.0], [77.7, 11346.0], [77.8, 11346.0], [77.9, 11356.0], [78.0, 11394.0], [78.1, 11394.0], [78.2, 11427.0], [78.3, 11427.0], [78.4, 11433.0], [78.5, 11446.0], [78.6, 11446.0], [78.7, 11468.0], [78.8, 11468.0], [78.9, 11470.0], [79.0, 11478.0], [79.1, 11478.0], [79.2, 11482.0], [79.3, 11490.0], [79.4, 11490.0], [79.5, 11494.0], [79.6, 11494.0], [79.7, 11500.0], [79.8, 11513.0], [79.9, 11513.0], [80.0, 11524.0], [80.1, 11534.0], [80.2, 11534.0], [80.3, 11556.0], [80.4, 11556.0], [80.5, 11563.0], [80.6, 11564.0], [80.7, 11564.0], [80.8, 11565.0], [80.9, 11565.0], [81.0, 11573.0], [81.1, 11582.0], [81.2, 11582.0], [81.3, 11625.0], [81.4, 11641.0], [81.5, 11641.0], [81.6, 11714.0], [81.7, 11714.0], [81.8, 11760.0], [81.9, 11771.0], [82.0, 11771.0], [82.1, 11790.0], [82.2, 11790.0], [82.3, 11811.0], [82.4, 11811.0], [82.5, 11811.0], [82.6, 11861.0], [82.7, 11879.0], [82.8, 11879.0], [82.9, 11880.0], [83.0, 11880.0], [83.1, 11883.0], [83.2, 11892.0], [83.3, 11892.0], [83.4, 11893.0], [83.5, 11906.0], [83.6, 11906.0], [83.7, 11922.0], [83.8, 11922.0], [83.9, 11964.0], [84.0, 11977.0], [84.1, 11977.0], [84.2, 11986.0], [84.3, 11986.0], [84.4, 12011.0], [84.5, 12019.0], [84.6, 12019.0], [84.7, 12028.0], [84.8, 12034.0], [84.9, 12034.0], [85.0, 12037.0], [85.1, 12037.0], [85.2, 12172.0], [85.3, 12181.0], [85.4, 12181.0], [85.5, 12209.0], [85.6, 12222.0], [85.7, 12222.0], [85.8, 12223.0], [85.9, 12223.0], [86.0, 12250.0], [86.1, 12298.0], [86.2, 12298.0], [86.3, 12303.0], [86.4, 12303.0], [86.5, 12327.0], [86.6, 12358.0], [86.7, 12358.0], [86.8, 12395.0], [86.9, 12415.0], [87.0, 12415.0], [87.1, 12421.0], [87.2, 12421.0], [87.3, 12474.0], [87.4, 12475.0], [87.5, 12475.0], [87.6, 12477.0], [87.7, 12477.0], [87.8, 12565.0], [87.9, 12572.0], [88.0, 12572.0], [88.1, 12597.0], [88.2, 12623.0], [88.3, 12623.0], [88.4, 12625.0], [88.5, 12625.0], [88.6, 12659.0], [88.7, 12701.0], [88.8, 12701.0], [88.9, 12734.0], [89.0, 12764.0], [89.1, 12764.0], [89.2, 12766.0], [89.3, 12766.0], [89.4, 12770.0], [89.5, 12842.0], [89.6, 12842.0], [89.7, 12845.0], [89.8, 12845.0], [89.9, 12882.0], [90.0, 12907.0], [90.1, 12907.0], [90.2, 12914.0], [90.3, 12914.0], [90.4, 12914.0], [90.5, 12962.0], [90.6, 12962.0], [90.7, 12965.0], [90.8, 13005.0], [90.9, 13005.0], [91.0, 13046.0], [91.1, 13046.0], [91.2, 13226.0], [91.3, 13316.0], [91.4, 13316.0], [91.5, 13350.0], [91.6, 13356.0], [91.7, 13356.0], [91.8, 13395.0], [91.9, 13395.0], [92.0, 13413.0], [92.1, 13570.0], [92.2, 13570.0], [92.3, 13580.0], [92.4, 13596.0], [92.5, 13596.0], [92.6, 13598.0], [92.7, 13598.0], [92.8, 13605.0], [92.9, 13612.0], [93.0, 13612.0], [93.1, 13627.0], [93.2, 13627.0], [93.3, 13804.0], [93.4, 13904.0], [93.5, 13904.0], [93.6, 13966.0], [93.7, 14028.0], [93.8, 14028.0], [93.9, 14196.0], [94.0, 14196.0], [94.1, 14345.0], [94.2, 14419.0], [94.3, 14419.0], [94.4, 14635.0], [94.5, 14838.0], [94.6, 14838.0], [94.7, 14911.0], [94.8, 14911.0], [94.9, 14927.0], [95.0, 15160.0], [95.1, 15160.0], [95.2, 15361.0], [95.3, 15361.0], [95.4, 15774.0], [95.5, 15907.0], [95.6, 15907.0], [95.7, 16087.0], [95.8, 16264.0], [95.9, 16264.0], [96.0, 16296.0], [96.1, 16296.0], [96.2, 16332.0], [96.3, 16871.0], [96.4, 16871.0], [96.5, 17752.0], [96.6, 17752.0], [96.7, 17809.0], [96.8, 18057.0], [96.9, 18057.0], [97.0, 18153.0], [97.1, 18481.0], [97.2, 18481.0], [97.3, 18489.0], [97.4, 18489.0], [97.5, 18515.0], [97.6, 20441.0], [97.7, 20441.0], [97.8, 20550.0], [97.9, 21365.0], [98.0, 21365.0], [98.1, 21602.0], [98.2, 21602.0], [98.3, 22584.0], [98.4, 22918.0], [98.5, 22918.0], [98.6, 23788.0], [98.7, 23788.0], [98.8, 24185.0], [98.9, 24559.0], [99.0, 24559.0], [99.1, 24745.0], [99.2, 25701.0], [99.3, 25701.0], [99.4, 29928.0], [99.5, 29928.0], [99.6, 30450.0], [99.7, 30475.0], [99.8, 30475.0], [99.9, 31410.0]], "isOverall": false, "label": "Read News", "isController": true}, {"data": [[0.0, 41.0], [0.1, 41.0], [0.2, 42.0], [0.3, 42.0], [0.4, 42.0], [0.5, 44.0], [0.6, 44.0], [0.7, 45.0], [0.8, 45.0], [0.9, 46.0], [1.0, 46.0], [1.1, 46.0], [1.2, 47.0], [1.3, 48.0], [1.4, 48.0], [1.5, 48.0], [1.6, 48.0], [1.7, 48.0], [1.8, 49.0], [1.9, 49.0], [2.0, 51.0], [2.1, 51.0], [2.2, 52.0], [2.3, 52.0], [2.4, 52.0], [2.5, 53.0], [2.6, 53.0], [2.7, 53.0], [2.8, 53.0], [2.9, 53.0], [3.0, 54.0], [3.1, 54.0], [3.2, 54.0], [3.3, 54.0], [3.4, 55.0], [3.5, 55.0], [3.6, 55.0], [3.7, 55.0], [3.8, 55.0], [3.9, 56.0], [4.0, 56.0], [4.1, 56.0], [4.2, 56.0], [4.3, 56.0], [4.4, 56.0], [4.5, 56.0], [4.6, 57.0], [4.7, 58.0], [4.8, 58.0], [4.9, 58.0], [5.0, 58.0], [5.1, 59.0], [5.2, 59.0], [5.3, 59.0], [5.4, 60.0], [5.5, 60.0], [5.6, 60.0], [5.7, 60.0], [5.8, 60.0], [5.9, 60.0], [6.0, 60.0], [6.1, 60.0], [6.2, 60.0], [6.3, 60.0], [6.4, 61.0], [6.5, 61.0], [6.6, 61.0], [6.7, 62.0], [6.8, 62.0], [6.9, 62.0], [7.0, 62.0], [7.1, 62.0], [7.2, 62.0], [7.3, 62.0], [7.4, 62.0], [7.5, 62.0], [7.6, 62.0], [7.7, 62.0], [7.8, 62.0], [7.9, 62.0], [8.0, 62.0], [8.1, 63.0], [8.2, 63.0], [8.3, 63.0], [8.4, 63.0], [8.5, 63.0], [8.6, 64.0], [8.7, 64.0], [8.8, 65.0], [8.9, 66.0], [9.0, 66.0], [9.1, 66.0], [9.2, 66.0], [9.3, 67.0], [9.4, 67.0], [9.5, 67.0], [9.6, 67.0], [9.7, 67.0], [9.8, 67.0], [9.9, 67.0], [10.0, 67.0], [10.1, 67.0], [10.2, 67.0], [10.3, 67.0], [10.4, 68.0], [10.5, 68.0], [10.6, 69.0], [10.7, 69.0], [10.8, 69.0], [10.9, 69.0], [11.0, 69.0], [11.1, 70.0], [11.2, 70.0], [11.3, 70.0], [11.4, 70.0], [11.5, 71.0], [11.6, 71.0], [11.7, 71.0], [11.8, 71.0], [11.9, 71.0], [12.0, 71.0], [12.1, 71.0], [12.2, 71.0], [12.3, 72.0], [12.4, 72.0], [12.5, 72.0], [12.6, 72.0], [12.7, 73.0], [12.8, 73.0], [12.9, 73.0], [13.0, 73.0], [13.1, 73.0], [13.2, 73.0], [13.3, 73.0], [13.4, 73.0], [13.5, 73.0], [13.6, 74.0], [13.7, 74.0], [13.8, 74.0], [13.9, 74.0], [14.0, 75.0], [14.1, 75.0], [14.2, 75.0], [14.3, 75.0], [14.4, 75.0], [14.5, 76.0], [14.6, 78.0], [14.7, 78.0], [14.8, 79.0], [14.9, 80.0], [15.0, 80.0], [15.1, 80.0], [15.2, 80.0], [15.3, 80.0], [15.4, 81.0], [15.5, 81.0], [15.6, 81.0], [15.7, 82.0], [15.8, 82.0], [15.9, 82.0], [16.0, 82.0], [16.1, 83.0], [16.2, 83.0], [16.3, 83.0], [16.4, 83.0], [16.5, 83.0], [16.6, 83.0], [16.7, 83.0], [16.8, 83.0], [16.9, 83.0], [17.0, 84.0], [17.1, 84.0], [17.2, 84.0], [17.3, 84.0], [17.4, 84.0], [17.5, 85.0], [17.6, 85.0], [17.7, 86.0], [17.8, 86.0], [17.9, 86.0], [18.0, 86.0], [18.1, 86.0], [18.2, 87.0], [18.3, 87.0], [18.4, 87.0], [18.5, 87.0], [18.6, 87.0], [18.7, 87.0], [18.8, 87.0], [18.9, 87.0], [19.0, 87.0], [19.1, 88.0], [19.2, 88.0], [19.3, 88.0], [19.4, 88.0], [19.5, 88.0], [19.6, 88.0], [19.7, 88.0], [19.8, 88.0], [19.9, 88.0], [20.0, 89.0], [20.1, 89.0], [20.2, 89.0], [20.3, 89.0], [20.4, 91.0], [20.5, 91.0], [20.6, 91.0], [20.7, 91.0], [20.8, 92.0], [20.9, 92.0], [21.0, 92.0], [21.1, 92.0], [21.2, 93.0], [21.3, 93.0], [21.4, 93.0], [21.5, 93.0], [21.6, 93.0], [21.7, 93.0], [21.8, 93.0], [21.9, 94.0], [22.0, 94.0], [22.1, 94.0], [22.2, 94.0], [22.3, 94.0], [22.4, 96.0], [22.5, 96.0], [22.6, 96.0], [22.7, 96.0], [22.8, 96.0], [22.9, 96.0], [23.0, 96.0], [23.1, 96.0], [23.2, 97.0], [23.3, 97.0], [23.4, 97.0], [23.5, 97.0], [23.6, 97.0], [23.7, 97.0], [23.8, 98.0], [23.9, 98.0], [24.0, 98.0], [24.1, 98.0], [24.2, 99.0], [24.3, 100.0], [24.4, 100.0], [24.5, 100.0], [24.6, 100.0], [24.7, 100.0], [24.8, 100.0], [24.9, 100.0], [25.0, 101.0], [25.1, 101.0], [25.2, 101.0], [25.3, 102.0], [25.4, 102.0], [25.5, 102.0], [25.6, 102.0], [25.7, 102.0], [25.8, 103.0], [25.9, 103.0], [26.0, 103.0], [26.1, 103.0], [26.2, 103.0], [26.3, 103.0], [26.4, 104.0], [26.5, 104.0], [26.6, 105.0], [26.7, 105.0], [26.8, 105.0], [26.9, 105.0], [27.0, 105.0], [27.1, 105.0], [27.2, 106.0], [27.3, 106.0], [27.4, 107.0], [27.5, 107.0], [27.6, 107.0], [27.7, 108.0], [27.8, 108.0], [27.9, 108.0], [28.0, 108.0], [28.1, 108.0], [28.2, 109.0], [28.3, 109.0], [28.4, 110.0], [28.5, 110.0], [28.6, 110.0], [28.7, 111.0], [28.8, 111.0], [28.9, 111.0], [29.0, 111.0], [29.1, 111.0], [29.2, 111.0], [29.3, 114.0], [29.4, 114.0], [29.5, 116.0], [29.6, 116.0], [29.7, 116.0], [29.8, 116.0], [29.9, 116.0], [30.0, 117.0], [30.1, 119.0], [30.2, 119.0], [30.3, 119.0], [30.4, 119.0], [30.5, 120.0], [30.6, 121.0], [30.7, 121.0], [30.8, 121.0], [30.9, 121.0], [31.0, 121.0], [31.1, 122.0], [31.2, 122.0], [31.3, 122.0], [31.4, 122.0], [31.5, 122.0], [31.6, 123.0], [31.7, 123.0], [31.8, 123.0], [31.9, 125.0], [32.0, 125.0], [32.1, 126.0], [32.2, 126.0], [32.3, 126.0], [32.4, 126.0], [32.5, 126.0], [32.6, 128.0], [32.7, 130.0], [32.8, 130.0], [32.9, 131.0], [33.0, 131.0], [33.1, 131.0], [33.2, 131.0], [33.3, 131.0], [33.4, 133.0], [33.5, 139.0], [33.6, 139.0], [33.7, 143.0], [33.8, 143.0], [33.9, 152.0], [34.0, 158.0], [34.1, 158.0], [34.2, 158.0], [34.3, 158.0], [34.4, 161.0], [34.5, 161.0], [34.6, 161.0], [34.7, 166.0], [34.8, 169.0], [34.9, 169.0], [35.0, 170.0], [35.1, 170.0], [35.2, 172.0], [35.3, 172.0], [35.4, 172.0], [35.5, 175.0], [35.6, 181.0], [35.7, 181.0], [35.8, 186.0], [35.9, 186.0], [36.0, 187.0], [36.1, 202.0], [36.2, 202.0], [36.3, 204.0], [36.4, 204.0], [36.5, 209.0], [36.6, 215.0], [36.7, 215.0], [36.8, 222.0], [36.9, 225.0], [37.0, 225.0], [37.1, 229.0], [37.2, 229.0], [37.3, 231.0], [37.4, 237.0], [37.5, 237.0], [37.6, 237.0], [37.7, 237.0], [37.8, 238.0], [37.9, 238.0], [38.0, 238.0], [38.1, 238.0], [38.2, 241.0], [38.3, 241.0], [38.4, 241.0], [38.5, 241.0], [38.6, 241.0], [38.7, 243.0], [38.8, 243.0], [38.9, 248.0], [39.0, 248.0], [39.1, 248.0], [39.2, 254.0], [39.3, 254.0], [39.4, 256.0], [39.5, 257.0], [39.6, 257.0], [39.7, 257.0], [39.8, 257.0], [39.9, 259.0], [40.0, 266.0], [40.1, 266.0], [40.2, 267.0], [40.3, 269.0], [40.4, 269.0], [40.5, 271.0], [40.6, 271.0], [40.7, 273.0], [40.8, 274.0], [40.9, 274.0], [41.0, 279.0], [41.1, 279.0], [41.2, 280.0], [41.3, 282.0], [41.4, 282.0], [41.5, 283.0], [41.6, 284.0], [41.7, 284.0], [41.8, 284.0], [41.9, 284.0], [42.0, 287.0], [42.1, 288.0], [42.2, 288.0], [42.3, 288.0], [42.4, 288.0], [42.5, 288.0], [42.6, 290.0], [42.7, 290.0], [42.8, 293.0], [42.9, 295.0], [43.0, 295.0], [43.1, 295.0], [43.2, 295.0], [43.3, 295.0], [43.4, 295.0], [43.5, 295.0], [43.6, 295.0], [43.7, 298.0], [43.8, 298.0], [43.9, 298.0], [44.0, 298.0], [44.1, 298.0], [44.2, 299.0], [44.3, 299.0], [44.4, 301.0], [44.5, 304.0], [44.6, 304.0], [44.7, 305.0], [44.8, 305.0], [44.9, 305.0], [45.0, 306.0], [45.1, 306.0], [45.2, 306.0], [45.3, 306.0], [45.4, 308.0], [45.5, 324.0], [45.6, 324.0], [45.7, 327.0], [45.8, 336.0], [45.9, 336.0], [46.0, 339.0], [46.1, 339.0], [46.2, 341.0], [46.3, 342.0], [46.4, 342.0], [46.5, 345.0], [46.6, 345.0], [46.7, 345.0], [46.8, 345.0], [46.9, 345.0], [47.0, 349.0], [47.1, 356.0], [47.2, 356.0], [47.3, 360.0], [47.4, 360.0], [47.5, 361.0], [47.6, 365.0], [47.7, 365.0], [47.8, 367.0], [47.9, 369.0], [48.0, 369.0], [48.1, 371.0], [48.2, 371.0], [48.3, 379.0], [48.4, 379.0], [48.5, 379.0], [48.6, 379.0], [48.7, 379.0], [48.8, 384.0], [48.9, 386.0], [49.0, 386.0], [49.1, 388.0], [49.2, 389.0], [49.3, 389.0], [49.4, 391.0], [49.5, 391.0], [49.6, 393.0], [49.7, 393.0], [49.8, 393.0], [49.9, 394.0], [50.0, 400.0], [50.1, 400.0], [50.2, 403.0], [50.3, 403.0], [50.4, 407.0], [50.5, 422.0], [50.6, 422.0], [50.7, 423.0], [50.8, 423.0], [50.9, 424.0], [51.0, 434.0], [51.1, 434.0], [51.2, 436.0], [51.3, 443.0], [51.4, 443.0], [51.5, 448.0], [51.6, 448.0], [51.7, 451.0], [51.8, 452.0], [51.9, 452.0], [52.0, 460.0], [52.1, 460.0], [52.2, 464.0], [52.3, 476.0], [52.4, 476.0], [52.5, 477.0], [52.6, 483.0], [52.7, 483.0], [52.8, 492.0], [52.9, 492.0], [53.0, 494.0], [53.1, 499.0], [53.2, 499.0], [53.3, 500.0], [53.4, 503.0], [53.5, 503.0], [53.6, 504.0], [53.7, 504.0], [53.8, 509.0], [53.9, 510.0], [54.0, 510.0], [54.1, 510.0], [54.2, 510.0], [54.3, 510.0], [54.4, 512.0], [54.5, 512.0], [54.6, 517.0], [54.7, 522.0], [54.8, 522.0], [54.9, 523.0], [55.0, 523.0], [55.1, 528.0], [55.2, 529.0], [55.3, 529.0], [55.4, 532.0], [55.5, 532.0], [55.6, 543.0], [55.7, 545.0], [55.8, 545.0], [55.9, 545.0], [56.0, 547.0], [56.1, 547.0], [56.2, 552.0], [56.3, 552.0], [56.4, 553.0], [56.5, 559.0], [56.6, 559.0], [56.7, 563.0], [56.8, 565.0], [56.9, 565.0], [57.0, 565.0], [57.1, 565.0], [57.2, 567.0], [57.3, 572.0], [57.4, 572.0], [57.5, 579.0], [57.6, 579.0], [57.7, 581.0], [57.8, 582.0], [57.9, 582.0], [58.0, 585.0], [58.1, 585.0], [58.2, 585.0], [58.3, 586.0], [58.4, 586.0], [58.5, 589.0], [58.6, 589.0], [58.7, 589.0], [58.8, 590.0], [58.9, 592.0], [59.0, 592.0], [59.1, 592.0], [59.2, 592.0], [59.3, 593.0], [59.4, 593.0], [59.5, 593.0], [59.6, 595.0], [59.7, 595.0], [59.8, 597.0], [59.9, 598.0], [60.0, 598.0], [60.1, 601.0], [60.2, 604.0], [60.3, 604.0], [60.4, 615.0], [60.5, 615.0], [60.6, 624.0], [60.7, 625.0], [60.8, 625.0], [60.9, 628.0], [61.0, 628.0], [61.1, 634.0], [61.2, 637.0], [61.3, 637.0], [61.4, 644.0], [61.5, 645.0], [61.6, 645.0], [61.7, 650.0], [61.8, 650.0], [61.9, 650.0], [62.0, 653.0], [62.1, 653.0], [62.2, 655.0], [62.3, 662.0], [62.4, 662.0], [62.5, 667.0], [62.6, 667.0], [62.7, 671.0], [62.8, 682.0], [62.9, 682.0], [63.0, 688.0], [63.1, 688.0], [63.2, 692.0], [63.3, 694.0], [63.4, 694.0], [63.5, 698.0], [63.6, 705.0], [63.7, 705.0], [63.8, 707.0], [63.9, 707.0], [64.0, 711.0], [64.1, 718.0], [64.2, 718.0], [64.3, 721.0], [64.4, 721.0], [64.5, 732.0], [64.6, 737.0], [64.7, 737.0], [64.8, 752.0], [64.9, 759.0], [65.0, 759.0], [65.1, 764.0], [65.2, 764.0], [65.3, 771.0], [65.4, 775.0], [65.5, 775.0], [65.6, 777.0], [65.7, 783.0], [65.8, 783.0], [65.9, 785.0], [66.0, 785.0], [66.1, 790.0], [66.2, 800.0], [66.3, 800.0], [66.4, 800.0], [66.5, 800.0], [66.6, 800.0], [66.7, 803.0], [66.8, 803.0], [66.9, 810.0], [67.0, 815.0], [67.1, 815.0], [67.2, 820.0], [67.3, 820.0], [67.4, 833.0], [67.5, 835.0], [67.6, 835.0], [67.7, 840.0], [67.8, 843.0], [67.9, 843.0], [68.0, 852.0], [68.1, 852.0], [68.2, 856.0], [68.3, 858.0], [68.4, 858.0], [68.5, 859.0], [68.6, 859.0], [68.7, 861.0], [68.8, 865.0], [68.9, 865.0], [69.0, 867.0], [69.1, 881.0], [69.2, 881.0], [69.3, 887.0], [69.4, 887.0], [69.5, 894.0], [69.6, 896.0], [69.7, 896.0], [69.8, 899.0], [69.9, 899.0], [70.0, 901.0], [70.1, 908.0], [70.2, 908.0], [70.3, 910.0], [70.4, 920.0], [70.5, 920.0], [70.6, 921.0], [70.7, 921.0], [70.8, 929.0], [70.9, 932.0], [71.0, 932.0], [71.1, 932.0], [71.2, 934.0], [71.3, 934.0], [71.4, 948.0], [71.5, 948.0], [71.6, 949.0], [71.7, 950.0], [71.8, 950.0], [71.9, 962.0], [72.0, 962.0], [72.1, 976.0], [72.2, 994.0], [72.3, 994.0], [72.4, 1011.0], [72.5, 1015.0], [72.6, 1015.0], [72.7, 1016.0], [72.8, 1016.0], [72.9, 1018.0], [73.0, 1029.0], [73.1, 1029.0], [73.2, 1030.0], [73.3, 1030.0], [73.4, 1031.0], [73.5, 1034.0], [73.6, 1034.0], [73.7, 1044.0], [73.8, 1048.0], [73.9, 1048.0], [74.0, 1048.0], [74.1, 1048.0], [74.2, 1048.0], [74.3, 1051.0], [74.4, 1051.0], [74.5, 1053.0], [74.6, 1054.0], [74.7, 1054.0], [74.8, 1069.0], [74.9, 1069.0], [75.0, 1070.0], [75.1, 1075.0], [75.2, 1075.0], [75.3, 1077.0], [75.4, 1077.0], [75.5, 1080.0], [75.6, 1082.0], [75.7, 1082.0], [75.8, 1085.0], [75.9, 1088.0], [76.0, 1088.0], [76.1, 1089.0], [76.2, 1089.0], [76.3, 1091.0], [76.4, 1093.0], [76.5, 1093.0], [76.6, 1097.0], [76.7, 1099.0], [76.8, 1099.0], [76.9, 1107.0], [77.0, 1107.0], [77.1, 1114.0], [77.2, 1119.0], [77.3, 1119.0], [77.4, 1126.0], [77.5, 1126.0], [77.6, 1127.0], [77.7, 1134.0], [77.8, 1134.0], [77.9, 1155.0], [78.0, 1162.0], [78.1, 1162.0], [78.2, 1164.0], [78.3, 1164.0], [78.4, 1164.0], [78.5, 1167.0], [78.6, 1167.0], [78.7, 1171.0], [78.8, 1171.0], [78.9, 1177.0], [79.0, 1178.0], [79.1, 1178.0], [79.2, 1185.0], [79.3, 1189.0], [79.4, 1189.0], [79.5, 1200.0], [79.6, 1200.0], [79.7, 1202.0], [79.8, 1209.0], [79.9, 1209.0], [80.0, 1214.0], [80.1, 1215.0], [80.2, 1215.0], [80.3, 1217.0], [80.4, 1217.0], [80.5, 1237.0], [80.6, 1237.0], [80.7, 1237.0], [80.8, 1237.0], [80.9, 1237.0], [81.0, 1252.0], [81.1, 1254.0], [81.2, 1254.0], [81.3, 1256.0], [81.4, 1263.0], [81.5, 1263.0], [81.6, 1267.0], [81.7, 1267.0], [81.8, 1274.0], [81.9, 1285.0], [82.0, 1285.0], [82.1, 1286.0], [82.2, 1286.0], [82.3, 1288.0], [82.4, 1300.0], [82.5, 1300.0], [82.6, 1314.0], [82.7, 1314.0], [82.8, 1314.0], [82.9, 1319.0], [83.0, 1319.0], [83.1, 1323.0], [83.2, 1343.0], [83.3, 1343.0], [83.4, 1344.0], [83.5, 1350.0], [83.6, 1350.0], [83.7, 1351.0], [83.8, 1351.0], [83.9, 1352.0], [84.0, 1352.0], [84.1, 1352.0], [84.2, 1369.0], [84.3, 1369.0], [84.4, 1375.0], [84.5, 1417.0], [84.6, 1417.0], [84.7, 1418.0], [84.8, 1426.0], [84.9, 1426.0], [85.0, 1439.0], [85.1, 1439.0], [85.2, 1441.0], [85.3, 1448.0], [85.4, 1448.0], [85.5, 1463.0], [85.6, 1466.0], [85.7, 1466.0], [85.8, 1480.0], [85.9, 1480.0], [86.0, 1499.0], [86.1, 1501.0], [86.2, 1501.0], [86.3, 1505.0], [86.4, 1505.0], [86.5, 1511.0], [86.6, 1512.0], [86.7, 1512.0], [86.8, 1513.0], [86.9, 1534.0], [87.0, 1534.0], [87.1, 1536.0], [87.2, 1536.0], [87.3, 1536.0], [87.4, 1539.0], [87.5, 1539.0], [87.6, 1556.0], [87.7, 1556.0], [87.8, 1561.0], [87.9, 1588.0], [88.0, 1588.0], [88.1, 1596.0], [88.2, 1600.0], [88.3, 1600.0], [88.4, 1613.0], [88.5, 1613.0], [88.6, 1626.0], [88.7, 1634.0], [88.8, 1634.0], [88.9, 1657.0], [89.0, 1664.0], [89.1, 1664.0], [89.2, 1693.0], [89.3, 1693.0], [89.4, 1720.0], [89.5, 1720.0], [89.6, 1720.0], [89.7, 1734.0], [89.8, 1734.0], [89.9, 1794.0], [90.0, 1811.0], [90.1, 1811.0], [90.2, 1833.0], [90.3, 1842.0], [90.4, 1842.0], [90.5, 1874.0], [90.6, 1874.0], [90.7, 1912.0], [90.8, 1914.0], [90.9, 1914.0], [91.0, 1957.0], [91.1, 1957.0], [91.2, 1980.0], [91.3, 1988.0], [91.4, 1988.0], [91.5, 2008.0], [91.6, 2065.0], [91.7, 2065.0], [91.8, 2095.0], [91.9, 2095.0], [92.0, 2096.0], [92.1, 2097.0], [92.2, 2097.0], [92.3, 2097.0], [92.4, 2097.0], [92.5, 2097.0], [92.6, 2132.0], [92.7, 2132.0], [92.8, 2176.0], [92.9, 2187.0], [93.0, 2187.0], [93.1, 2222.0], [93.2, 2222.0], [93.3, 2226.0], [93.4, 2228.0], [93.5, 2228.0], [93.6, 2286.0], [93.7, 2298.0], [93.8, 2298.0], [93.9, 2326.0], [94.0, 2326.0], [94.1, 2350.0], [94.2, 2353.0], [94.3, 2353.0], [94.4, 2363.0], [94.5, 2395.0], [94.6, 2395.0], [94.7, 2398.0], [94.8, 2398.0], [94.9, 2450.0], [95.0, 2461.0], [95.1, 2461.0], [95.2, 2466.0], [95.3, 2466.0], [95.4, 2471.0], [95.5, 2509.0], [95.6, 2509.0], [95.7, 2737.0], [95.8, 2745.0], [95.9, 2745.0], [96.0, 2764.0], [96.1, 2764.0], [96.2, 2917.0], [96.3, 2917.0], [96.4, 2917.0], [96.5, 3007.0], [96.6, 3007.0], [96.7, 3010.0], [96.8, 3051.0], [96.9, 3051.0], [97.0, 3103.0], [97.1, 3170.0], [97.2, 3170.0], [97.3, 3176.0], [97.4, 3176.0], [97.5, 3414.0], [97.6, 3424.0], [97.7, 3424.0], [97.8, 3479.0], [97.9, 3545.0], [98.0, 3545.0], [98.1, 3726.0], [98.2, 3726.0], [98.3, 3910.0], [98.4, 4286.0], [98.5, 4286.0], [98.6, 4832.0], [98.7, 4832.0], [98.8, 4857.0], [98.9, 5859.0], [99.0, 5859.0], [99.1, 6127.0], [99.2, 6321.0], [99.3, 6321.0], [99.4, 9271.0], [99.5, 9271.0], [99.6, 20648.0], [99.7, 20764.0], [99.8, 20764.0], [99.9, 21003.0]], "isOverall": false, "label": "GetNewsList(5)", "isController": false}, {"data": [[0.0, 51.0], [0.1, 51.0], [0.2, 55.0], [0.3, 55.0], [0.4, 57.0], [0.5, 58.0], [0.6, 58.0], [0.7, 63.0], [0.8, 63.0], [0.9, 65.0], [1.0, 69.0], [1.1, 69.0], [1.2, 73.0], [1.3, 76.0], [1.4, 76.0], [1.5, 78.0], [1.6, 78.0], [1.7, 78.0], [1.8, 80.0], [1.9, 80.0], [2.0, 80.0], [2.1, 81.0], [2.2, 81.0], [2.3, 81.0], [2.4, 81.0], [2.5, 82.0], [2.6, 82.0], [2.7, 82.0], [2.8, 82.0], [2.9, 83.0], [3.0, 83.0], [3.1, 83.0], [3.2, 83.0], [3.3, 84.0], [3.4, 84.0], [3.5, 84.0], [3.6, 85.0], [3.7, 85.0], [3.8, 85.0], [3.9, 85.0], [4.0, 85.0], [4.1, 86.0], [4.2, 86.0], [4.3, 86.0], [4.4, 87.0], [4.5, 87.0], [4.6, 87.0], [4.7, 87.0], [4.8, 87.0], [4.9, 88.0], [5.0, 89.0], [5.1, 89.0], [5.2, 89.0], [5.3, 89.0], [5.4, 89.0], [5.5, 89.0], [5.6, 89.0], [5.7, 89.0], [5.8, 89.0], [5.9, 89.0], [6.0, 90.0], [6.1, 90.0], [6.2, 90.0], [6.3, 90.0], [6.4, 90.0], [6.5, 90.0], [6.6, 90.0], [6.7, 90.0], [6.8, 91.0], [6.9, 91.0], [7.0, 91.0], [7.1, 91.0], [7.2, 91.0], [7.3, 91.0], [7.4, 92.0], [7.5, 92.0], [7.6, 92.0], [7.7, 92.0], [7.8, 92.0], [7.9, 92.0], [8.0, 92.0], [8.1, 92.0], [8.2, 93.0], [8.3, 93.0], [8.4, 93.0], [8.5, 93.0], [8.6, 93.0], [8.7, 93.0], [8.8, 93.0], [8.9, 93.0], [9.0, 93.0], [9.1, 93.0], [9.2, 93.0], [9.3, 93.0], [9.4, 93.0], [9.5, 94.0], [9.6, 94.0], [9.7, 94.0], [9.8, 94.0], [9.9, 94.0], [10.0, 94.0], [10.1, 94.0], [10.2, 94.0], [10.3, 94.0], [10.4, 94.0], [10.5, 94.0], [10.6, 94.0], [10.7, 94.0], [10.8, 94.0], [10.9, 94.0], [11.0, 95.0], [11.1, 95.0], [11.2, 95.0], [11.3, 95.0], [11.4, 95.0], [11.5, 95.0], [11.6, 96.0], [11.7, 96.0], [11.8, 96.0], [11.9, 96.0], [12.0, 96.0], [12.1, 96.0], [12.2, 96.0], [12.3, 96.0], [12.4, 96.0], [12.5, 96.0], [12.6, 97.0], [12.7, 97.0], [12.8, 97.0], [12.9, 97.0], [13.0, 97.0], [13.1, 98.0], [13.2, 98.0], [13.3, 98.0], [13.4, 100.0], [13.5, 100.0], [13.6, 100.0], [13.7, 100.0], [13.8, 100.0], [13.9, 100.0], [14.0, 100.0], [14.1, 100.0], [14.2, 100.0], [14.3, 101.0], [14.4, 101.0], [14.5, 101.0], [14.6, 101.0], [14.7, 101.0], [14.8, 102.0], [14.9, 102.0], [15.0, 102.0], [15.1, 103.0], [15.2, 103.0], [15.3, 103.0], [15.4, 103.0], [15.5, 103.0], [15.6, 103.0], [15.7, 103.0], [15.8, 103.0], [15.9, 104.0], [16.0, 104.0], [16.1, 104.0], [16.2, 104.0], [16.3, 104.0], [16.4, 105.0], [16.5, 105.0], [16.6, 105.0], [16.7, 106.0], [16.8, 106.0], [16.9, 106.0], [17.0, 106.0], [17.1, 106.0], [17.2, 106.0], [17.3, 106.0], [17.4, 106.0], [17.5, 107.0], [17.6, 107.0], [17.7, 107.0], [17.8, 107.0], [17.9, 107.0], [18.0, 107.0], [18.1, 107.0], [18.2, 107.0], [18.3, 107.0], [18.4, 107.0], [18.5, 108.0], [18.6, 108.0], [18.7, 108.0], [18.8, 108.0], [18.9, 108.0], [19.0, 109.0], [19.1, 109.0], [19.2, 109.0], [19.3, 109.0], [19.4, 109.0], [19.5, 109.0], [19.6, 110.0], [19.7, 110.0], [19.8, 110.0], [19.9, 110.0], [20.0, 110.0], [20.1, 110.0], [20.2, 110.0], [20.3, 111.0], [20.4, 111.0], [20.5, 111.0], [20.6, 111.0], [20.7, 111.0], [20.8, 111.0], [20.9, 111.0], [21.0, 111.0], [21.1, 111.0], [21.2, 111.0], [21.3, 111.0], [21.4, 112.0], [21.5, 112.0], [21.6, 112.0], [21.7, 112.0], [21.8, 112.0], [21.9, 113.0], [22.0, 113.0], [22.1, 113.0], [22.2, 113.0], [22.3, 113.0], [22.4, 114.0], [22.5, 114.0], [22.6, 114.0], [22.7, 114.0], [22.8, 115.0], [22.9, 115.0], [23.0, 115.0], [23.1, 115.0], [23.2, 115.0], [23.3, 118.0], [23.4, 118.0], [23.5, 118.0], [23.6, 118.0], [23.7, 118.0], [23.8, 119.0], [23.9, 119.0], [24.0, 120.0], [24.1, 120.0], [24.2, 120.0], [24.3, 120.0], [24.4, 121.0], [24.5, 121.0], [24.6, 123.0], [24.7, 123.0], [24.8, 124.0], [24.9, 124.0], [25.0, 124.0], [25.1, 124.0], [25.2, 124.0], [25.3, 126.0], [25.4, 127.0], [25.5, 127.0], [25.6, 127.0], [25.7, 128.0], [25.8, 128.0], [25.9, 129.0], [26.0, 129.0], [26.1, 129.0], [26.2, 129.0], [26.3, 129.0], [26.4, 131.0], [26.5, 133.0], [26.6, 133.0], [26.7, 135.0], [26.8, 135.0], [26.9, 135.0], [27.0, 136.0], [27.1, 136.0], [27.2, 137.0], [27.3, 137.0], [27.4, 137.0], [27.5, 137.0], [27.6, 137.0], [27.7, 138.0], [27.8, 140.0], [27.9, 140.0], [28.0, 141.0], [28.1, 142.0], [28.2, 142.0], [28.3, 146.0], [28.4, 146.0], [28.5, 146.0], [28.6, 148.0], [28.7, 148.0], [28.8, 148.0], [28.9, 149.0], [29.0, 149.0], [29.1, 150.0], [29.2, 150.0], [29.3, 150.0], [29.4, 150.0], [29.5, 150.0], [29.6, 151.0], [29.7, 151.0], [29.8, 151.0], [29.9, 153.0], [30.0, 153.0], [30.1, 155.0], [30.2, 156.0], [30.3, 156.0], [30.4, 156.0], [30.5, 156.0], [30.6, 156.0], [30.7, 157.0], [30.8, 157.0], [30.9, 157.0], [31.0, 158.0], [31.1, 158.0], [31.2, 159.0], [31.3, 159.0], [31.4, 160.0], [31.5, 165.0], [31.6, 165.0], [31.7, 167.0], [31.8, 168.0], [31.9, 168.0], [32.0, 169.0], [32.1, 169.0], [32.2, 171.0], [32.3, 174.0], [32.4, 174.0], [32.5, 174.0], [32.6, 175.0], [32.7, 175.0], [32.8, 178.0], [32.9, 178.0], [33.0, 178.0], [33.1, 181.0], [33.2, 181.0], [33.3, 183.0], [33.4, 184.0], [33.5, 184.0], [33.6, 195.0], [33.7, 195.0], [33.8, 195.0], [33.9, 210.0], [34.0, 210.0], [34.1, 210.0], [34.2, 210.0], [34.3, 210.0], [34.4, 221.0], [34.5, 221.0], [34.6, 221.0], [34.7, 227.0], [34.8, 227.0], [34.9, 236.0], [35.0, 236.0], [35.1, 236.0], [35.2, 238.0], [35.3, 238.0], [35.4, 238.0], [35.5, 242.0], [35.6, 242.0], [35.7, 245.0], [35.8, 246.0], [35.9, 246.0], [36.0, 248.0], [36.1, 248.0], [36.2, 249.0], [36.3, 259.0], [36.4, 259.0], [36.5, 260.0], [36.6, 261.0], [36.7, 261.0], [36.8, 266.0], [36.9, 266.0], [37.0, 268.0], [37.1, 275.0], [37.2, 275.0], [37.3, 280.0], [37.4, 281.0], [37.5, 281.0], [37.6, 284.0], [37.7, 284.0], [37.8, 284.0], [37.9, 286.0], [38.0, 286.0], [38.1, 288.0], [38.2, 288.0], [38.3, 288.0], [38.4, 290.0], [38.5, 290.0], [38.6, 291.0], [38.7, 292.0], [38.8, 292.0], [38.9, 294.0], [39.0, 294.0], [39.1, 294.0], [39.2, 295.0], [39.3, 295.0], [39.4, 296.0], [39.5, 296.0], [39.6, 296.0], [39.7, 298.0], [39.8, 298.0], [39.9, 298.0], [40.0, 304.0], [40.1, 304.0], [40.2, 304.0], [40.3, 304.0], [40.4, 304.0], [40.5, 304.0], [40.6, 304.0], [40.7, 305.0], [40.8, 305.0], [40.9, 305.0], [41.0, 307.0], [41.1, 307.0], [41.2, 307.0], [41.3, 310.0], [41.4, 310.0], [41.5, 316.0], [41.6, 316.0], [41.7, 316.0], [41.8, 319.0], [41.9, 321.0], [42.0, 321.0], [42.1, 321.0], [42.2, 321.0], [42.3, 323.0], [42.4, 325.0], [42.5, 325.0], [42.6, 325.0], [42.7, 328.0], [42.8, 328.0], [42.9, 330.0], [43.0, 330.0], [43.1, 331.0], [43.2, 336.0], [43.3, 336.0], [43.4, 339.0], [43.5, 339.0], [43.6, 339.0], [43.7, 341.0], [43.8, 341.0], [43.9, 342.0], [44.0, 342.0], [44.1, 342.0], [44.2, 343.0], [44.3, 343.0], [44.4, 344.0], [44.5, 344.0], [44.6, 344.0], [44.7, 345.0], [44.8, 348.0], [44.9, 348.0], [45.0, 349.0], [45.1, 349.0], [45.2, 350.0], [45.3, 352.0], [45.4, 352.0], [45.5, 357.0], [45.6, 357.0], [45.7, 357.0], [45.8, 357.0], [45.9, 357.0], [46.0, 358.0], [46.1, 358.0], [46.2, 358.0], [46.3, 358.0], [46.4, 361.0], [46.5, 361.0], [46.6, 362.0], [46.7, 362.0], [46.8, 363.0], [46.9, 371.0], [47.0, 371.0], [47.1, 375.0], [47.2, 375.0], [47.3, 375.0], [47.4, 377.0], [47.5, 377.0], [47.6, 378.0], [47.7, 380.0], [47.8, 380.0], [47.9, 381.0], [48.0, 381.0], [48.1, 381.0], [48.2, 382.0], [48.3, 382.0], [48.4, 383.0], [48.5, 390.0], [48.6, 390.0], [48.7, 391.0], [48.8, 391.0], [48.9, 391.0], [49.0, 392.0], [49.1, 392.0], [49.2, 392.0], [49.3, 392.0], [49.4, 392.0], [49.5, 392.0], [49.6, 392.0], [49.7, 392.0], [49.8, 392.0], [49.9, 392.0], [50.0, 393.0], [50.1, 393.0], [50.2, 393.0], [50.3, 396.0], [50.4, 396.0], [50.5, 399.0], [50.6, 399.0], [50.7, 399.0], [50.8, 401.0], [50.9, 404.0], [51.0, 404.0], [51.1, 408.0], [51.2, 408.0], [51.3, 408.0], [51.4, 409.0], [51.5, 409.0], [51.6, 416.0], [51.7, 421.0], [51.8, 421.0], [51.9, 431.0], [52.0, 431.0], [52.1, 432.0], [52.2, 433.0], [52.3, 433.0], [52.4, 434.0], [52.5, 434.0], [52.6, 434.0], [52.7, 435.0], [52.8, 435.0], [52.9, 436.0], [53.0, 437.0], [53.1, 437.0], [53.2, 439.0], [53.3, 441.0], [53.4, 441.0], [53.5, 449.0], [53.6, 449.0], [53.7, 450.0], [53.8, 450.0], [53.9, 450.0], [54.0, 462.0], [54.1, 463.0], [54.2, 463.0], [54.3, 464.0], [54.4, 464.0], [54.5, 469.0], [54.6, 470.0], [54.7, 470.0], [54.8, 472.0], [54.9, 474.0], [55.0, 474.0], [55.1, 479.0], [55.2, 479.0], [55.3, 483.0], [55.4, 483.0], [55.5, 483.0], [55.6, 483.0], [55.7, 488.0], [55.8, 488.0], [55.9, 489.0], [56.0, 489.0], [56.1, 491.0], [56.2, 491.0], [56.3, 491.0], [56.4, 495.0], [56.5, 495.0], [56.6, 497.0], [56.7, 505.0], [56.8, 505.0], [56.9, 511.0], [57.0, 513.0], [57.1, 513.0], [57.2, 522.0], [57.3, 522.0], [57.4, 525.0], [57.5, 525.0], [57.6, 525.0], [57.7, 531.0], [57.8, 531.0], [57.9, 531.0], [58.0, 532.0], [58.1, 532.0], [58.2, 532.0], [58.3, 532.0], [58.4, 532.0], [58.5, 532.0], [58.6, 532.0], [58.7, 532.0], [58.8, 532.0], [58.9, 532.0], [59.0, 533.0], [59.1, 536.0], [59.2, 536.0], [59.3, 544.0], [59.4, 544.0], [59.5, 544.0], [59.6, 544.0], [59.7, 544.0], [59.8, 544.0], [59.9, 548.0], [60.0, 548.0], [60.1, 551.0], [60.2, 551.0], [60.3, 551.0], [60.4, 551.0], [60.5, 551.0], [60.6, 561.0], [60.7, 567.0], [60.8, 567.0], [60.9, 587.0], [61.0, 591.0], [61.1, 591.0], [61.2, 598.0], [61.3, 598.0], [61.4, 608.0], [61.5, 608.0], [61.6, 608.0], [61.7, 613.0], [61.8, 621.0], [61.9, 621.0], [62.0, 622.0], [62.1, 622.0], [62.2, 623.0], [62.3, 629.0], [62.4, 629.0], [62.5, 637.0], [62.6, 637.0], [62.7, 637.0], [62.8, 639.0], [62.9, 639.0], [63.0, 640.0], [63.1, 640.0], [63.2, 640.0], [63.3, 641.0], [63.4, 641.0], [63.5, 649.0], [63.6, 657.0], [63.7, 657.0], [63.8, 663.0], [63.9, 663.0], [64.0, 663.0], [64.1, 665.0], [64.2, 665.0], [64.3, 677.0], [64.4, 680.0], [64.5, 680.0], [64.6, 684.0], [64.7, 696.0], [64.8, 696.0], [64.9, 697.0], [65.0, 697.0], [65.1, 698.0], [65.2, 703.0], [65.3, 703.0], [65.4, 704.0], [65.5, 707.0], [65.6, 707.0], [65.7, 709.0], [65.8, 709.0], [65.9, 713.0], [66.0, 714.0], [66.1, 714.0], [66.2, 734.0], [66.3, 736.0], [66.4, 736.0], [66.5, 738.0], [66.6, 738.0], [66.7, 739.0], [66.8, 740.0], [66.9, 740.0], [67.0, 744.0], [67.1, 749.0], [67.2, 749.0], [67.3, 750.0], [67.4, 750.0], [67.5, 754.0], [67.6, 758.0], [67.7, 758.0], [67.8, 759.0], [67.9, 759.0], [68.0, 759.0], [68.1, 761.0], [68.2, 761.0], [68.3, 762.0], [68.4, 770.0], [68.5, 770.0], [68.6, 772.0], [68.7, 779.0], [68.8, 779.0], [68.9, 786.0], [69.0, 786.0], [69.1, 791.0], [69.2, 793.0], [69.3, 793.0], [69.4, 794.0], [69.5, 794.0], [69.6, 794.0], [69.7, 795.0], [69.8, 795.0], [69.9, 795.0], [70.0, 796.0], [70.1, 796.0], [70.2, 796.0], [70.3, 796.0], [70.4, 799.0], [70.5, 800.0], [70.6, 800.0], [70.7, 805.0], [70.8, 806.0], [70.9, 806.0], [71.0, 808.0], [71.1, 808.0], [71.2, 808.0], [71.3, 809.0], [71.4, 809.0], [71.5, 815.0], [71.6, 816.0], [71.7, 816.0], [71.8, 817.0], [71.9, 817.0], [72.0, 818.0], [72.1, 819.0], [72.2, 819.0], [72.3, 821.0], [72.4, 832.0], [72.5, 832.0], [72.6, 838.0], [72.7, 838.0], [72.8, 840.0], [72.9, 841.0], [73.0, 841.0], [73.1, 848.0], [73.2, 854.0], [73.3, 854.0], [73.4, 855.0], [73.5, 855.0], [73.6, 865.0], [73.7, 865.0], [73.8, 865.0], [73.9, 867.0], [74.0, 871.0], [74.1, 871.0], [74.2, 872.0], [74.3, 872.0], [74.4, 874.0], [74.5, 875.0], [74.6, 875.0], [74.7, 878.0], [74.8, 888.0], [74.9, 888.0], [75.0, 890.0], [75.1, 890.0], [75.2, 894.0], [75.3, 905.0], [75.4, 905.0], [75.5, 906.0], [75.6, 906.0], [75.7, 908.0], [75.8, 913.0], [75.9, 913.0], [76.0, 918.0], [76.1, 922.0], [76.2, 922.0], [76.3, 944.0], [76.4, 944.0], [76.5, 948.0], [76.6, 951.0], [76.7, 951.0], [76.8, 952.0], [76.9, 954.0], [77.0, 954.0], [77.1, 958.0], [77.2, 958.0], [77.3, 965.0], [77.4, 968.0], [77.5, 968.0], [77.6, 973.0], [77.7, 977.0], [77.8, 977.0], [77.9, 982.0], [78.0, 982.0], [78.1, 989.0], [78.2, 990.0], [78.3, 990.0], [78.4, 990.0], [78.5, 991.0], [78.6, 991.0], [78.7, 992.0], [78.8, 992.0], [78.9, 994.0], [79.0, 995.0], [79.1, 995.0], [79.2, 996.0], [79.3, 1010.0], [79.4, 1010.0], [79.5, 1015.0], [79.6, 1015.0], [79.7, 1018.0], [79.8, 1018.0], [79.9, 1018.0], [80.0, 1018.0], [80.1, 1018.0], [80.2, 1018.0], [80.3, 1019.0], [80.4, 1019.0], [80.5, 1027.0], [80.6, 1041.0], [80.7, 1041.0], [80.8, 1042.0], [80.9, 1044.0], [81.0, 1044.0], [81.1, 1045.0], [81.2, 1045.0], [81.3, 1045.0], [81.4, 1046.0], [81.5, 1046.0], [81.6, 1047.0], [81.7, 1047.0], [81.8, 1047.0], [81.9, 1047.0], [82.0, 1047.0], [82.1, 1047.0], [82.2, 1047.0], [82.3, 1047.0], [82.4, 1048.0], [82.5, 1048.0], [82.6, 1048.0], [82.7, 1048.0], [82.8, 1048.0], [82.9, 1048.0], [83.0, 1048.0], [83.1, 1048.0], [83.2, 1048.0], [83.3, 1048.0], [83.4, 1048.0], [83.5, 1048.0], [83.6, 1048.0], [83.7, 1048.0], [83.8, 1048.0], [83.9, 1048.0], [84.0, 1048.0], [84.1, 1048.0], [84.2, 1049.0], [84.3, 1065.0], [84.4, 1065.0], [84.5, 1070.0], [84.6, 1078.0], [84.7, 1078.0], [84.8, 1079.0], [84.9, 1079.0], [85.0, 1088.0], [85.1, 1089.0], [85.2, 1089.0], [85.3, 1102.0], [85.4, 1106.0], [85.5, 1106.0], [85.6, 1116.0], [85.7, 1116.0], [85.8, 1120.0], [85.9, 1155.0], [86.0, 1155.0], [86.1, 1158.0], [86.2, 1158.0], [86.3, 1158.0], [86.4, 1163.0], [86.5, 1163.0], [86.6, 1201.0], [86.7, 1230.0], [86.8, 1230.0], [86.9, 1280.0], [87.0, 1294.0], [87.1, 1294.0], [87.2, 1302.0], [87.3, 1302.0], [87.4, 1304.0], [87.5, 1307.0], [87.6, 1307.0], [87.7, 1311.0], [87.8, 1311.0], [87.9, 1312.0], [88.0, 1312.0], [88.1, 1312.0], [88.2, 1313.0], [88.3, 1313.0], [88.4, 1313.0], [88.5, 1313.0], [88.6, 1313.0], [88.7, 1313.0], [88.8, 1314.0], [88.9, 1314.0], [89.0, 1314.0], [89.1, 1314.0], [89.2, 1314.0], [89.3, 1314.0], [89.4, 1314.0], [89.5, 1315.0], [89.6, 1315.0], [89.7, 1315.0], [89.8, 1317.0], [89.9, 1331.0], [90.0, 1331.0], [90.1, 1338.0], [90.2, 1338.0], [90.3, 1382.0], [90.4, 1403.0], [90.5, 1403.0], [90.6, 1460.0], [90.7, 1513.0], [90.8, 1513.0], [90.9, 1545.0], [91.0, 1545.0], [91.1, 1548.0], [91.2, 1548.0], [91.3, 1548.0], [91.4, 1552.0], [91.5, 1573.0], [91.6, 1573.0], [91.7, 1585.0], [91.8, 1585.0], [91.9, 1622.0], [92.0, 1654.0], [92.1, 1654.0], [92.2, 1697.0], [92.3, 1754.0], [92.4, 1754.0], [92.5, 1762.0], [92.6, 1762.0], [92.7, 1785.0], [92.8, 1806.0], [92.9, 1806.0], [93.0, 1811.0], [93.1, 1852.0], [93.2, 1852.0], [93.3, 1868.0], [93.4, 1868.0], [93.5, 1894.0], [93.6, 1911.0], [93.7, 1911.0], [93.8, 1926.0], [93.9, 1926.0], [94.0, 1943.0], [94.1, 1950.0], [94.2, 1950.0], [94.3, 1974.0], [94.4, 1995.0], [94.5, 1995.0], [94.6, 2023.0], [94.7, 2023.0], [94.8, 2034.0], [94.9, 2076.0], [95.0, 2076.0], [95.1, 2095.0], [95.2, 2095.0], [95.3, 2095.0], [95.4, 2095.0], [95.5, 2095.0], [95.6, 2095.0], [95.7, 2096.0], [95.8, 2096.0], [95.9, 2128.0], [96.0, 2130.0], [96.1, 2130.0], [96.2, 2135.0], [96.3, 2135.0], [96.4, 2237.0], [96.5, 2238.0], [96.6, 2238.0], [96.7, 2291.0], [96.8, 2317.0], [96.9, 2317.0], [97.0, 2323.0], [97.1, 2323.0], [97.2, 2331.0], [97.3, 2339.0], [97.4, 2339.0], [97.5, 2343.0], [97.6, 2460.0], [97.7, 2460.0], [97.8, 2587.0], [97.9, 2587.0], [98.0, 2963.0], [98.1, 3145.0], [98.2, 3145.0], [98.3, 3184.0], [98.4, 3283.0], [98.5, 3283.0], [98.6, 3433.0], [98.7, 3433.0], [98.8, 3681.0], [98.9, 4046.0], [99.0, 4046.0], [99.1, 4090.0], [99.2, 4189.0], [99.3, 4189.0], [99.4, 4583.0], [99.5, 4583.0], [99.6, 4589.0], [99.7, 4621.0], [99.8, 4621.0], [99.9, 4634.0], [100.0, 4634.0]], "isOverall": false, "label": "GetNewsCount", "isController": false}, {"data": [[0.0, 41.0], [0.1, 41.0], [0.2, 46.0], [0.3, 46.0], [0.4, 49.0], [0.5, 51.0], [0.6, 51.0], [0.7, 52.0], [0.8, 52.0], [0.9, 52.0], [1.0, 53.0], [1.1, 53.0], [1.2, 53.0], [1.3, 53.0], [1.4, 53.0], [1.5, 54.0], [1.6, 54.0], [1.7, 54.0], [1.8, 55.0], [1.9, 55.0], [2.0, 55.0], [2.1, 55.0], [2.2, 55.0], [2.3, 55.0], [2.4, 55.0], [2.5, 56.0], [2.6, 57.0], [2.7, 57.0], [2.8, 57.0], [2.9, 57.0], [3.0, 57.0], [3.1, 57.0], [3.2, 57.0], [3.3, 57.0], [3.4, 57.0], [3.5, 57.0], [3.6, 57.0], [3.7, 57.0], [3.8, 58.0], [3.9, 58.0], [4.0, 58.0], [4.1, 58.0], [4.2, 58.0], [4.3, 58.0], [4.4, 58.0], [4.5, 58.0], [4.6, 59.0], [4.7, 59.0], [4.8, 59.0], [4.9, 59.0], [5.0, 59.0], [5.1, 59.0], [5.2, 59.0], [5.3, 59.0], [5.4, 59.0], [5.5, 59.0], [5.6, 59.0], [5.7, 60.0], [5.8, 60.0], [5.9, 60.0], [6.0, 61.0], [6.1, 61.0], [6.2, 61.0], [6.3, 61.0], [6.4, 61.0], [6.5, 62.0], [6.6, 62.0], [6.7, 62.0], [6.8, 62.0], [6.9, 62.0], [7.0, 62.0], [7.1, 62.0], [7.2, 62.0], [7.3, 62.0], [7.4, 62.0], [7.5, 63.0], [7.6, 63.0], [7.7, 63.0], [7.8, 63.0], [7.9, 63.0], [8.0, 63.0], [8.1, 63.0], [8.2, 63.0], [8.3, 63.0], [8.4, 64.0], [8.5, 64.0], [8.6, 64.0], [8.7, 64.0], [8.8, 65.0], [8.9, 65.0], [9.0, 65.0], [9.1, 66.0], [9.2, 66.0], [9.3, 66.0], [9.4, 67.0], [9.5, 67.0], [9.6, 67.0], [9.7, 68.0], [9.8, 68.0], [9.9, 68.0], [10.0, 68.0], [10.1, 68.0], [10.2, 69.0], [10.3, 69.0], [10.4, 69.0], [10.5, 69.0], [10.6, 69.0], [10.7, 69.0], [10.8, 69.0], [10.9, 70.0], [11.0, 71.0], [11.1, 71.0], [11.2, 72.0], [11.3, 72.0], [11.4, 72.0], [11.5, 72.0], [11.6, 72.0], [11.7, 72.0], [11.8, 72.0], [11.9, 72.0], [12.0, 73.0], [12.1, 73.0], [12.2, 73.0], [12.3, 74.0], [12.4, 74.0], [12.5, 74.0], [12.6, 74.0], [12.7, 74.0], [12.8, 74.0], [12.9, 74.0], [13.0, 74.0], [13.1, 74.0], [13.2, 74.0], [13.3, 74.0], [13.4, 75.0], [13.5, 75.0], [13.6, 75.0], [13.7, 75.0], [13.8, 76.0], [13.9, 76.0], [14.0, 76.0], [14.1, 76.0], [14.2, 76.0], [14.3, 76.0], [14.4, 77.0], [14.5, 77.0], [14.6, 77.0], [14.7, 77.0], [14.8, 77.0], [14.9, 78.0], [15.0, 78.0], [15.1, 78.0], [15.2, 78.0], [15.3, 78.0], [15.4, 79.0], [15.5, 79.0], [15.6, 79.0], [15.7, 80.0], [15.8, 80.0], [15.9, 80.0], [16.0, 80.0], [16.1, 80.0], [16.2, 81.0], [16.3, 81.0], [16.4, 81.0], [16.5, 82.0], [16.6, 82.0], [16.7, 82.0], [16.8, 82.0], [16.9, 82.0], [17.0, 82.0], [17.1, 83.0], [17.2, 83.0], [17.3, 83.0], [17.4, 83.0], [17.5, 83.0], [17.6, 83.0], [17.7, 83.0], [17.8, 83.0], [17.9, 83.0], [18.0, 83.0], [18.1, 84.0], [18.2, 84.0], [18.3, 84.0], [18.4, 84.0], [18.5, 84.0], [18.6, 84.0], [18.7, 84.0], [18.8, 85.0], [18.9, 85.0], [19.0, 85.0], [19.1, 86.0], [19.2, 86.0], [19.3, 86.0], [19.4, 86.0], [19.5, 86.0], [19.6, 86.0], [19.7, 87.0], [19.8, 87.0], [19.9, 87.0], [20.0, 87.0], [20.1, 88.0], [20.2, 88.0], [20.3, 88.0], [20.4, 88.0], [20.5, 89.0], [20.6, 89.0], [20.7, 90.0], [20.8, 90.0], [20.9, 90.0], [21.0, 90.0], [21.1, 90.0], [21.2, 90.0], [21.3, 90.0], [21.4, 90.0], [21.5, 91.0], [21.6, 91.0], [21.7, 91.0], [21.8, 91.0], [21.9, 91.0], [22.0, 91.0], [22.1, 92.0], [22.2, 92.0], [22.3, 92.0], [22.4, 92.0], [22.5, 93.0], [22.6, 93.0], [22.7, 93.0], [22.8, 93.0], [22.9, 93.0], [23.0, 93.0], [23.1, 93.0], [23.2, 93.0], [23.3, 93.0], [23.4, 93.0], [23.5, 93.0], [23.6, 94.0], [23.7, 94.0], [23.8, 94.0], [23.9, 94.0], [24.0, 94.0], [24.1, 94.0], [24.2, 94.0], [24.3, 94.0], [24.4, 96.0], [24.5, 96.0], [24.6, 96.0], [24.7, 96.0], [24.8, 96.0], [24.9, 97.0], [25.0, 97.0], [25.1, 97.0], [25.2, 98.0], [25.3, 98.0], [25.4, 98.0], [25.5, 98.0], [25.6, 98.0], [25.7, 98.0], [25.8, 98.0], [25.9, 98.0], [26.0, 98.0], [26.1, 98.0], [26.2, 99.0], [26.3, 99.0], [26.4, 99.0], [26.5, 99.0], [26.6, 99.0], [26.7, 99.0], [26.8, 100.0], [26.9, 100.0], [27.0, 100.0], [27.1, 100.0], [27.2, 100.0], [27.3, 100.0], [27.4, 100.0], [27.5, 100.0], [27.6, 101.0], [27.7, 101.0], [27.8, 101.0], [27.9, 101.0], [28.0, 101.0], [28.1, 102.0], [28.2, 102.0], [28.3, 103.0], [28.4, 103.0], [28.5, 103.0], [28.6, 103.0], [28.7, 103.0], [28.8, 103.0], [28.9, 103.0], [29.0, 103.0], [29.1, 103.0], [29.2, 103.0], [29.3, 103.0], [29.4, 103.0], [29.5, 103.0], [29.6, 103.0], [29.7, 104.0], [29.8, 104.0], [29.9, 105.0], [30.0, 105.0], [30.1, 105.0], [30.2, 105.0], [30.3, 105.0], [30.4, 105.0], [30.5, 106.0], [30.6, 106.0], [30.7, 109.0], [30.8, 109.0], [30.9, 109.0], [31.0, 110.0], [31.1, 110.0], [31.2, 110.0], [31.3, 112.0], [31.4, 112.0], [31.5, 113.0], [31.6, 113.0], [31.7, 113.0], [31.8, 113.0], [31.9, 113.0], [32.0, 113.0], [32.1, 117.0], [32.2, 117.0], [32.3, 117.0], [32.4, 117.0], [32.5, 119.0], [32.6, 119.0], [32.7, 119.0], [32.8, 125.0], [32.9, 125.0], [33.0, 126.0], [33.1, 127.0], [33.2, 127.0], [33.3, 128.0], [33.4, 131.0], [33.5, 131.0], [33.6, 132.0], [33.7, 132.0], [33.8, 134.0], [33.9, 137.0], [34.0, 137.0], [34.1, 141.0], [34.2, 147.0], [34.3, 147.0], [34.4, 147.0], [34.5, 147.0], [34.6, 148.0], [34.7, 148.0], [34.8, 148.0], [34.9, 149.0], [35.0, 149.0], [35.1, 149.0], [35.2, 149.0], [35.3, 149.0], [35.4, 150.0], [35.5, 153.0], [35.6, 153.0], [35.7, 160.0], [35.8, 160.0], [35.9, 161.0], [36.0, 162.0], [36.1, 162.0], [36.2, 176.0], [36.3, 181.0], [36.4, 181.0], [36.5, 183.0], [36.6, 183.0], [36.7, 221.0], [36.8, 226.0], [36.9, 226.0], [37.0, 229.0], [37.1, 231.0], [37.2, 231.0], [37.3, 237.0], [37.4, 237.0], [37.5, 242.0], [37.6, 244.0], [37.7, 244.0], [37.8, 244.0], [37.9, 244.0], [38.0, 245.0], [38.1, 245.0], [38.2, 245.0], [38.3, 245.0], [38.4, 246.0], [38.5, 246.0], [38.6, 248.0], [38.7, 248.0], [38.8, 248.0], [38.9, 251.0], [39.0, 251.0], [39.1, 251.0], [39.2, 252.0], [39.3, 252.0], [39.4, 253.0], [39.5, 253.0], [39.6, 255.0], [39.7, 264.0], [39.8, 264.0], [39.9, 265.0], [40.0, 265.0], [40.1, 268.0], [40.2, 268.0], [40.3, 268.0], [40.4, 271.0], [40.5, 272.0], [40.6, 272.0], [40.7, 274.0], [40.8, 274.0], [40.9, 274.0], [41.0, 274.0], [41.1, 274.0], [41.2, 275.0], [41.3, 277.0], [41.4, 277.0], [41.5, 277.0], [41.6, 277.0], [41.7, 277.0], [41.8, 290.0], [41.9, 290.0], [42.0, 290.0], [42.1, 292.0], [42.2, 292.0], [42.3, 292.0], [42.4, 292.0], [42.5, 293.0], [42.6, 294.0], [42.7, 294.0], [42.8, 295.0], [42.9, 295.0], [43.0, 295.0], [43.1, 295.0], [43.2, 295.0], [43.3, 296.0], [43.4, 296.0], [43.5, 296.0], [43.6, 297.0], [43.7, 297.0], [43.8, 299.0], [43.9, 300.0], [44.0, 300.0], [44.1, 313.0], [44.2, 315.0], [44.3, 315.0], [44.4, 319.0], [44.5, 319.0], [44.6, 325.0], [44.7, 327.0], [44.8, 327.0], [44.9, 328.0], [45.0, 328.0], [45.1, 329.0], [45.2, 331.0], [45.3, 331.0], [45.4, 333.0], [45.5, 335.0], [45.6, 335.0], [45.7, 337.0], [45.8, 337.0], [45.9, 338.0], [46.0, 338.0], [46.1, 338.0], [46.2, 342.0], [46.3, 346.0], [46.4, 346.0], [46.5, 351.0], [46.6, 351.0], [46.7, 351.0], [46.8, 353.0], [46.9, 353.0], [47.0, 356.0], [47.1, 356.0], [47.2, 356.0], [47.3, 363.0], [47.4, 363.0], [47.5, 366.0], [47.6, 366.0], [47.7, 366.0], [47.8, 368.0], [47.9, 368.0], [48.0, 371.0], [48.1, 374.0], [48.2, 374.0], [48.3, 381.0], [48.4, 384.0], [48.5, 384.0], [48.6, 386.0], [48.7, 386.0], [48.8, 390.0], [48.9, 390.0], [49.0, 390.0], [49.1, 391.0], [49.2, 392.0], [49.3, 392.0], [49.4, 393.0], [49.5, 393.0], [49.6, 393.0], [49.7, 403.0], [49.8, 403.0], [49.9, 408.0], [50.0, 408.0], [50.1, 410.0], [50.2, 414.0], [50.3, 414.0], [50.4, 415.0], [50.5, 417.0], [50.6, 417.0], [50.7, 419.0], [50.8, 419.0], [50.9, 425.0], [51.0, 428.0], [51.1, 428.0], [51.2, 428.0], [51.3, 429.0], [51.4, 429.0], [51.5, 429.0], [51.6, 429.0], [51.7, 429.0], [51.8, 430.0], [51.9, 430.0], [52.0, 432.0], [52.1, 436.0], [52.2, 436.0], [52.3, 439.0], [52.4, 439.0], [52.5, 440.0], [52.6, 441.0], [52.7, 441.0], [52.8, 443.0], [52.9, 443.0], [53.0, 450.0], [53.1, 453.0], [53.2, 453.0], [53.3, 455.0], [53.4, 467.0], [53.5, 467.0], [53.6, 484.0], [53.7, 484.0], [53.8, 489.0], [53.9, 495.0], [54.0, 495.0], [54.1, 498.0], [54.2, 500.0], [54.3, 500.0], [54.4, 502.0], [54.5, 502.0], [54.6, 505.0], [54.7, 507.0], [54.8, 507.0], [54.9, 509.0], [55.0, 509.0], [55.1, 509.0], [55.2, 509.0], [55.3, 509.0], [55.4, 509.0], [55.5, 510.0], [55.6, 510.0], [55.7, 510.0], [55.8, 510.0], [55.9, 510.0], [56.0, 510.0], [56.1, 510.0], [56.2, 518.0], [56.3, 518.0], [56.4, 518.0], [56.5, 518.0], [56.6, 518.0], [56.7, 518.0], [56.8, 535.0], [56.9, 535.0], [57.0, 544.0], [57.1, 551.0], [57.2, 551.0], [57.3, 553.0], [57.4, 553.0], [57.5, 554.0], [57.6, 564.0], [57.7, 564.0], [57.8, 565.0], [57.9, 565.0], [58.0, 565.0], [58.1, 576.0], [58.2, 576.0], [58.3, 583.0], [58.4, 583.0], [58.5, 583.0], [58.6, 587.0], [58.7, 587.0], [58.8, 589.0], [58.9, 601.0], [59.0, 601.0], [59.1, 601.0], [59.2, 605.0], [59.3, 605.0], [59.4, 606.0], [59.5, 606.0], [59.6, 615.0], [59.7, 628.0], [59.8, 628.0], [59.9, 640.0], [60.0, 640.0], [60.1, 640.0], [60.2, 641.0], [60.3, 641.0], [60.4, 645.0], [60.5, 648.0], [60.6, 648.0], [60.7, 654.0], [60.8, 654.0], [60.9, 655.0], [61.0, 658.0], [61.1, 658.0], [61.2, 663.0], [61.3, 668.0], [61.4, 668.0], [61.5, 670.0], [61.6, 670.0], [61.7, 685.0], [61.8, 692.0], [61.9, 692.0], [62.0, 719.0], [62.1, 720.0], [62.2, 720.0], [62.3, 725.0], [62.4, 725.0], [62.5, 728.0], [62.6, 741.0], [62.7, 741.0], [62.8, 744.0], [62.9, 744.0], [63.0, 754.0], [63.1, 759.0], [63.2, 759.0], [63.3, 789.0], [63.4, 791.0], [63.5, 791.0], [63.6, 798.0], [63.7, 798.0], [63.8, 801.0], [63.9, 816.0], [64.0, 816.0], [64.1, 828.0], [64.2, 829.0], [64.3, 829.0], [64.4, 831.0], [64.5, 831.0], [64.6, 843.0], [64.7, 844.0], [64.8, 844.0], [64.9, 852.0], [65.0, 852.0], [65.1, 865.0], [65.2, 869.0], [65.3, 869.0], [65.4, 877.0], [65.5, 878.0], [65.6, 878.0], [65.7, 891.0], [65.8, 891.0], [65.9, 894.0], [66.0, 897.0], [66.1, 897.0], [66.2, 904.0], [66.3, 911.0], [66.4, 911.0], [66.5, 917.0], [66.6, 917.0], [66.7, 924.0], [66.8, 926.0], [66.9, 926.0], [67.0, 926.0], [67.1, 926.0], [67.2, 926.0], [67.3, 927.0], [67.4, 927.0], [67.5, 929.0], [67.6, 936.0], [67.7, 936.0], [67.8, 940.0], [67.9, 940.0], [68.0, 946.0], [68.1, 958.0], [68.2, 958.0], [68.3, 959.0], [68.4, 980.0], [68.5, 980.0], [68.6, 981.0], [68.7, 981.0], [68.8, 990.0], [68.9, 994.0], [69.0, 994.0], [69.1, 999.0], [69.2, 1010.0], [69.3, 1010.0], [69.4, 1012.0], [69.5, 1012.0], [69.6, 1026.0], [69.7, 1027.0], [69.8, 1027.0], [69.9, 1031.0], [70.0, 1031.0], [70.1, 1042.0], [70.2, 1043.0], [70.3, 1043.0], [70.4, 1044.0], [70.5, 1045.0], [70.6, 1045.0], [70.7, 1046.0], [70.8, 1046.0], [70.9, 1047.0], [71.0, 1048.0], [71.1, 1048.0], [71.2, 1048.0], [71.3, 1049.0], [71.4, 1049.0], [71.5, 1051.0], [71.6, 1051.0], [71.7, 1053.0], [71.8, 1055.0], [71.9, 1055.0], [72.0, 1056.0], [72.1, 1056.0], [72.2, 1056.0], [72.3, 1058.0], [72.4, 1058.0], [72.5, 1060.0], [72.6, 1061.0], [72.7, 1061.0], [72.8, 1064.0], [72.9, 1064.0], [73.0, 1064.0], [73.1, 1074.0], [73.2, 1074.0], [73.3, 1081.0], [73.4, 1081.0], [73.5, 1081.0], [73.6, 1083.0], [73.7, 1083.0], [73.8, 1091.0], [73.9, 1093.0], [74.0, 1093.0], [74.1, 1095.0], [74.2, 1095.0], [74.3, 1095.0], [74.4, 1095.0], [74.5, 1095.0], [74.6, 1098.0], [74.7, 1099.0], [74.8, 1099.0], [74.9, 1101.0], [75.0, 1101.0], [75.1, 1103.0], [75.2, 1109.0], [75.3, 1109.0], [75.4, 1112.0], [75.5, 1113.0], [75.6, 1113.0], [75.7, 1117.0], [75.8, 1117.0], [75.9, 1124.0], [76.0, 1129.0], [76.1, 1129.0], [76.2, 1129.0], [76.3, 1138.0], [76.4, 1138.0], [76.5, 1148.0], [76.6, 1148.0], [76.7, 1151.0], [76.8, 1159.0], [76.9, 1159.0], [77.0, 1189.0], [77.1, 1195.0], [77.2, 1195.0], [77.3, 1213.0], [77.4, 1213.0], [77.5, 1224.0], [77.6, 1226.0], [77.7, 1226.0], [77.8, 1273.0], [77.9, 1273.0], [78.0, 1308.0], [78.1, 1309.0], [78.2, 1309.0], [78.3, 1319.0], [78.4, 1320.0], [78.5, 1320.0], [78.6, 1324.0], [78.7, 1324.0], [78.8, 1326.0], [78.9, 1333.0], [79.0, 1333.0], [79.1, 1346.0], [79.2, 1386.0], [79.3, 1386.0], [79.4, 1404.0], [79.5, 1404.0], [79.6, 1408.0], [79.7, 1438.0], [79.8, 1438.0], [79.9, 1439.0], [80.0, 1441.0], [80.1, 1441.0], [80.2, 1442.0], [80.3, 1442.0], [80.4, 1458.0], [80.5, 1458.0], [80.6, 1458.0], [80.7, 1471.0], [80.8, 1471.0], [80.9, 1478.0], [81.0, 1482.0], [81.1, 1482.0], [81.2, 1507.0], [81.3, 1519.0], [81.4, 1519.0], [81.5, 1526.0], [81.6, 1526.0], [81.7, 1564.0], [81.8, 1566.0], [81.9, 1566.0], [82.0, 1567.0], [82.1, 1576.0], [82.2, 1576.0], [82.3, 1591.0], [82.4, 1591.0], [82.5, 1605.0], [82.6, 1628.0], [82.7, 1628.0], [82.8, 1648.0], [82.9, 1648.0], [83.0, 1669.0], [83.1, 1673.0], [83.2, 1673.0], [83.3, 1674.0], [83.4, 1675.0], [83.5, 1675.0], [83.6, 1686.0], [83.7, 1686.0], [83.8, 1691.0], [83.9, 1800.0], [84.0, 1800.0], [84.1, 1813.0], [84.2, 1820.0], [84.3, 1820.0], [84.4, 1837.0], [84.5, 1837.0], [84.6, 1866.0], [84.7, 1866.0], [84.8, 1866.0], [84.9, 1869.0], [85.0, 1962.0], [85.1, 1962.0], [85.2, 1966.0], [85.3, 1966.0], [85.4, 2042.0], [85.5, 2085.0], [85.6, 2085.0], [85.7, 2090.0], [85.8, 2090.0], [85.9, 2092.0], [86.0, 2095.0], [86.1, 2095.0], [86.2, 2096.0], [86.3, 2097.0], [86.4, 2097.0], [86.5, 2100.0], [86.6, 2100.0], [86.7, 2113.0], [86.8, 2125.0], [86.9, 2125.0], [87.0, 2130.0], [87.1, 2132.0], [87.2, 2132.0], [87.3, 2134.0], [87.4, 2134.0], [87.5, 2146.0], [87.6, 2177.0], [87.7, 2177.0], [87.8, 2233.0], [87.9, 2233.0], [88.0, 2307.0], [88.1, 2351.0], [88.2, 2351.0], [88.3, 2358.0], [88.4, 2383.0], [88.5, 2383.0], [88.6, 2401.0], [88.7, 2401.0], [88.8, 2443.0], [88.9, 2454.0], [89.0, 2454.0], [89.1, 2472.0], [89.2, 2496.0], [89.3, 2496.0], [89.4, 2510.0], [89.5, 2510.0], [89.6, 2518.0], [89.7, 2526.0], [89.8, 2526.0], [89.9, 2540.0], [90.0, 2635.0], [90.1, 2635.0], [90.2, 2702.0], [90.3, 2702.0], [90.4, 2719.0], [90.5, 2742.0], [90.6, 2742.0], [90.7, 2746.0], [90.8, 2746.0], [90.9, 2820.0], [91.0, 2849.0], [91.1, 2849.0], [91.2, 2867.0], [91.3, 2891.0], [91.4, 2891.0], [91.5, 2896.0], [91.6, 2896.0], [91.7, 2900.0], [91.8, 3145.0], [91.9, 3145.0], [92.0, 3145.0], [92.1, 3185.0], [92.2, 3185.0], [92.3, 3247.0], [92.4, 3247.0], [92.5, 3249.0], [92.6, 3273.0], [92.7, 3273.0], [92.8, 3291.0], [92.9, 3291.0], [93.0, 3304.0], [93.1, 3335.0], [93.2, 3335.0], [93.3, 3370.0], [93.4, 3381.0], [93.5, 3381.0], [93.6, 3411.0], [93.7, 3411.0], [93.8, 3440.0], [93.9, 3512.0], [94.0, 3512.0], [94.1, 3579.0], [94.2, 3658.0], [94.3, 3658.0], [94.4, 3799.0], [94.5, 3799.0], [94.6, 3802.0], [94.7, 3845.0], [94.8, 3845.0], [94.9, 3889.0], [95.0, 3961.0], [95.1, 3961.0], [95.2, 4066.0], [95.3, 4066.0], [95.4, 4103.0], [95.5, 4103.0], [95.6, 4103.0], [95.7, 4128.0], [95.8, 4128.0], [95.9, 4134.0], [96.0, 4248.0], [96.1, 4248.0], [96.2, 4862.0], [96.3, 5081.0], [96.4, 5081.0], [96.5, 5119.0], [96.6, 5119.0], [96.7, 5240.0], [96.8, 5246.0], [96.9, 5246.0], [97.0, 5406.0], [97.1, 5426.0], [97.2, 5426.0], [97.3, 5848.0], [97.4, 5848.0], [97.5, 5904.0], [97.6, 5952.0], [97.7, 5952.0], [97.8, 6039.0], [97.9, 6039.0], [98.0, 6119.0], [98.1, 6451.0], [98.2, 6451.0], [98.3, 7476.0], [98.4, 7498.0], [98.5, 7498.0], [98.6, 8780.0], [98.7, 8780.0], [98.8, 9495.0], [98.9, 10252.0], [99.0, 10252.0], [99.1, 11586.0], [99.2, 11611.0], [99.3, 11611.0], [99.4, 11938.0], [99.5, 11938.0], [99.6, 12021.0], [99.7, 18550.0], [99.8, 18550.0], [99.9, 21355.0]], "isOverall": false, "label": "GetNewsList(10)", "isController": false}, {"data": [[0.0, 621.0], [0.1, 621.0], [0.2, 634.0], [0.3, 690.0], [0.4, 690.0], [0.5, 719.0], [0.6, 720.0], [0.7, 723.0], [0.8, 723.0], [0.9, 775.0], [1.0, 784.0], [1.1, 784.0], [1.2, 800.0], [1.3, 848.0], [1.4, 887.0], [1.5, 887.0], [1.6, 1239.0], [1.7, 1328.0], [1.8, 1328.0], [1.9, 1337.0], [2.0, 1391.0], [2.1, 1470.0], [2.2, 1470.0], [2.3, 1498.0], [2.4, 1522.0], [2.5, 1522.0], [2.6, 1596.0], [2.7, 1632.0], [2.8, 1731.0], [2.9, 1731.0], [3.0, 1784.0], [3.1, 1837.0], [3.2, 1837.0], [3.3, 1857.0], [3.4, 1879.0], [3.5, 1904.0], [3.6, 1904.0], [3.7, 1915.0], [3.8, 1975.0], [3.9, 1975.0], [4.0, 2017.0], [4.1, 2094.0], [4.2, 2095.0], [4.3, 2095.0], [4.4, 2095.0], [4.5, 2130.0], [4.6, 2130.0], [4.7, 2139.0], [4.8, 2147.0], [4.9, 2204.0], [5.0, 2204.0], [5.1, 2235.0], [5.2, 2239.0], [5.3, 2239.0], [5.4, 2281.0], [5.5, 2287.0], [5.6, 2288.0], [5.7, 2288.0], [5.8, 2293.0], [5.9, 2310.0], [6.0, 2310.0], [6.1, 2343.0], [6.2, 2371.0], [6.3, 2371.0], [6.4, 2371.0], [6.5, 2425.0], [6.6, 2486.0], [6.7, 2486.0], [6.8, 2610.0], [6.9, 2616.0], [7.0, 2653.0], [7.1, 2653.0], [7.2, 2670.0], [7.3, 2696.0], [7.4, 2696.0], [7.5, 2802.0], [7.6, 2809.0], [7.7, 2823.0], [7.8, 2823.0], [7.9, 2877.0], [8.0, 2879.0], [8.1, 2879.0], [8.2, 2890.0], [8.3, 2916.0], [8.4, 2997.0], [8.5, 2997.0], [8.6, 3007.0], [8.7, 3020.0], [8.8, 3020.0], [8.9, 3052.0], [9.0, 3080.0], [9.1, 3111.0], [9.2, 3111.0], [9.3, 3165.0], [9.4, 3247.0], [9.5, 3247.0], [9.6, 3318.0], [9.7, 3366.0], [9.8, 3377.0], [9.9, 3377.0], [10.0, 3400.0], [10.1, 3430.0], [10.2, 3430.0], [10.3, 3440.0], [10.4, 3449.0], [10.5, 3472.0], [10.6, 3472.0], [10.7, 3526.0], [10.8, 3527.0], [10.9, 3527.0], [11.0, 3527.0], [11.1, 3546.0], [11.2, 3587.0], [11.3, 3587.0], [11.4, 3621.0], [11.5, 3622.0], [11.6, 3622.0], [11.7, 3625.0], [11.8, 3630.0], [11.9, 3639.0], [12.0, 3639.0], [12.1, 3672.0], [12.2, 3740.0], [12.3, 3740.0], [12.4, 3765.0], [12.5, 3779.0], [12.6, 3787.0], [12.7, 3787.0], [12.8, 3930.0], [12.9, 3940.0], [13.0, 3940.0], [13.1, 4115.0], [13.2, 4153.0], [13.3, 4389.0], [13.4, 4389.0], [13.5, 4428.0], [13.6, 4456.0], [13.7, 4456.0], [13.8, 4461.0], [13.9, 4512.0], [14.0, 4592.0], [14.1, 4592.0], [14.2, 4619.0], [14.3, 4663.0], [14.4, 4663.0], [14.5, 4706.0], [14.6, 4735.0], [14.7, 4773.0], [14.8, 4773.0], [14.9, 4845.0], [15.0, 4845.0], [15.1, 4845.0], [15.2, 4845.0], [15.3, 4845.0], [15.4, 4955.0], [15.5, 4955.0], [15.6, 4959.0], [15.7, 4972.0], [15.8, 4972.0], [15.9, 4972.0], [16.0, 4994.0], [16.1, 5025.0], [16.2, 5025.0], [16.3, 5030.0], [16.4, 5074.0], [16.5, 5074.0], [16.6, 5081.0], [16.7, 5139.0], [16.8, 5152.0], [16.9, 5152.0], [17.0, 5219.0], [17.1, 5241.0], [17.2, 5241.0], [17.3, 5245.0], [17.4, 5249.0], [17.5, 5315.0], [17.6, 5315.0], [17.7, 5381.0], [17.8, 5382.0], [17.9, 5382.0], [18.0, 5488.0], [18.1, 5556.0], [18.2, 5578.0], [18.3, 5578.0], [18.4, 5653.0], [18.5, 5673.0], [18.6, 5673.0], [18.7, 5676.0], [18.8, 5687.0], [18.9, 5699.0], [19.0, 5699.0], [19.1, 5758.0], [19.2, 5785.0], [19.3, 5785.0], [19.4, 5814.0], [19.5, 5849.0], [19.6, 5853.0], [19.7, 5853.0], [19.8, 5863.0], [19.9, 5896.0], [20.0, 5896.0], [20.1, 5897.0], [20.2, 5914.0], [20.3, 5952.0], [20.4, 5952.0], [20.5, 5962.0], [20.6, 5964.0], [20.7, 5974.0], [20.8, 5974.0], [20.9, 5992.0], [21.0, 6028.0], [21.1, 6028.0], [21.2, 6045.0], [21.3, 6056.0], [21.4, 6061.0], [21.5, 6061.0], [21.6, 6065.0], [21.7, 6096.0], [21.8, 6096.0], [21.9, 6111.0], [22.0, 6130.0], [22.1, 6147.0], [22.2, 6147.0], [22.3, 6188.0], [22.4, 6188.0], [22.5, 6188.0], [22.6, 6193.0], [22.7, 6195.0], [22.8, 6202.0], [22.9, 6202.0], [23.0, 6211.0], [23.1, 6226.0], [23.2, 6226.0], [23.3, 6232.0], [23.4, 6237.0], [23.5, 6263.0], [23.6, 6263.0], [23.7, 6291.0], [23.8, 6292.0], [23.9, 6292.0], [24.0, 6436.0], [24.1, 6458.0], [24.2, 6500.0], [24.3, 6500.0], [24.4, 6515.0], [24.5, 6527.0], [24.6, 6527.0], [24.7, 6555.0], [24.8, 6566.0], [24.9, 6571.0], [25.0, 6571.0], [25.1, 6641.0], [25.2, 6715.0], [25.3, 6715.0], [25.4, 6729.0], [25.5, 6749.0], [25.6, 6768.0], [25.7, 6768.0], [25.8, 6803.0], [25.9, 6810.0], [26.0, 6810.0], [26.1, 6850.0], [26.2, 6867.0], [26.3, 6874.0], [26.4, 6874.0], [26.5, 6880.0], [26.6, 6910.0], [26.7, 6910.0], [26.8, 6947.0], [26.9, 7000.0], [27.0, 7045.0], [27.1, 7045.0], [27.2, 7086.0], [27.3, 7088.0], [27.4, 7088.0], [27.5, 7092.0], [27.6, 7094.0], [27.7, 7094.0], [27.8, 7094.0], [27.9, 7110.0], [28.0, 7121.0], [28.1, 7121.0], [28.2, 7141.0], [28.3, 7160.0], [28.4, 7166.0], [28.5, 7166.0], [28.6, 7205.0], [28.7, 7231.0], [28.8, 7231.0], [28.9, 7235.0], [29.0, 7245.0], [29.1, 7281.0], [29.2, 7281.0], [29.3, 7301.0], [29.4, 7302.0], [29.5, 7302.0], [29.6, 7303.0], [29.7, 7306.0], [29.8, 7312.0], [29.9, 7312.0], [30.0, 7321.0], [30.1, 7330.0], [30.2, 7330.0], [30.3, 7346.0], [30.4, 7368.0], [30.5, 7369.0], [30.6, 7369.0], [30.7, 7372.0], [30.8, 7372.0], [30.9, 7372.0], [31.0, 7382.0], [31.1, 7384.0], [31.2, 7384.0], [31.3, 7384.0], [31.4, 7386.0], [31.5, 7391.0], [31.6, 7391.0], [31.7, 7395.0], [31.8, 7425.0], [31.9, 7434.0], [32.0, 7434.0], [32.1, 7460.0], [32.2, 7471.0], [32.3, 7471.0], [32.4, 7486.0], [32.5, 7496.0], [32.6, 7507.0], [32.7, 7507.0], [32.8, 7525.0], [32.9, 7538.0], [33.0, 7538.0], [33.1, 7557.0], [33.2, 7574.0], [33.3, 7591.0], [33.4, 7591.0], [33.5, 7606.0], [33.6, 7606.0], [33.7, 7606.0], [33.8, 7609.0], [33.9, 7615.0], [34.0, 7617.0], [34.1, 7617.0], [34.2, 7617.0], [34.3, 7624.0], [34.4, 7624.0], [34.5, 7624.0], [34.6, 7632.0], [34.7, 7636.0], [34.8, 7636.0], [34.9, 7636.0], [35.0, 7644.0], [35.1, 7644.0], [35.2, 7645.0], [35.3, 7655.0], [35.4, 7663.0], [35.5, 7663.0], [35.6, 7665.0], [35.7, 7687.0], [35.8, 7687.0], [35.9, 7705.0], [36.0, 7706.0], [36.1, 7710.0], [36.2, 7710.0], [36.3, 7717.0], [36.4, 7720.0], [36.5, 7720.0], [36.6, 7729.0], [36.7, 7730.0], [36.8, 7730.0], [36.9, 7730.0], [37.0, 7741.0], [37.1, 7756.0], [37.2, 7756.0], [37.3, 7758.0], [37.4, 7768.0], [37.5, 7769.0], [37.6, 7769.0], [37.7, 7776.0], [37.8, 7788.0], [37.9, 7788.0], [38.0, 7806.0], [38.1, 7810.0], [38.2, 7825.0], [38.3, 7825.0], [38.4, 7833.0], [38.5, 7837.0], [38.6, 7837.0], [38.7, 7839.0], [38.8, 7850.0], [38.9, 7864.0], [39.0, 7864.0], [39.1, 7876.0], [39.2, 7880.0], [39.3, 7880.0], [39.4, 7898.0], [39.5, 7899.0], [39.6, 7901.0], [39.7, 7901.0], [39.8, 7907.0], [39.9, 7908.0], [40.0, 7908.0], [40.1, 7935.0], [40.2, 7935.0], [40.3, 7937.0], [40.4, 7937.0], [40.5, 7946.0], [40.6, 7950.0], [40.7, 7951.0], [40.8, 7951.0], [40.9, 7959.0], [41.0, 7979.0], [41.1, 7979.0], [41.2, 7987.0], [41.3, 7993.0], [41.4, 7994.0], [41.5, 7994.0], [41.6, 7994.0], [41.7, 7995.0], [41.8, 7995.0], [41.9, 7996.0], [42.0, 7998.0], [42.1, 7999.0], [42.2, 7999.0], [42.3, 8005.0], [42.4, 8006.0], [42.5, 8006.0], [42.6, 8012.0], [42.7, 8025.0], [42.8, 8026.0], [42.9, 8026.0], [43.0, 8040.0], [43.1, 8076.0], [43.2, 8076.0], [43.3, 8097.0], [43.4, 8097.0], [43.5, 8102.0], [43.6, 8102.0], [43.7, 8106.0], [43.8, 8107.0], [43.9, 8107.0], [44.0, 8108.0], [44.1, 8110.0], [44.2, 8114.0], [44.3, 8114.0], [44.4, 8116.0], [44.5, 8124.0], [44.6, 8124.0], [44.7, 8131.0], [44.8, 8143.0], [44.9, 8147.0], [45.0, 8147.0], [45.1, 8176.0], [45.2, 8177.0], [45.3, 8177.0], [45.4, 8181.0], [45.5, 8190.0], [45.6, 8194.0], [45.7, 8194.0], [45.8, 8202.0], [45.9, 8203.0], [46.0, 8203.0], [46.1, 8203.0], [46.2, 8218.0], [46.3, 8236.0], [46.4, 8236.0], [46.5, 8243.0], [46.6, 8249.0], [46.7, 8249.0], [46.8, 8268.0], [46.9, 8269.0], [47.0, 8272.0], [47.1, 8272.0], [47.2, 8272.0], [47.3, 8273.0], [47.4, 8273.0], [47.5, 8284.0], [47.6, 8291.0], [47.7, 8296.0], [47.8, 8296.0], [47.9, 8307.0], [48.0, 8318.0], [48.1, 8318.0], [48.2, 8321.0], [48.3, 8321.0], [48.4, 8328.0], [48.5, 8328.0], [48.6, 8338.0], [48.7, 8341.0], [48.8, 8341.0], [48.9, 8344.0], [49.0, 8348.0], [49.1, 8350.0], [49.2, 8350.0], [49.3, 8362.0], [49.4, 8368.0], [49.5, 8368.0], [49.6, 8376.0], [49.7, 8378.0], [49.8, 8379.0], [49.9, 8379.0], [50.0, 8386.0], [50.1, 8407.0], [50.2, 8407.0], [50.3, 8407.0], [50.4, 8410.0], [50.5, 8421.0], [50.6, 8421.0], [50.7, 8422.0], [50.8, 8423.0], [50.9, 8423.0], [51.0, 8429.0], [51.1, 8443.0], [51.2, 8455.0], [51.3, 8455.0], [51.4, 8469.0], [51.5, 8478.0], [51.6, 8478.0], [51.7, 8485.0], [51.8, 8487.0], [51.9, 8492.0], [52.0, 8492.0], [52.1, 8497.0], [52.2, 8505.0], [52.3, 8505.0], [52.4, 8515.0], [52.5, 8518.0], [52.6, 8520.0], [52.7, 8520.0], [52.8, 8521.0], [52.9, 8523.0], [53.0, 8523.0], [53.1, 8528.0], [53.2, 8530.0], [53.3, 8537.0], [53.4, 8537.0], [53.5, 8544.0], [53.6, 8547.0], [53.7, 8547.0], [53.8, 8563.0], [53.9, 8569.0], [54.0, 8569.0], [54.1, 8569.0], [54.2, 8572.0], [54.3, 8574.0], [54.4, 8574.0], [54.5, 8576.0], [54.6, 8586.0], [54.7, 8591.0], [54.8, 8591.0], [54.9, 8592.0], [55.0, 8609.0], [55.1, 8609.0], [55.2, 8610.0], [55.3, 8612.0], [55.4, 8616.0], [55.5, 8616.0], [55.6, 8622.0], [55.7, 8624.0], [55.8, 8624.0], [55.9, 8628.0], [56.0, 8633.0], [56.1, 8637.0], [56.2, 8637.0], [56.3, 8639.0], [56.4, 8646.0], [56.5, 8646.0], [56.6, 8647.0], [56.7, 8661.0], [56.8, 8662.0], [56.9, 8662.0], [57.0, 8665.0], [57.1, 8668.0], [57.2, 8668.0], [57.3, 8675.0], [57.4, 8675.0], [57.5, 8677.0], [57.6, 8677.0], [57.7, 8690.0], [57.8, 8701.0], [57.9, 8701.0], [58.0, 8709.0], [58.1, 8709.0], [58.2, 8725.0], [58.3, 8725.0], [58.4, 8728.0], [58.5, 8730.0], [58.6, 8730.0], [58.7, 8746.0], [58.8, 8749.0], [58.9, 8755.0], [59.0, 8755.0], [59.1, 8763.0], [59.2, 8773.0], [59.3, 8773.0], [59.4, 8775.0], [59.5, 8776.0], [59.6, 8777.0], [59.7, 8777.0], [59.8, 8780.0], [59.9, 8781.0], [60.0, 8781.0], [60.1, 8788.0], [60.2, 8789.0], [60.3, 8792.0], [60.4, 8792.0], [60.5, 8802.0], [60.6, 8807.0], [60.7, 8809.0], [60.8, 8809.0], [60.9, 8817.0], [61.0, 8817.0], [61.1, 8817.0], [61.2, 8823.0], [61.3, 8825.0], [61.4, 8827.0], [61.5, 8827.0], [61.6, 8831.0], [61.7, 8833.0], [61.8, 8833.0], [61.9, 8840.0], [62.0, 8845.0], [62.1, 8866.0], [62.2, 8866.0], [62.3, 8866.0], [62.4, 8869.0], [62.5, 8869.0], [62.6, 8874.0], [62.7, 8877.0], [62.8, 8881.0], [62.9, 8881.0], [63.0, 8883.0], [63.1, 8888.0], [63.2, 8888.0], [63.3, 8889.0], [63.4, 8890.0], [63.5, 8891.0], [63.6, 8891.0], [63.7, 8900.0], [63.8, 8904.0], [63.9, 8904.0], [64.0, 8915.0], [64.1, 8920.0], [64.2, 8921.0], [64.3, 8921.0], [64.4, 8925.0], [64.5, 8934.0], [64.6, 8934.0], [64.7, 8952.0], [64.8, 8954.0], [64.9, 8965.0], [65.0, 8965.0], [65.1, 8975.0], [65.2, 8981.0], [65.3, 8981.0], [65.4, 8994.0], [65.5, 8997.0], [65.6, 8999.0], [65.7, 8999.0], [65.8, 9001.0], [65.9, 9002.0], [66.0, 9002.0], [66.1, 9004.0], [66.2, 9009.0], [66.3, 9011.0], [66.4, 9011.0], [66.5, 9011.0], [66.6, 9013.0], [66.7, 9013.0], [66.8, 9020.0], [66.9, 9021.0], [67.0, 9027.0], [67.1, 9027.0], [67.2, 9027.0], [67.3, 9032.0], [67.4, 9032.0], [67.5, 9038.0], [67.6, 9042.0], [67.7, 9043.0], [67.8, 9043.0], [67.9, 9043.0], [68.0, 9044.0], [68.1, 9044.0], [68.2, 9044.0], [68.3, 9047.0], [68.4, 9047.0], [68.5, 9047.0], [68.6, 9052.0], [68.7, 9053.0], [68.8, 9053.0], [68.9, 9077.0], [69.0, 9077.0], [69.1, 9081.0], [69.2, 9081.0], [69.3, 9083.0], [69.4, 9087.0], [69.5, 9087.0], [69.6, 9090.0], [69.7, 9093.0], [69.8, 9094.0], [69.9, 9094.0], [70.0, 9100.0], [70.1, 9103.0], [70.2, 9103.0], [70.3, 9129.0], [70.4, 9134.0], [70.5, 9138.0], [70.6, 9138.0], [70.7, 9138.0], [70.8, 9149.0], [70.9, 9149.0], [71.0, 9150.0], [71.1, 9153.0], [71.2, 9156.0], [71.3, 9156.0], [71.4, 9162.0], [71.5, 9167.0], [71.6, 9167.0], [71.7, 9167.0], [71.8, 9169.0], [71.9, 9171.0], [72.0, 9171.0], [72.1, 9176.0], [72.2, 9181.0], [72.3, 9181.0], [72.4, 9195.0], [72.5, 9204.0], [72.6, 9209.0], [72.7, 9209.0], [72.8, 9221.0], [72.9, 9224.0], [73.0, 9224.0], [73.1, 9228.0], [73.2, 9247.0], [73.3, 9250.0], [73.4, 9250.0], [73.5, 9260.0], [73.6, 9264.0], [73.7, 9264.0], [73.8, 9271.0], [73.9, 9275.0], [74.0, 9276.0], [74.1, 9276.0], [74.2, 9276.0], [74.3, 9277.0], [74.4, 9277.0], [74.5, 9282.0], [74.6, 9287.0], [74.7, 9298.0], [74.8, 9298.0], [74.9, 9335.0], [75.0, 9340.0], [75.1, 9340.0], [75.2, 9343.0], [75.3, 9344.0], [75.4, 9352.0], [75.5, 9352.0], [75.6, 9360.0], [75.7, 9367.0], [75.8, 9367.0], [75.9, 9369.0], [76.0, 9372.0], [76.1, 9374.0], [76.2, 9374.0], [76.3, 9376.0], [76.4, 9377.0], [76.5, 9377.0], [76.6, 9392.0], [76.7, 9394.0], [76.8, 9396.0], [76.9, 9396.0], [77.0, 9397.0], [77.1, 9398.0], [77.2, 9398.0], [77.3, 9399.0], [77.4, 9404.0], [77.5, 9404.0], [77.6, 9404.0], [77.7, 9406.0], [77.8, 9415.0], [77.9, 9415.0], [78.0, 9420.0], [78.1, 9425.0], [78.2, 9428.0], [78.3, 9428.0], [78.4, 9432.0], [78.5, 9432.0], [78.6, 9432.0], [78.7, 9434.0], [78.8, 9435.0], [78.9, 9436.0], [79.0, 9436.0], [79.1, 9436.0], [79.2, 9436.0], [79.3, 9436.0], [79.4, 9437.0], [79.5, 9437.0], [79.6, 9437.0], [79.7, 9437.0], [79.8, 9438.0], [79.9, 9442.0], [80.0, 9454.0], [80.1, 9454.0], [80.2, 9476.0], [80.3, 9476.0], [80.4, 9476.0], [80.5, 9488.0], [80.6, 9493.0], [80.7, 9513.0], [80.8, 9513.0], [80.9, 9514.0], [81.0, 9522.0], [81.1, 9522.0], [81.2, 9527.0], [81.3, 9551.0], [81.4, 9551.0], [81.5, 9551.0], [81.6, 9561.0], [81.7, 9575.0], [81.8, 9575.0], [81.9, 9582.0], [82.0, 9590.0], [82.1, 9602.0], [82.2, 9602.0], [82.3, 9611.0], [82.4, 9620.0], [82.5, 9620.0], [82.6, 9624.0], [82.7, 9629.0], [82.8, 9630.0], [82.9, 9630.0], [83.0, 9642.0], [83.1, 9645.0], [83.2, 9645.0], [83.3, 9646.0], [83.4, 9650.0], [83.5, 9655.0], [83.6, 9655.0], [83.7, 9660.0], [83.8, 9661.0], [83.9, 9661.0], [84.0, 9669.0], [84.1, 9678.0], [84.2, 9681.0], [84.3, 9681.0], [84.4, 9684.0], [84.5, 9692.0], [84.6, 9692.0], [84.7, 9692.0], [84.8, 9695.0], [84.9, 9697.0], [85.0, 9697.0], [85.1, 9702.0], [85.2, 9717.0], [85.3, 9717.0], [85.4, 9722.0], [85.5, 9724.0], [85.6, 9731.0], [85.7, 9731.0], [85.8, 9737.0], [85.9, 9759.0], [86.0, 9759.0], [86.1, 9776.0], [86.2, 9778.0], [86.3, 9778.0], [86.4, 9778.0], [86.5, 9778.0], [86.6, 9782.0], [86.7, 9782.0], [86.8, 9785.0], [86.9, 9786.0], [87.0, 9792.0], [87.1, 9792.0], [87.2, 9792.0], [87.3, 9793.0], [87.4, 9793.0], [87.5, 9795.0], [87.6, 9805.0], [87.7, 9812.0], [87.8, 9812.0], [87.9, 9838.0], [88.0, 9843.0], [88.1, 9843.0], [88.2, 9850.0], [88.3, 9883.0], [88.4, 9891.0], [88.5, 9891.0], [88.6, 9896.0], [88.7, 9903.0], [88.8, 9903.0], [88.9, 9915.0], [89.0, 9918.0], [89.1, 9920.0], [89.2, 9920.0], [89.3, 9926.0], [89.4, 9928.0], [89.5, 9928.0], [89.6, 9948.0], [89.7, 9949.0], [89.8, 9953.0], [89.9, 9953.0], [90.0, 9960.0], [90.1, 9976.0], [90.2, 9976.0], [90.3, 9978.0], [90.4, 9989.0], [90.5, 9993.0], [90.6, 9993.0], [90.7, 10000.0], [90.8, 10024.0], [90.9, 10024.0], [91.0, 10024.0], [91.1, 10026.0], [91.2, 10032.0], [91.3, 10032.0], [91.4, 10033.0], [91.5, 10044.0], [91.6, 10044.0], [91.7, 10049.0], [91.8, 10054.0], [91.9, 10080.0], [92.0, 10080.0], [92.1, 10087.0], [92.2, 10092.0], [92.3, 10092.0], [92.4, 10093.0], [92.5, 10121.0], [92.6, 10126.0], [92.7, 10126.0], [92.8, 10152.0], [92.9, 10156.0], [93.0, 10156.0], [93.1, 10161.0], [93.2, 10171.0], [93.3, 10172.0], [93.4, 10172.0], [93.5, 10184.0], [93.6, 10198.0], [93.7, 10198.0], [93.8, 10207.0], [93.9, 10211.0], [94.0, 10302.0], [94.1, 10302.0], [94.2, 10302.0], [94.3, 10307.0], [94.4, 10307.0], [94.5, 10328.0], [94.6, 10328.0], [94.7, 10335.0], [94.8, 10335.0], [94.9, 10344.0], [95.0, 10344.0], [95.1, 10344.0], [95.2, 10347.0], [95.3, 10349.0], [95.4, 10350.0], [95.5, 10350.0], [95.6, 10359.0], [95.7, 10414.0], [95.8, 10414.0], [95.9, 10426.0], [96.0, 10437.0], [96.1, 10445.0], [96.2, 10445.0], [96.3, 10448.0], [96.4, 10462.0], [96.5, 10462.0], [96.6, 10472.0], [96.7, 10481.0], [96.8, 10521.0], [96.9, 10521.0], [97.0, 10545.0], [97.1, 10631.0], [97.2, 10631.0], [97.3, 10735.0], [97.4, 10739.0], [97.5, 10768.0], [97.6, 10768.0], [97.7, 10770.0], [97.8, 10774.0], [97.9, 10774.0], [98.0, 10844.0], [98.1, 10851.0], [98.2, 10872.0], [98.3, 10872.0], [98.4, 10872.0], [98.5, 10878.0], [98.6, 10878.0], [98.7, 10972.0], [98.8, 11054.0], [98.9, 11088.0], [99.0, 11088.0], [99.1, 11141.0], [99.2, 11489.0], [99.3, 11489.0], [99.4, 11777.0], [99.5, 11811.0], [99.6, 11912.0], [99.7, 11912.0], [99.8, 12097.0], [99.9, 12637.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 166.0, "series": [{"data": [[800.0, 1.0], [1000.0, 3.0], [1100.0, 6.0], [1500.0, 1.0], [1600.0, 1.0], [2400.0, 1.0], [2500.0, 1.0], [2600.0, 5.0], [2700.0, 2.0], [3400.0, 1.0], [3500.0, 1.0], [3600.0, 1.0], [3800.0, 2.0], [4000.0, 3.0], [4300.0, 1.0], [4100.0, 1.0], [4200.0, 3.0], [4400.0, 2.0], [4500.0, 1.0], [4600.0, 2.0], [4800.0, 1.0], [5000.0, 1.0], [5100.0, 1.0], [4900.0, 2.0], [5200.0, 2.0], [5300.0, 2.0], [5500.0, 1.0], [5800.0, 1.0], [5700.0, 1.0], [6000.0, 1.0], [6200.0, 2.0], [6300.0, 4.0], [6600.0, 4.0], [6500.0, 1.0], [6900.0, 2.0], [6700.0, 2.0], [6800.0, 2.0], [7000.0, 2.0], [7100.0, 3.0], [7200.0, 7.0], [7400.0, 5.0], [7300.0, 8.0], [7500.0, 6.0], [7600.0, 6.0], [7900.0, 12.0], [7800.0, 6.0], [7700.0, 3.0], [8100.0, 3.0], [8000.0, 4.0], [8300.0, 5.0], [8700.0, 5.0], [8600.0, 4.0], [8200.0, 6.0], [8500.0, 5.0], [8400.0, 4.0], [9000.0, 12.0], [8900.0, 3.0], [8800.0, 5.0], [9200.0, 6.0], [9100.0, 9.0], [9400.0, 14.0], [9600.0, 8.0], [9300.0, 9.0], [9500.0, 8.0], [9700.0, 8.0], [9900.0, 18.0], [10100.0, 9.0], [9800.0, 20.0], [10000.0, 25.0], [10200.0, 18.0], [10600.0, 18.0], [10400.0, 23.0], [10700.0, 11.0], [10300.0, 15.0], [10500.0, 8.0], [11200.0, 13.0], [11000.0, 8.0], [10800.0, 19.0], [10900.0, 17.0], [11100.0, 8.0], [11300.0, 8.0], [11400.0, 9.0], [11500.0, 10.0], [11700.0, 4.0], [11600.0, 2.0], [11800.0, 8.0], [12000.0, 5.0], [12200.0, 5.0], [11900.0, 5.0], [12100.0, 2.0], [12500.0, 3.0], [12700.0, 5.0], [12600.0, 3.0], [12300.0, 4.0], [12400.0, 5.0], [12900.0, 5.0], [13000.0, 2.0], [12800.0, 3.0], [13200.0, 1.0], [13300.0, 4.0], [13600.0, 3.0], [13800.0, 1.0], [13500.0, 4.0], [13400.0, 1.0], [13900.0, 2.0], [14100.0, 1.0], [14300.0, 1.0], [14000.0, 1.0], [14400.0, 1.0], [14600.0, 1.0], [14800.0, 1.0], [14900.0, 2.0], [15300.0, 1.0], [15100.0, 1.0], [15700.0, 1.0], [15900.0, 1.0], [16300.0, 1.0], [16200.0, 2.0], [16000.0, 1.0], [16800.0, 1.0], [18400.0, 2.0], [17700.0, 1.0], [18000.0, 1.0], [17800.0, 1.0], [18100.0, 1.0], [18500.0, 1.0], [20400.0, 1.0], [20500.0, 1.0], [21300.0, 1.0], [22500.0, 1.0], [21600.0, 1.0], [22900.0, 1.0], [24100.0, 1.0], [23700.0, 1.0], [24500.0, 1.0], [24700.0, 1.0], [25700.0, 1.0], [30400.0, 2.0], [29900.0, 1.0], [31400.0, 1.0]], "isOverall": false, "label": "Read News", "isController": true}, {"data": [[0.0, 150.0], [9200.0, 1.0], [600.0, 22.0], [700.0, 16.0], [800.0, 23.0], [900.0, 15.0], [1000.0, 28.0], [1100.0, 16.0], [1200.0, 18.0], [1300.0, 13.0], [20600.0, 1.0], [21000.0, 1.0], [20700.0, 1.0], [1400.0, 10.0], [1500.0, 13.0], [100.0, 73.0], [1600.0, 7.0], [1700.0, 4.0], [1800.0, 4.0], [1900.0, 5.0], [2000.0, 7.0], [2100.0, 3.0], [2300.0, 6.0], [2200.0, 5.0], [2400.0, 4.0], [2500.0, 1.0], [2700.0, 3.0], [2900.0, 2.0], [3000.0, 3.0], [3100.0, 3.0], [200.0, 51.0], [3400.0, 3.0], [3500.0, 1.0], [3700.0, 1.0], [3900.0, 1.0], [4200.0, 1.0], [300.0, 35.0], [4800.0, 2.0], [5800.0, 1.0], [6100.0, 1.0], [6300.0, 1.0], [400.0, 20.0], [500.0, 42.0]], "isOverall": false, "label": "GetNewsList(5)", "isController": false}, {"data": [[0.0, 83.0], [600.0, 24.0], [700.0, 33.0], [800.0, 30.0], [900.0, 25.0], [1000.0, 37.0], [1100.0, 8.0], [1200.0, 4.0], [1300.0, 20.0], [1400.0, 2.0], [1500.0, 7.0], [100.0, 128.0], [1600.0, 3.0], [1700.0, 3.0], [1800.0, 5.0], [1900.0, 6.0], [2000.0, 8.0], [2100.0, 3.0], [2300.0, 5.0], [2200.0, 3.0], [2400.0, 1.0], [2500.0, 1.0], [2900.0, 1.0], [3100.0, 2.0], [200.0, 38.0], [3200.0, 1.0], [3400.0, 1.0], [3600.0, 1.0], [4000.0, 2.0], [4100.0, 1.0], [4500.0, 2.0], [4600.0, 2.0], [300.0, 67.0], [400.0, 37.0], [500.0, 29.0]], "isOverall": false, "label": "GetNewsCount", "isController": false}, {"data": [[0.0, 166.0], [600.0, 19.0], [700.0, 11.0], [800.0, 15.0], [900.0, 19.0], [1000.0, 35.0], [1100.0, 15.0], [1200.0, 4.0], [1300.0, 9.0], [1400.0, 11.0], [1500.0, 8.0], [1600.0, 9.0], [1800.0, 7.0], [1900.0, 2.0], [2000.0, 7.0], [2100.0, 8.0], [2200.0, 1.0], [2300.0, 4.0], [2400.0, 5.0], [2500.0, 4.0], [2600.0, 1.0], [2700.0, 4.0], [2800.0, 5.0], [2900.0, 1.0], [3100.0, 3.0], [3300.0, 4.0], [3200.0, 4.0], [3400.0, 2.0], [3500.0, 2.0], [3600.0, 1.0], [3700.0, 1.0], [3800.0, 3.0], [3900.0, 1.0], [4000.0, 1.0], [4100.0, 4.0], [4200.0, 1.0], [4800.0, 1.0], [5100.0, 1.0], [5000.0, 1.0], [5200.0, 2.0], [5400.0, 2.0], [5800.0, 1.0], [5900.0, 2.0], [6100.0, 1.0], [6000.0, 1.0], [6400.0, 1.0], [7400.0, 2.0], [8700.0, 1.0], [9400.0, 1.0], [10200.0, 1.0], [11600.0, 1.0], [11500.0, 1.0], [12000.0, 1.0], [11900.0, 1.0], [18500.0, 1.0], [21300.0, 1.0], [100.0, 61.0], [200.0, 45.0], [300.0, 36.0], [400.0, 28.0], [500.0, 29.0]], "isOverall": false, "label": "GetNewsList(10)", "isController": false}, {"data": [[600.0, 3.0], [700.0, 5.0], [800.0, 3.0], [1200.0, 1.0], [1300.0, 3.0], [1400.0, 2.0], [1500.0, 2.0], [1600.0, 1.0], [1700.0, 2.0], [1800.0, 3.0], [1900.0, 3.0], [2000.0, 4.0], [2100.0, 3.0], [2200.0, 7.0], [2300.0, 4.0], [2400.0, 2.0], [2600.0, 5.0], [2800.0, 6.0], [2900.0, 2.0], [3000.0, 4.0], [3100.0, 2.0], [3200.0, 1.0], [3300.0, 3.0], [3400.0, 5.0], [3500.0, 5.0], [3600.0, 6.0], [3700.0, 4.0], [3900.0, 2.0], [4300.0, 1.0], [4100.0, 2.0], [4500.0, 2.0], [4400.0, 3.0], [4600.0, 2.0], [4700.0, 3.0], [4800.0, 4.0], [5000.0, 4.0], [4900.0, 5.0], [5100.0, 2.0], [5200.0, 4.0], [5300.0, 3.0], [5500.0, 2.0], [5600.0, 5.0], [5400.0, 1.0], [5800.0, 6.0], [5700.0, 2.0], [5900.0, 6.0], [6000.0, 6.0], [6100.0, 7.0], [6200.0, 8.0], [6600.0, 1.0], [6500.0, 6.0], [6400.0, 2.0], [6800.0, 6.0], [6700.0, 4.0], [6900.0, 2.0], [7000.0, 7.0], [7100.0, 5.0], [7300.0, 18.0], [7200.0, 5.0], [7400.0, 6.0], [7600.0, 17.0], [7500.0, 6.0], [7800.0, 12.0], [7900.0, 19.0], [7700.0, 15.0], [8100.0, 16.0], [8000.0, 9.0], [8600.0, 20.0], [8200.0, 15.0], [8300.0, 16.0], [8700.0, 19.0], [8500.0, 20.0], [8400.0, 15.0], [9200.0, 17.0], [8800.0, 23.0], [8900.0, 15.0], [9000.0, 30.0], [9100.0, 18.0], [9700.0, 18.0], [9600.0, 21.0], [9400.0, 24.0], [9300.0, 18.0], [9500.0, 10.0], [9800.0, 8.0], [10100.0, 9.0], [10000.0, 13.0], [9900.0, 14.0], [10200.0, 2.0], [10700.0, 5.0], [10300.0, 12.0], [10400.0, 8.0], [10500.0, 2.0], [10600.0, 1.0], [10800.0, 5.0], [11100.0, 1.0], [11000.0, 2.0], [10900.0, 1.0], [11700.0, 1.0], [11400.0, 1.0], [11900.0, 1.0], [12000.0, 1.0], [11800.0, 1.0], [12600.0, 1.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 31400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 597.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1020.0, "series": [{"data": [[0.0, 1020.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 597.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 959.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 54.61864406779664, "minX": 1.57793412E12, "maxY": 99.8664741970408, "series": [{"data": [[1.57793412E12, 60.498360655737734], [1.57793424E12, 54.61864406779664], [1.57793418E12, 99.8664741970408]], "isOverall": false, "label": "Read News Thread Group(\u83B7\u53D6\u65B0\u95FB)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793424E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 54.0, "minX": 4.0, "maxY": 10846.0, "series": [{"data": [[38.0, 2523.5], [39.0, 2593.0], [40.0, 2616.0], [41.0, 2659.0], [42.0, 2684.0], [53.0, 3515.0], [56.0, 3636.0], [61.0, 4337.25], [62.0, 4336.0], [63.0, 3898.0], [64.0, 4027.3333333333335], [68.0, 4651.0], [69.0, 4311.333333333333], [70.0, 7387.5], [74.0, 9496.666666666666], [78.0, 5128.5], [79.0, 4982.0], [83.0, 5289.0], [88.0, 5390.0], [91.0, 5717.5], [94.0, 9668.611111111111], [99.0, 10735.0], [98.0, 10846.0], [100.0, 10706.552102376598], [11.0, 843.0], [14.0, 1139.5], [15.0, 1090.0], [17.0, 1054.0], [18.0, 1037.0], [20.0, 1160.0], [21.0, 1146.0], [27.0, 1628.0]], "isOverall": false, "label": "Read News", "isController": true}, {"data": [[95.91423948220061, 10115.330097087377]], "isOverall": false, "label": "Read News-Aggregated", "isController": true}, {"data": [[38.0, 83.0], [39.0, 201.0], [40.0, 96.0], [41.0, 97.0], [42.0, 82.33333333333333], [53.0, 108.0], [56.0, 279.0], [61.0, 528.0], [62.0, 591.5], [63.0, 75.0], [64.0, 82.0], [68.0, 116.0], [69.0, 99.66666666666667], [70.0, 89.5], [74.0, 242.33333333333334], [78.0, 92.5], [79.0, 102.0], [83.0, 87.0], [88.0, 108.0], [91.0, 135.5], [94.0, 95.72222222222223], [99.0, 848.5], [98.0, 100.0], [100.0, 914.8592321755024], [11.0, 69.0], [14.0, 277.5], [15.0, 96.0], [17.0, 92.0], [18.0, 133.0], [20.0, 94.0], [21.0, 109.0], [27.0, 87.5]], "isOverall": false, "label": "GetNewsList(5)", "isController": false}, {"data": [[95.91423948220061, 829.5339805825253]], "isOverall": false, "label": "GetNewsList(5)-Aggregated", "isController": false}, {"data": [[36.0, 111.66666666666667], [37.0, 114.0], [38.0, 73.0], [39.0, 175.0], [40.0, 146.33333333333334], [47.0, 100.0], [48.0, 129.0], [52.0, 118.0], [53.0, 675.5], [58.0, 165.0], [61.0, 347.0], [62.0, 98.0], [63.0, 992.0], [67.0, 79.0], [68.0, 117.5], [74.0, 155.0], [77.0, 195.0], [79.0, 709.0], [78.0, 470.5], [82.0, 94.0], [85.0, 101.0], [89.0, 98.5], [91.0, 2023.0], [92.0, 183.0], [94.0, 108.57142857142857], [99.0, 461.3333333333333], [100.0, 689.9402173913041], [10.0, 61.0], [11.0, 64.0], [15.0, 66.0], [16.0, 82.0], [18.0, 155.0], [19.0, 58.0], [25.0, 93.0]], "isOverall": false, "label": "GetNewsCount", "isController": false}, {"data": [[95.66131621187806, 642.8154093097916]], "isOverall": false, "label": "GetNewsCount-Aggregated", "isController": false}, {"data": [[37.0, 87.0], [39.0, 137.0], [40.0, 94.0], [41.0, 96.33333333333333], [52.0, 480.0], [53.0, 74.0], [56.0, 281.0], [63.0, 132.25], [66.0, 296.0], [68.0, 85.33333333333333], [69.0, 119.0], [70.0, 89.0], [75.0, 54.0], [77.0, 296.5], [78.0, 147.0], [76.0, 84.33333333333333], [83.0, 83.0], [87.0, 226.0], [90.0, 96.0], [93.0, 103.0], [94.0, 138.7], [99.0, 341.375], [98.0, 103.0], [100.0, 1165.4936247723133], [10.0, 75.0], [11.0, 69.0], [14.0, 285.5], [16.0, 84.5], [17.0, 103.0], [19.0, 127.0], [20.0, 92.0], [26.0, 88.0]], "isOverall": false, "label": "GetNewsList(10)", "isController": false}, {"data": [[95.82580645161285, 1051.7032258064519]], "isOverall": false, "label": "GetNewsList(10)-Aggregated", "isController": false}, {"data": [[4.0, 3486.5], [9.0, 634.0], [10.0, 4313.333333333333], [11.0, 3358.5], [12.0, 5964.0], [13.0, 5081.0], [14.0, 2525.0], [15.0, 719.0], [16.0, 3947.6666666666665], [17.0, 5676.0], [18.0, 3439.5], [19.0, 5962.0], [20.0, 7166.0], [24.0, 1359.5], [35.0, 3362.8], [34.0, 7327.785714285714], [37.0, 4170.333333333333], [36.0, 7729.0], [38.0, 4949.0], [39.0, 4135.0], [41.0, 7624.0], [40.0, 7591.0], [43.0, 2616.0], [42.0, 7312.0], [45.0, 6795.5], [46.0, 3904.0], [47.0, 5208.5], [49.0, 4440.0], [48.0, 7346.0], [51.0, 5793.0], [50.0, 8350.0], [53.0, 5765.5], [52.0, 9247.0], [55.0, 8005.0], [54.0, 9209.0], [56.0, 5785.5], [57.0, 8443.0], [59.0, 8827.0], [60.0, 3430.0], [61.0, 3685.0], [63.0, 7092.0], [62.0, 8357.75], [66.0, 5769.5], [67.0, 6986.0], [65.0, 7486.0], [64.0, 8639.0], [71.0, 8362.0], [70.0, 9153.0], [69.0, 9432.0], [68.0, 9551.0], [73.0, 4592.0], [74.0, 7364.4], [75.0, 8487.0], [78.0, 9103.0], [77.0, 9073.0], [81.0, 5025.0], [82.0, 9235.333333333334], [80.0, 7769.0], [84.0, 8646.333333333334], [87.0, 8789.0], [86.0, 9594.5], [85.0, 9993.0], [88.0, 5387.5], [90.0, 8035.333333333333], [89.0, 9219.5], [94.0, 9502.300000000001], [98.0, 8687.75], [99.0, 7477.666666666667], [100.0, 7973.847942754923]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[89.60559440559447, 7626.43916083917]], "isOverall": false, "label": "Login-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.57793412E12, "maxY": 64018.25, "series": [{"data": [[1.57793412E12, 7047.666666666667], [1.57793424E12, 1810.5833333333333], [1.57793418E12, 64018.25]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.57793412E12, 0.0], [1.57793424E12, 0.0], [1.57793418E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793424E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 79.2, "minX": 1.57793412E12, "maxY": 10769.459312839059, "series": [{"data": [[1.57793412E12, 4209.459016393443], [1.57793424E12, 9746.5], [1.57793418E12, 10769.459312839059]], "isOverall": false, "label": "Read News", "isController": true}, {"data": [[1.57793412E12, 150.96721311475406], [1.57793424E12, 201.5], [1.57793418E12, 908.9276672694394]], "isOverall": false, "label": "GetNewsList(5)", "isController": false}, {"data": [[1.57793412E12, 288.8852459016394], [1.57793424E12, 614.5], [1.57793418E12, 682.1949458483754]], "isOverall": false, "label": "GetNewsCount", "isController": false}, {"data": [[1.57793412E12, 140.62295081967213], [1.57793424E12, 79.2], [1.57793418E12, 1160.797833935018]], "isOverall": false, "label": "GetNewsList(10)", "isController": false}, {"data": [[1.57793412E12, 3628.9836065573772], [1.57793424E12, 7839.855670103092], [1.57793418E12, 8027.055655296229]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793424E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 79.0, "minX": 1.57793412E12, "maxY": 10488.60578661844, "series": [{"data": [[1.57793412E12, 4187.950819672131], [1.57793424E12, 9746.0], [1.57793418E12, 10488.60578661844]], "isOverall": false, "label": "Read News", "isController": true}, {"data": [[1.57793412E12, 150.9344262295082], [1.57793424E12, 201.5], [1.57793418E12, 858.4394213381557]], "isOverall": false, "label": "GetNewsList(5)", "isController": false}, {"data": [[1.57793412E12, 288.6065573770492], [1.57793424E12, 614.375], [1.57793418E12, 680.5433212996386]], "isOverall": false, "label": "GetNewsCount", "isController": false}, {"data": [[1.57793412E12, 140.42622950819674], [1.57793424E12, 79.0], [1.57793418E12, 965.568592057762]], "isOverall": false, "label": "GetNewsList(10)", "isController": false}, {"data": [[1.57793412E12, 3607.983606557378], [1.57793424E12, 7830.773195876284], [1.57793418E12, 7994.161579892274]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793424E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.57793412E12, "maxY": 189.88065099457523, "series": [{"data": [[1.57793412E12, 106.19672131147543], [1.57793424E12, 65.0], [1.57793418E12, 189.88065099457523]], "isOverall": false, "label": "Read News", "isController": true}, {"data": [[1.57793412E12, 0.0], [1.57793424E12, 0.0], [1.57793418E12, 17.58951175406873]], "isOverall": false, "label": "GetNewsList(5)", "isController": false}, {"data": [[1.57793412E12, 34.88524590163934], [1.57793424E12, 68.25], [1.57793418E12, 93.02346570397117]], "isOverall": false, "label": "GetNewsCount", "isController": false}, {"data": [[1.57793412E12, 0.0], [1.57793424E12, 0.0], [1.57793418E12, 7.8718411552346605]], "isOverall": false, "label": "GetNewsList(10)", "isController": false}, {"data": [[1.57793412E12, 71.31147540983608], [1.57793424E12, 45.319587628865975], [1.57793418E12, 71.01077199281869]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793424E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 41.0, "minX": 1.57793412E12, "maxY": 21355.0, "series": [{"data": [[1.57793412E12, 8110.0], [1.57793424E12, 11088.0], [1.57793418E12, 21355.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.57793412E12, 42.0], [1.57793424E12, 54.0], [1.57793418E12, 41.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.57793412E12, 3935.0], [1.57793424E12, 9734.5], [1.57793418E12, 9021.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.57793412E12, 7270.050000000001], [1.57793424E12, 11070.599999999999], [1.57793418E12, 10830.699999999997]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.57793412E12, 5897.75], [1.57793424E12, 10035.0], [1.57793418E12, 9681.549999999997]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793424E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 93.0, "minX": 2.0, "maxY": 9150.0, "series": [{"data": [[33.0, 161.0], [32.0, 7803.0], [2.0, 8385.5], [34.0, 1017.5], [35.0, 852.0], [36.0, 121.5], [37.0, 1526.0], [38.0, 1354.0], [39.0, 775.0], [41.0, 684.0], [40.0, 476.0], [43.0, 809.0], [44.0, 1274.0], [45.0, 7312.0], [46.0, 230.0], [48.0, 602.0], [50.0, 2094.5], [52.0, 595.0], [54.0, 112.0], [55.0, 238.0], [58.0, 392.0], [59.0, 404.0], [63.0, 1460.0], [67.0, 288.0], [4.0, 3526.5], [77.0, 1048.0], [8.0, 93.0], [10.0, 5944.0], [11.0, 2823.0], [12.0, 9150.0], [13.0, 1277.5], [14.0, 100.0], [16.0, 116.0], [17.0, 96.0], [18.0, 8541.0], [19.0, 1048.0], [20.0, 8919.0], [21.0, 114.0], [23.0, 105.0], [24.0, 1542.0], [25.0, 645.0], [26.0, 106.0], [27.0, 240.5], [28.0, 2141.5], [30.0, 900.5], [31.0, 700.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 77.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 93.0, "minX": 2.0, "maxY": 8947.0, "series": [{"data": [[33.0, 161.0], [32.0, 7803.0], [2.0, 8385.5], [34.0, 1016.5], [35.0, 818.0], [36.0, 121.5], [37.0, 1410.0], [38.0, 1242.5], [39.0, 626.0], [41.0, 679.0], [40.0, 453.0], [43.0, 789.0], [44.0, 1120.5], [45.0, 7312.0], [46.0, 230.0], [48.0, 601.5], [50.0, 1938.5], [52.0, 594.5], [54.0, 107.0], [55.0, 238.0], [58.0, 392.0], [59.0, 403.0], [63.0, 1460.0], [67.0, 288.0], [4.0, 3526.0], [77.0, 1048.0], [8.0, 93.0], [10.0, 5848.5], [11.0, 2823.0], [12.0, 8947.0], [13.0, 1277.5], [14.0, 100.0], [16.0, 116.0], [17.0, 95.0], [18.0, 8541.0], [19.0, 1048.0], [20.0, 8918.5], [21.0, 114.0], [23.0, 105.0], [24.0, 1508.0], [25.0, 607.0], [26.0, 106.0], [27.0, 240.5], [28.0, 2075.0], [30.0, 853.5], [31.0, 652.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 77.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.3333333333333333, "minX": 1.57793412E12, "maxY": 36.86666666666667, "series": [{"data": [[1.57793412E12, 5.733333333333333], [1.57793424E12, 0.3333333333333333], [1.57793418E12, 36.86666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793424E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.9, "minX": 1.57793412E12, "maxY": 36.96666666666667, "series": [{"data": [[1.57793412E12, 4.066666666666666], [1.57793424E12, 1.9], [1.57793418E12, 36.96666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793424E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.57793412E12, "maxY": 9.283333333333333, "series": [{"data": [[1.57793412E12, 1.0166666666666666], [1.57793424E12, 0.06666666666666667], [1.57793418E12, 9.216666666666667]], "isOverall": false, "label": "Read News-success", "isController": true}, {"data": [[1.57793412E12, 1.0166666666666666], [1.57793424E12, 0.06666666666666667], [1.57793418E12, 9.216666666666667]], "isOverall": false, "label": "GetNewsList(5)-success", "isController": false}, {"data": [[1.57793412E12, 1.0166666666666666], [1.57793424E12, 0.13333333333333333], [1.57793418E12, 9.233333333333333]], "isOverall": false, "label": "GetNewsCount-success", "isController": false}, {"data": [[1.57793412E12, 1.0166666666666666], [1.57793424E12, 0.08333333333333333], [1.57793418E12, 9.233333333333333]], "isOverall": false, "label": "GetNewsList(10)-success", "isController": false}, {"data": [[1.57793412E12, 1.0166666666666666], [1.57793424E12, 1.6166666666666667], [1.57793418E12, 9.283333333333333]], "isOverall": false, "label": "Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793424E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.9666666666666666, "minX": 1.57793412E12, "maxY": 46.18333333333333, "series": [{"data": [[1.57793412E12, 5.083333333333333], [1.57793424E12, 1.9666666666666666], [1.57793418E12, 46.18333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793424E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

