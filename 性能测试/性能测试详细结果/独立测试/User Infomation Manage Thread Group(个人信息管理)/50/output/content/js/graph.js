/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 70.0, "minX": 0.0, "maxY": 10839.0, "series": [{"data": [[0.0, 70.0], [0.1, 70.0], [0.2, 70.0], [0.3, 70.0], [0.4, 70.0], [0.5, 72.0], [0.6, 72.0], [0.7, 72.0], [0.8, 72.0], [0.9, 72.0], [1.0, 72.0], [1.1, 72.0], [1.2, 72.0], [1.3, 72.0], [1.4, 72.0], [1.5, 72.0], [1.6, 72.0], [1.7, 72.0], [1.8, 95.0], [1.9, 95.0], [2.0, 95.0], [2.1, 95.0], [2.2, 95.0], [2.3, 98.0], [2.4, 98.0], [2.5, 98.0], [2.6, 98.0], [2.7, 100.0], [2.8, 100.0], [2.9, 100.0], [3.0, 100.0], [3.1, 100.0], [3.2, 101.0], [3.3, 101.0], [3.4, 101.0], [3.5, 101.0], [3.6, 103.0], [3.7, 103.0], [3.8, 103.0], [3.9, 103.0], [4.0, 103.0], [4.1, 104.0], [4.2, 104.0], [4.3, 104.0], [4.4, 104.0], [4.5, 106.0], [4.6, 106.0], [4.7, 106.0], [4.8, 106.0], [4.9, 107.0], [5.0, 107.0], [5.1, 107.0], [5.2, 107.0], [5.3, 107.0], [5.4, 107.0], [5.5, 107.0], [5.6, 107.0], [5.7, 107.0], [5.8, 108.0], [5.9, 108.0], [6.0, 108.0], [6.1, 108.0], [6.2, 108.0], [6.3, 108.0], [6.4, 108.0], [6.5, 108.0], [6.6, 108.0], [6.7, 108.0], [6.8, 108.0], [6.9, 108.0], [7.0, 108.0], [7.1, 108.0], [7.2, 110.0], [7.3, 110.0], [7.4, 110.0], [7.5, 110.0], [7.6, 110.0], [7.7, 110.0], [7.8, 110.0], [7.9, 110.0], [8.0, 110.0], [8.1, 110.0], [8.2, 110.0], [8.3, 110.0], [8.4, 110.0], [8.5, 110.0], [8.6, 110.0], [8.7, 110.0], [8.8, 110.0], [8.9, 111.0], [9.0, 111.0], [9.1, 111.0], [9.2, 111.0], [9.3, 111.0], [9.4, 111.0], [9.5, 111.0], [9.6, 111.0], [9.7, 111.0], [9.8, 111.0], [9.9, 111.0], [10.0, 111.0], [10.1, 111.0], [10.2, 111.0], [10.3, 111.0], [10.4, 111.0], [10.5, 111.0], [10.6, 111.0], [10.7, 111.0], [10.8, 111.0], [10.9, 111.0], [11.0, 111.0], [11.1, 111.0], [11.2, 111.0], [11.3, 111.0], [11.4, 111.0], [11.5, 111.0], [11.6, 112.0], [11.7, 112.0], [11.8, 112.0], [11.9, 112.0], [12.0, 112.0], [12.1, 112.0], [12.2, 112.0], [12.3, 112.0], [12.4, 112.0], [12.5, 112.0], [12.6, 112.0], [12.7, 112.0], [12.8, 112.0], [12.9, 113.0], [13.0, 113.0], [13.1, 113.0], [13.2, 113.0], [13.3, 113.0], [13.4, 113.0], [13.5, 113.0], [13.6, 113.0], [13.7, 113.0], [13.8, 113.0], [13.9, 113.0], [14.0, 113.0], [14.1, 113.0], [14.2, 113.0], [14.3, 114.0], [14.4, 114.0], [14.5, 114.0], [14.6, 114.0], [14.7, 114.0], [14.8, 114.0], [14.9, 114.0], [15.0, 114.0], [15.1, 114.0], [15.2, 114.0], [15.3, 114.0], [15.4, 114.0], [15.5, 114.0], [15.6, 115.0], [15.7, 115.0], [15.8, 115.0], [15.9, 115.0], [16.0, 115.0], [16.1, 115.0], [16.2, 115.0], [16.3, 115.0], [16.4, 115.0], [16.5, 115.0], [16.6, 115.0], [16.7, 115.0], [16.8, 115.0], [16.9, 116.0], [17.0, 116.0], [17.1, 116.0], [17.2, 116.0], [17.3, 116.0], [17.4, 116.0], [17.5, 116.0], [17.6, 116.0], [17.7, 116.0], [17.8, 117.0], [17.9, 117.0], [18.0, 117.0], [18.1, 117.0], [18.2, 117.0], [18.3, 118.0], [18.4, 118.0], [18.5, 118.0], [18.6, 118.0], [18.7, 118.0], [18.8, 118.0], [18.9, 118.0], [19.0, 118.0], [19.1, 118.0], [19.2, 118.0], [19.3, 118.0], [19.4, 118.0], [19.5, 118.0], [19.6, 119.0], [19.7, 119.0], [19.8, 119.0], [19.9, 119.0], [20.0, 119.0], [20.1, 119.0], [20.2, 119.0], [20.3, 119.0], [20.4, 119.0], [20.5, 120.0], [20.6, 120.0], [20.7, 120.0], [20.8, 120.0], [20.9, 120.0], [21.0, 120.0], [21.1, 120.0], [21.2, 120.0], [21.3, 120.0], [21.4, 121.0], [21.5, 121.0], [21.6, 121.0], [21.7, 121.0], [21.8, 121.0], [21.9, 121.0], [22.0, 121.0], [22.1, 121.0], [22.2, 121.0], [22.3, 121.0], [22.4, 121.0], [22.5, 121.0], [22.6, 121.0], [22.7, 121.0], [22.8, 121.0], [22.9, 121.0], [23.0, 121.0], [23.1, 121.0], [23.2, 121.0], [23.3, 121.0], [23.4, 121.0], [23.5, 121.0], [23.6, 121.0], [23.7, 121.0], [23.8, 121.0], [23.9, 121.0], [24.0, 122.0], [24.1, 122.0], [24.2, 122.0], [24.3, 122.0], [24.4, 122.0], [24.5, 122.0], [24.6, 122.0], [24.7, 122.0], [24.8, 122.0], [24.9, 122.0], [25.0, 122.0], [25.1, 122.0], [25.2, 122.0], [25.3, 122.0], [25.4, 122.0], [25.5, 122.0], [25.6, 122.0], [25.7, 122.0], [25.8, 122.0], [25.9, 122.0], [26.0, 122.0], [26.1, 122.0], [26.2, 122.0], [26.3, 122.0], [26.4, 122.0], [26.5, 122.0], [26.6, 122.0], [26.7, 122.0], [26.8, 122.0], [26.9, 122.0], [27.0, 122.0], [27.1, 122.0], [27.2, 124.0], [27.3, 124.0], [27.4, 124.0], [27.5, 124.0], [27.6, 124.0], [27.7, 124.0], [27.8, 124.0], [27.9, 124.0], [28.0, 125.0], [28.1, 125.0], [28.2, 125.0], [28.3, 125.0], [28.4, 125.0], [28.5, 126.0], [28.6, 126.0], [28.7, 126.0], [28.8, 126.0], [28.9, 126.0], [29.0, 126.0], [29.1, 126.0], [29.2, 126.0], [29.3, 126.0], [29.4, 126.0], [29.5, 126.0], [29.6, 126.0], [29.7, 126.0], [29.8, 126.0], [29.9, 126.0], [30.0, 126.0], [30.1, 126.0], [30.2, 126.0], [30.3, 127.0], [30.4, 127.0], [30.5, 127.0], [30.6, 127.0], [30.7, 127.0], [30.8, 127.0], [30.9, 127.0], [31.0, 127.0], [31.1, 127.0], [31.2, 128.0], [31.3, 128.0], [31.4, 128.0], [31.5, 128.0], [31.6, 129.0], [31.7, 129.0], [31.8, 129.0], [31.9, 129.0], [32.0, 130.0], [32.1, 130.0], [32.2, 130.0], [32.3, 130.0], [32.4, 130.0], [32.5, 130.0], [32.6, 130.0], [32.7, 130.0], [32.8, 130.0], [32.9, 130.0], [33.0, 130.0], [33.1, 130.0], [33.2, 130.0], [33.3, 130.0], [33.4, 131.0], [33.5, 131.0], [33.6, 131.0], [33.7, 131.0], [33.8, 132.0], [33.9, 132.0], [34.0, 132.0], [34.1, 132.0], [34.2, 132.0], [34.3, 133.0], [34.4, 133.0], [34.5, 133.0], [34.6, 133.0], [34.7, 133.0], [34.8, 133.0], [34.9, 133.0], [35.0, 133.0], [35.1, 133.0], [35.2, 134.0], [35.3, 134.0], [35.4, 134.0], [35.5, 134.0], [35.6, 134.0], [35.7, 134.0], [35.8, 134.0], [35.9, 134.0], [36.0, 135.0], [36.1, 135.0], [36.2, 135.0], [36.3, 135.0], [36.4, 135.0], [36.5, 135.0], [36.6, 135.0], [36.7, 135.0], [36.8, 135.0], [36.9, 135.0], [37.0, 135.0], [37.1, 135.0], [37.2, 135.0], [37.3, 135.0], [37.4, 135.0], [37.5, 135.0], [37.6, 135.0], [37.7, 135.0], [37.8, 136.0], [37.9, 136.0], [38.0, 136.0], [38.1, 136.0], [38.2, 136.0], [38.3, 136.0], [38.4, 136.0], [38.5, 136.0], [38.6, 136.0], [38.7, 137.0], [38.8, 137.0], [38.9, 137.0], [39.0, 137.0], [39.1, 137.0], [39.2, 137.0], [39.3, 137.0], [39.4, 137.0], [39.5, 137.0], [39.6, 139.0], [39.7, 139.0], [39.8, 139.0], [39.9, 139.0], [40.0, 139.0], [40.1, 139.0], [40.2, 139.0], [40.3, 139.0], [40.4, 139.0], [40.5, 140.0], [40.6, 140.0], [40.7, 140.0], [40.8, 140.0], [40.9, 142.0], [41.0, 142.0], [41.1, 142.0], [41.2, 142.0], [41.3, 142.0], [41.4, 142.0], [41.5, 142.0], [41.6, 142.0], [41.7, 142.0], [41.8, 142.0], [41.9, 142.0], [42.0, 142.0], [42.1, 142.0], [42.2, 142.0], [42.3, 142.0], [42.4, 142.0], [42.5, 142.0], [42.6, 142.0], [42.7, 142.0], [42.8, 142.0], [42.9, 142.0], [43.0, 142.0], [43.1, 142.0], [43.2, 144.0], [43.3, 144.0], [43.4, 144.0], [43.5, 144.0], [43.6, 144.0], [43.7, 144.0], [43.8, 144.0], [43.9, 144.0], [44.0, 144.0], [44.1, 144.0], [44.2, 144.0], [44.3, 144.0], [44.4, 144.0], [44.5, 147.0], [44.6, 147.0], [44.7, 147.0], [44.8, 147.0], [44.9, 149.0], [45.0, 149.0], [45.1, 149.0], [45.2, 149.0], [45.3, 149.0], [45.4, 149.0], [45.5, 149.0], [45.6, 149.0], [45.7, 149.0], [45.8, 150.0], [45.9, 150.0], [46.0, 150.0], [46.1, 150.0], [46.2, 150.0], [46.3, 152.0], [46.4, 152.0], [46.5, 152.0], [46.6, 152.0], [46.7, 152.0], [46.8, 152.0], [46.9, 152.0], [47.0, 152.0], [47.1, 152.0], [47.2, 153.0], [47.3, 153.0], [47.4, 153.0], [47.5, 153.0], [47.6, 153.0], [47.7, 153.0], [47.8, 153.0], [47.9, 153.0], [48.0, 153.0], [48.1, 153.0], [48.2, 153.0], [48.3, 153.0], [48.4, 153.0], [48.5, 154.0], [48.6, 154.0], [48.7, 154.0], [48.8, 154.0], [48.9, 155.0], [49.0, 155.0], [49.1, 155.0], [49.2, 155.0], [49.3, 155.0], [49.4, 155.0], [49.5, 155.0], [49.6, 155.0], [49.7, 155.0], [49.8, 155.0], [49.9, 155.0], [50.0, 155.0], [50.1, 155.0], [50.2, 155.0], [50.3, 157.0], [50.4, 157.0], [50.5, 157.0], [50.6, 157.0], [50.7, 158.0], [50.8, 158.0], [50.9, 158.0], [51.0, 158.0], [51.1, 158.0], [51.2, 159.0], [51.3, 159.0], [51.4, 159.0], [51.5, 159.0], [51.6, 160.0], [51.7, 160.0], [51.8, 160.0], [51.9, 160.0], [52.0, 161.0], [52.1, 161.0], [52.2, 161.0], [52.3, 161.0], [52.4, 161.0], [52.5, 161.0], [52.6, 161.0], [52.7, 161.0], [52.8, 161.0], [52.9, 162.0], [53.0, 162.0], [53.1, 162.0], [53.2, 162.0], [53.3, 162.0], [53.4, 163.0], [53.5, 163.0], [53.6, 163.0], [53.7, 163.0], [53.8, 164.0], [53.9, 164.0], [54.0, 164.0], [54.1, 164.0], [54.2, 164.0], [54.3, 167.0], [54.4, 167.0], [54.5, 167.0], [54.6, 167.0], [54.7, 167.0], [54.8, 167.0], [54.9, 167.0], [55.0, 167.0], [55.1, 167.0], [55.2, 170.0], [55.3, 170.0], [55.4, 170.0], [55.5, 170.0], [55.6, 171.0], [55.7, 171.0], [55.8, 171.0], [55.9, 171.0], [56.0, 171.0], [56.1, 171.0], [56.2, 171.0], [56.3, 171.0], [56.4, 171.0], [56.5, 172.0], [56.6, 172.0], [56.7, 172.0], [56.8, 172.0], [56.9, 174.0], [57.0, 174.0], [57.1, 174.0], [57.2, 174.0], [57.3, 174.0], [57.4, 174.0], [57.5, 174.0], [57.6, 174.0], [57.7, 174.0], [57.8, 174.0], [57.9, 174.0], [58.0, 174.0], [58.1, 174.0], [58.2, 174.0], [58.3, 174.0], [58.4, 174.0], [58.5, 174.0], [58.6, 174.0], [58.7, 174.0], [58.8, 174.0], [58.9, 174.0], [59.0, 174.0], [59.1, 174.0], [59.2, 177.0], [59.3, 177.0], [59.4, 177.0], [59.5, 177.0], [59.6, 178.0], [59.7, 178.0], [59.8, 178.0], [59.9, 178.0], [60.0, 180.0], [60.1, 180.0], [60.2, 180.0], [60.3, 180.0], [60.4, 180.0], [60.5, 180.0], [60.6, 180.0], [60.7, 180.0], [60.8, 180.0], [60.9, 181.0], [61.0, 181.0], [61.1, 181.0], [61.2, 181.0], [61.3, 181.0], [61.4, 182.0], [61.5, 182.0], [61.6, 182.0], [61.7, 182.0], [61.8, 183.0], [61.9, 183.0], [62.0, 183.0], [62.1, 183.0], [62.2, 183.0], [62.3, 184.0], [62.4, 184.0], [62.5, 184.0], [62.6, 184.0], [62.7, 184.0], [62.8, 184.0], [62.9, 184.0], [63.0, 184.0], [63.1, 184.0], [63.2, 184.0], [63.3, 184.0], [63.4, 184.0], [63.5, 184.0], [63.6, 188.0], [63.7, 188.0], [63.8, 188.0], [63.9, 188.0], [64.0, 191.0], [64.1, 191.0], [64.2, 191.0], [64.3, 191.0], [64.4, 191.0], [64.5, 191.0], [64.6, 191.0], [64.7, 191.0], [64.8, 191.0], [64.9, 193.0], [65.0, 193.0], [65.1, 193.0], [65.2, 193.0], [65.3, 193.0], [65.4, 195.0], [65.5, 195.0], [65.6, 195.0], [65.7, 195.0], [65.8, 199.0], [65.9, 199.0], [66.0, 199.0], [66.1, 199.0], [66.2, 199.0], [66.3, 200.0], [66.4, 200.0], [66.5, 200.0], [66.6, 200.0], [66.7, 206.0], [66.8, 206.0], [66.9, 206.0], [67.0, 206.0], [67.1, 206.0], [67.2, 207.0], [67.3, 207.0], [67.4, 207.0], [67.5, 207.0], [67.6, 208.0], [67.7, 208.0], [67.8, 208.0], [67.9, 208.0], [68.0, 208.0], [68.1, 208.0], [68.2, 208.0], [68.3, 208.0], [68.4, 208.0], [68.5, 209.0], [68.6, 209.0], [68.7, 209.0], [68.8, 209.0], [68.9, 211.0], [69.0, 211.0], [69.1, 211.0], [69.2, 211.0], [69.3, 211.0], [69.4, 212.0], [69.5, 212.0], [69.6, 212.0], [69.7, 212.0], [69.8, 214.0], [69.9, 214.0], [70.0, 214.0], [70.1, 214.0], [70.2, 214.0], [70.3, 219.0], [70.4, 219.0], [70.5, 219.0], [70.6, 219.0], [70.7, 225.0], [70.8, 225.0], [70.9, 225.0], [71.0, 225.0], [71.1, 225.0], [71.2, 235.0], [71.3, 235.0], [71.4, 235.0], [71.5, 235.0], [71.6, 249.0], [71.7, 249.0], [71.8, 249.0], [71.9, 249.0], [72.0, 270.0], [72.1, 270.0], [72.2, 270.0], [72.3, 270.0], [72.4, 270.0], [72.5, 277.0], [72.6, 277.0], [72.7, 277.0], [72.8, 277.0], [72.9, 278.0], [73.0, 278.0], [73.1, 278.0], [73.2, 278.0], [73.3, 278.0], [73.4, 282.0], [73.5, 282.0], [73.6, 282.0], [73.7, 282.0], [73.8, 283.0], [73.9, 283.0], [74.0, 283.0], [74.1, 283.0], [74.2, 283.0], [74.3, 286.0], [74.4, 286.0], [74.5, 286.0], [74.6, 286.0], [74.7, 290.0], [74.8, 290.0], [74.9, 290.0], [75.0, 290.0], [75.1, 290.0], [75.2, 293.0], [75.3, 293.0], [75.4, 293.0], [75.5, 293.0], [75.6, 293.0], [75.7, 293.0], [75.8, 293.0], [75.9, 293.0], [76.0, 296.0], [76.1, 296.0], [76.2, 296.0], [76.3, 296.0], [76.4, 296.0], [76.5, 296.0], [76.6, 296.0], [76.7, 296.0], [76.8, 296.0], [76.9, 303.0], [77.0, 303.0], [77.1, 303.0], [77.2, 303.0], [77.3, 303.0], [77.4, 305.0], [77.5, 305.0], [77.6, 305.0], [77.7, 305.0], [77.8, 307.0], [77.9, 307.0], [78.0, 307.0], [78.1, 307.0], [78.2, 307.0], [78.3, 308.0], [78.4, 308.0], [78.5, 308.0], [78.6, 308.0], [78.7, 310.0], [78.8, 310.0], [78.9, 310.0], [79.0, 310.0], [79.1, 310.0], [79.2, 310.0], [79.3, 310.0], [79.4, 310.0], [79.5, 310.0], [79.6, 315.0], [79.7, 315.0], [79.8, 315.0], [79.9, 315.0], [80.0, 317.0], [80.1, 317.0], [80.2, 317.0], [80.3, 317.0], [80.4, 317.0], [80.5, 320.0], [80.6, 320.0], [80.7, 320.0], [80.8, 320.0], [80.9, 322.0], [81.0, 322.0], [81.1, 322.0], [81.2, 322.0], [81.3, 322.0], [81.4, 325.0], [81.5, 325.0], [81.6, 325.0], [81.7, 325.0], [81.8, 331.0], [81.9, 331.0], [82.0, 331.0], [82.1, 331.0], [82.2, 331.0], [82.3, 334.0], [82.4, 334.0], [82.5, 334.0], [82.6, 334.0], [82.7, 335.0], [82.8, 335.0], [82.9, 335.0], [83.0, 335.0], [83.1, 335.0], [83.2, 336.0], [83.3, 336.0], [83.4, 336.0], [83.5, 336.0], [83.6, 336.0], [83.7, 336.0], [83.8, 336.0], [83.9, 336.0], [84.0, 340.0], [84.1, 340.0], [84.2, 340.0], [84.3, 340.0], [84.4, 340.0], [84.5, 342.0], [84.6, 342.0], [84.7, 342.0], [84.8, 342.0], [84.9, 347.0], [85.0, 347.0], [85.1, 347.0], [85.2, 347.0], [85.3, 347.0], [85.4, 348.0], [85.5, 348.0], [85.6, 348.0], [85.7, 348.0], [85.8, 356.0], [85.9, 356.0], [86.0, 356.0], [86.1, 356.0], [86.2, 356.0], [86.3, 356.0], [86.4, 356.0], [86.5, 356.0], [86.6, 356.0], [86.7, 358.0], [86.8, 358.0], [86.9, 358.0], [87.0, 358.0], [87.1, 358.0], [87.2, 358.0], [87.3, 358.0], [87.4, 358.0], [87.5, 358.0], [87.6, 364.0], [87.7, 364.0], [87.8, 364.0], [87.9, 364.0], [88.0, 366.0], [88.1, 366.0], [88.2, 366.0], [88.3, 366.0], [88.4, 366.0], [88.5, 372.0], [88.6, 372.0], [88.7, 372.0], [88.8, 372.0], [88.9, 373.0], [89.0, 373.0], [89.1, 373.0], [89.2, 373.0], [89.3, 373.0], [89.4, 379.0], [89.5, 379.0], [89.6, 379.0], [89.7, 379.0], [89.8, 380.0], [89.9, 380.0], [90.0, 380.0], [90.1, 380.0], [90.2, 380.0], [90.3, 381.0], [90.4, 381.0], [90.5, 381.0], [90.6, 381.0], [90.7, 385.0], [90.8, 385.0], [90.9, 385.0], [91.0, 385.0], [91.1, 385.0], [91.2, 390.0], [91.3, 390.0], [91.4, 390.0], [91.5, 390.0], [91.6, 405.0], [91.7, 405.0], [91.8, 405.0], [91.9, 405.0], [92.0, 418.0], [92.1, 418.0], [92.2, 418.0], [92.3, 418.0], [92.4, 418.0], [92.5, 422.0], [92.6, 422.0], [92.7, 422.0], [92.8, 422.0], [92.9, 428.0], [93.0, 428.0], [93.1, 428.0], [93.2, 428.0], [93.3, 428.0], [93.4, 449.0], [93.5, 449.0], [93.6, 449.0], [93.7, 449.0], [93.8, 450.0], [93.9, 450.0], [94.0, 450.0], [94.1, 450.0], [94.2, 450.0], [94.3, 452.0], [94.4, 452.0], [94.5, 452.0], [94.6, 452.0], [94.7, 455.0], [94.8, 455.0], [94.9, 455.0], [95.0, 455.0], [95.1, 455.0], [95.2, 460.0], [95.3, 460.0], [95.4, 460.0], [95.5, 460.0], [95.6, 461.0], [95.7, 461.0], [95.8, 461.0], [95.9, 461.0], [96.0, 480.0], [96.1, 480.0], [96.2, 480.0], [96.3, 480.0], [96.4, 480.0], [96.5, 485.0], [96.6, 485.0], [96.7, 485.0], [96.8, 485.0], [96.9, 511.0], [97.0, 511.0], [97.1, 511.0], [97.2, 511.0], [97.3, 511.0], [97.4, 518.0], [97.5, 518.0], [97.6, 518.0], [97.7, 518.0], [97.8, 546.0], [97.9, 546.0], [98.0, 546.0], [98.1, 546.0], [98.2, 546.0], [98.3, 654.0], [98.4, 654.0], [98.5, 654.0], [98.6, 654.0], [98.7, 655.0], [98.8, 655.0], [98.9, 655.0], [99.0, 655.0], [99.1, 655.0], [99.2, 677.0], [99.3, 677.0], [99.4, 677.0], [99.5, 677.0], [99.6, 722.0], [99.7, 722.0], [99.8, 722.0], [99.9, 722.0]], "isOverall": false, "label": "Modify User Info", "isController": false}, {"data": [[0.0, 70.0], [0.1, 70.0], [0.2, 70.0], [0.3, 70.0], [0.4, 70.0], [0.5, 72.0], [0.6, 72.0], [0.7, 72.0], [0.8, 72.0], [0.9, 72.0], [1.0, 72.0], [1.1, 72.0], [1.2, 72.0], [1.3, 72.0], [1.4, 72.0], [1.5, 72.0], [1.6, 72.0], [1.7, 72.0], [1.8, 95.0], [1.9, 95.0], [2.0, 95.0], [2.1, 95.0], [2.2, 95.0], [2.3, 98.0], [2.4, 98.0], [2.5, 98.0], [2.6, 98.0], [2.7, 100.0], [2.8, 100.0], [2.9, 100.0], [3.0, 100.0], [3.1, 100.0], [3.2, 101.0], [3.3, 101.0], [3.4, 101.0], [3.5, 101.0], [3.6, 103.0], [3.7, 103.0], [3.8, 103.0], [3.9, 103.0], [4.0, 103.0], [4.1, 104.0], [4.2, 104.0], [4.3, 104.0], [4.4, 104.0], [4.5, 106.0], [4.6, 106.0], [4.7, 106.0], [4.8, 106.0], [4.9, 107.0], [5.0, 107.0], [5.1, 107.0], [5.2, 107.0], [5.3, 107.0], [5.4, 107.0], [5.5, 107.0], [5.6, 107.0], [5.7, 107.0], [5.8, 108.0], [5.9, 108.0], [6.0, 108.0], [6.1, 108.0], [6.2, 108.0], [6.3, 108.0], [6.4, 108.0], [6.5, 108.0], [6.6, 108.0], [6.7, 108.0], [6.8, 108.0], [6.9, 108.0], [7.0, 108.0], [7.1, 108.0], [7.2, 110.0], [7.3, 110.0], [7.4, 110.0], [7.5, 110.0], [7.6, 110.0], [7.7, 110.0], [7.8, 110.0], [7.9, 110.0], [8.0, 110.0], [8.1, 110.0], [8.2, 110.0], [8.3, 110.0], [8.4, 110.0], [8.5, 110.0], [8.6, 110.0], [8.7, 110.0], [8.8, 110.0], [8.9, 111.0], [9.0, 111.0], [9.1, 111.0], [9.2, 111.0], [9.3, 111.0], [9.4, 111.0], [9.5, 111.0], [9.6, 111.0], [9.7, 111.0], [9.8, 111.0], [9.9, 111.0], [10.0, 111.0], [10.1, 111.0], [10.2, 111.0], [10.3, 111.0], [10.4, 111.0], [10.5, 111.0], [10.6, 111.0], [10.7, 111.0], [10.8, 111.0], [10.9, 111.0], [11.0, 111.0], [11.1, 111.0], [11.2, 111.0], [11.3, 111.0], [11.4, 111.0], [11.5, 111.0], [11.6, 112.0], [11.7, 112.0], [11.8, 112.0], [11.9, 112.0], [12.0, 112.0], [12.1, 112.0], [12.2, 112.0], [12.3, 112.0], [12.4, 112.0], [12.5, 112.0], [12.6, 112.0], [12.7, 112.0], [12.8, 112.0], [12.9, 113.0], [13.0, 113.0], [13.1, 113.0], [13.2, 113.0], [13.3, 113.0], [13.4, 113.0], [13.5, 113.0], [13.6, 113.0], [13.7, 113.0], [13.8, 113.0], [13.9, 113.0], [14.0, 113.0], [14.1, 113.0], [14.2, 113.0], [14.3, 114.0], [14.4, 114.0], [14.5, 114.0], [14.6, 114.0], [14.7, 114.0], [14.8, 114.0], [14.9, 114.0], [15.0, 114.0], [15.1, 114.0], [15.2, 114.0], [15.3, 114.0], [15.4, 114.0], [15.5, 114.0], [15.6, 115.0], [15.7, 115.0], [15.8, 115.0], [15.9, 115.0], [16.0, 115.0], [16.1, 115.0], [16.2, 115.0], [16.3, 115.0], [16.4, 115.0], [16.5, 115.0], [16.6, 115.0], [16.7, 115.0], [16.8, 115.0], [16.9, 116.0], [17.0, 116.0], [17.1, 116.0], [17.2, 116.0], [17.3, 116.0], [17.4, 116.0], [17.5, 116.0], [17.6, 116.0], [17.7, 116.0], [17.8, 117.0], [17.9, 117.0], [18.0, 117.0], [18.1, 117.0], [18.2, 117.0], [18.3, 118.0], [18.4, 118.0], [18.5, 118.0], [18.6, 118.0], [18.7, 118.0], [18.8, 118.0], [18.9, 118.0], [19.0, 118.0], [19.1, 118.0], [19.2, 118.0], [19.3, 118.0], [19.4, 118.0], [19.5, 118.0], [19.6, 119.0], [19.7, 119.0], [19.8, 119.0], [19.9, 119.0], [20.0, 119.0], [20.1, 119.0], [20.2, 119.0], [20.3, 119.0], [20.4, 119.0], [20.5, 120.0], [20.6, 120.0], [20.7, 120.0], [20.8, 120.0], [20.9, 120.0], [21.0, 120.0], [21.1, 120.0], [21.2, 120.0], [21.3, 120.0], [21.4, 121.0], [21.5, 121.0], [21.6, 121.0], [21.7, 121.0], [21.8, 121.0], [21.9, 121.0], [22.0, 121.0], [22.1, 121.0], [22.2, 121.0], [22.3, 121.0], [22.4, 121.0], [22.5, 121.0], [22.6, 121.0], [22.7, 121.0], [22.8, 121.0], [22.9, 121.0], [23.0, 121.0], [23.1, 121.0], [23.2, 121.0], [23.3, 121.0], [23.4, 121.0], [23.5, 121.0], [23.6, 121.0], [23.7, 121.0], [23.8, 121.0], [23.9, 121.0], [24.0, 122.0], [24.1, 122.0], [24.2, 122.0], [24.3, 122.0], [24.4, 122.0], [24.5, 122.0], [24.6, 122.0], [24.7, 122.0], [24.8, 122.0], [24.9, 122.0], [25.0, 122.0], [25.1, 122.0], [25.2, 122.0], [25.3, 122.0], [25.4, 122.0], [25.5, 122.0], [25.6, 122.0], [25.7, 122.0], [25.8, 122.0], [25.9, 122.0], [26.0, 122.0], [26.1, 122.0], [26.2, 122.0], [26.3, 122.0], [26.4, 122.0], [26.5, 122.0], [26.6, 122.0], [26.7, 122.0], [26.8, 122.0], [26.9, 122.0], [27.0, 122.0], [27.1, 122.0], [27.2, 124.0], [27.3, 124.0], [27.4, 124.0], [27.5, 124.0], [27.6, 124.0], [27.7, 124.0], [27.8, 124.0], [27.9, 124.0], [28.0, 125.0], [28.1, 125.0], [28.2, 125.0], [28.3, 125.0], [28.4, 125.0], [28.5, 126.0], [28.6, 126.0], [28.7, 126.0], [28.8, 126.0], [28.9, 126.0], [29.0, 126.0], [29.1, 126.0], [29.2, 126.0], [29.3, 126.0], [29.4, 126.0], [29.5, 126.0], [29.6, 126.0], [29.7, 126.0], [29.8, 126.0], [29.9, 126.0], [30.0, 126.0], [30.1, 126.0], [30.2, 126.0], [30.3, 127.0], [30.4, 127.0], [30.5, 127.0], [30.6, 127.0], [30.7, 127.0], [30.8, 127.0], [30.9, 127.0], [31.0, 127.0], [31.1, 127.0], [31.2, 128.0], [31.3, 128.0], [31.4, 128.0], [31.5, 128.0], [31.6, 129.0], [31.7, 129.0], [31.8, 129.0], [31.9, 129.0], [32.0, 130.0], [32.1, 130.0], [32.2, 130.0], [32.3, 130.0], [32.4, 130.0], [32.5, 130.0], [32.6, 130.0], [32.7, 130.0], [32.8, 130.0], [32.9, 130.0], [33.0, 130.0], [33.1, 130.0], [33.2, 130.0], [33.3, 130.0], [33.4, 131.0], [33.5, 131.0], [33.6, 131.0], [33.7, 131.0], [33.8, 132.0], [33.9, 132.0], [34.0, 132.0], [34.1, 132.0], [34.2, 132.0], [34.3, 133.0], [34.4, 133.0], [34.5, 133.0], [34.6, 133.0], [34.7, 133.0], [34.8, 133.0], [34.9, 133.0], [35.0, 133.0], [35.1, 133.0], [35.2, 134.0], [35.3, 134.0], [35.4, 134.0], [35.5, 134.0], [35.6, 134.0], [35.7, 134.0], [35.8, 134.0], [35.9, 134.0], [36.0, 135.0], [36.1, 135.0], [36.2, 135.0], [36.3, 135.0], [36.4, 135.0], [36.5, 135.0], [36.6, 135.0], [36.7, 135.0], [36.8, 135.0], [36.9, 135.0], [37.0, 135.0], [37.1, 135.0], [37.2, 135.0], [37.3, 135.0], [37.4, 135.0], [37.5, 135.0], [37.6, 135.0], [37.7, 135.0], [37.8, 136.0], [37.9, 136.0], [38.0, 136.0], [38.1, 136.0], [38.2, 136.0], [38.3, 136.0], [38.4, 136.0], [38.5, 136.0], [38.6, 136.0], [38.7, 137.0], [38.8, 137.0], [38.9, 137.0], [39.0, 137.0], [39.1, 137.0], [39.2, 137.0], [39.3, 137.0], [39.4, 137.0], [39.5, 137.0], [39.6, 139.0], [39.7, 139.0], [39.8, 139.0], [39.9, 139.0], [40.0, 139.0], [40.1, 139.0], [40.2, 139.0], [40.3, 139.0], [40.4, 139.0], [40.5, 140.0], [40.6, 140.0], [40.7, 140.0], [40.8, 140.0], [40.9, 142.0], [41.0, 142.0], [41.1, 142.0], [41.2, 142.0], [41.3, 142.0], [41.4, 142.0], [41.5, 142.0], [41.6, 142.0], [41.7, 142.0], [41.8, 142.0], [41.9, 142.0], [42.0, 142.0], [42.1, 142.0], [42.2, 142.0], [42.3, 142.0], [42.4, 142.0], [42.5, 142.0], [42.6, 142.0], [42.7, 142.0], [42.8, 142.0], [42.9, 142.0], [43.0, 142.0], [43.1, 142.0], [43.2, 144.0], [43.3, 144.0], [43.4, 144.0], [43.5, 144.0], [43.6, 144.0], [43.7, 144.0], [43.8, 144.0], [43.9, 144.0], [44.0, 144.0], [44.1, 144.0], [44.2, 144.0], [44.3, 144.0], [44.4, 144.0], [44.5, 147.0], [44.6, 147.0], [44.7, 147.0], [44.8, 147.0], [44.9, 149.0], [45.0, 149.0], [45.1, 149.0], [45.2, 149.0], [45.3, 149.0], [45.4, 149.0], [45.5, 149.0], [45.6, 149.0], [45.7, 149.0], [45.8, 150.0], [45.9, 150.0], [46.0, 150.0], [46.1, 150.0], [46.2, 150.0], [46.3, 152.0], [46.4, 152.0], [46.5, 152.0], [46.6, 152.0], [46.7, 152.0], [46.8, 152.0], [46.9, 152.0], [47.0, 152.0], [47.1, 152.0], [47.2, 153.0], [47.3, 153.0], [47.4, 153.0], [47.5, 153.0], [47.6, 153.0], [47.7, 153.0], [47.8, 153.0], [47.9, 153.0], [48.0, 153.0], [48.1, 153.0], [48.2, 153.0], [48.3, 153.0], [48.4, 153.0], [48.5, 154.0], [48.6, 154.0], [48.7, 154.0], [48.8, 154.0], [48.9, 155.0], [49.0, 155.0], [49.1, 155.0], [49.2, 155.0], [49.3, 155.0], [49.4, 155.0], [49.5, 155.0], [49.6, 155.0], [49.7, 155.0], [49.8, 155.0], [49.9, 155.0], [50.0, 155.0], [50.1, 155.0], [50.2, 155.0], [50.3, 157.0], [50.4, 157.0], [50.5, 157.0], [50.6, 157.0], [50.7, 158.0], [50.8, 158.0], [50.9, 158.0], [51.0, 158.0], [51.1, 158.0], [51.2, 159.0], [51.3, 159.0], [51.4, 159.0], [51.5, 159.0], [51.6, 160.0], [51.7, 160.0], [51.8, 160.0], [51.9, 160.0], [52.0, 161.0], [52.1, 161.0], [52.2, 161.0], [52.3, 161.0], [52.4, 161.0], [52.5, 161.0], [52.6, 161.0], [52.7, 161.0], [52.8, 161.0], [52.9, 162.0], [53.0, 162.0], [53.1, 162.0], [53.2, 162.0], [53.3, 162.0], [53.4, 163.0], [53.5, 163.0], [53.6, 163.0], [53.7, 163.0], [53.8, 164.0], [53.9, 164.0], [54.0, 164.0], [54.1, 164.0], [54.2, 164.0], [54.3, 167.0], [54.4, 167.0], [54.5, 167.0], [54.6, 167.0], [54.7, 167.0], [54.8, 167.0], [54.9, 167.0], [55.0, 167.0], [55.1, 167.0], [55.2, 170.0], [55.3, 170.0], [55.4, 170.0], [55.5, 170.0], [55.6, 171.0], [55.7, 171.0], [55.8, 171.0], [55.9, 171.0], [56.0, 171.0], [56.1, 171.0], [56.2, 171.0], [56.3, 171.0], [56.4, 171.0], [56.5, 172.0], [56.6, 172.0], [56.7, 172.0], [56.8, 172.0], [56.9, 174.0], [57.0, 174.0], [57.1, 174.0], [57.2, 174.0], [57.3, 174.0], [57.4, 174.0], [57.5, 174.0], [57.6, 174.0], [57.7, 174.0], [57.8, 174.0], [57.9, 174.0], [58.0, 174.0], [58.1, 174.0], [58.2, 174.0], [58.3, 174.0], [58.4, 174.0], [58.5, 174.0], [58.6, 174.0], [58.7, 174.0], [58.8, 174.0], [58.9, 174.0], [59.0, 174.0], [59.1, 174.0], [59.2, 177.0], [59.3, 177.0], [59.4, 177.0], [59.5, 177.0], [59.6, 178.0], [59.7, 178.0], [59.8, 178.0], [59.9, 178.0], [60.0, 180.0], [60.1, 180.0], [60.2, 180.0], [60.3, 180.0], [60.4, 180.0], [60.5, 180.0], [60.6, 180.0], [60.7, 180.0], [60.8, 180.0], [60.9, 181.0], [61.0, 181.0], [61.1, 181.0], [61.2, 181.0], [61.3, 181.0], [61.4, 182.0], [61.5, 182.0], [61.6, 182.0], [61.7, 182.0], [61.8, 183.0], [61.9, 183.0], [62.0, 183.0], [62.1, 183.0], [62.2, 183.0], [62.3, 184.0], [62.4, 184.0], [62.5, 184.0], [62.6, 184.0], [62.7, 184.0], [62.8, 184.0], [62.9, 184.0], [63.0, 184.0], [63.1, 184.0], [63.2, 184.0], [63.3, 184.0], [63.4, 184.0], [63.5, 184.0], [63.6, 188.0], [63.7, 188.0], [63.8, 188.0], [63.9, 188.0], [64.0, 191.0], [64.1, 191.0], [64.2, 191.0], [64.3, 191.0], [64.4, 191.0], [64.5, 191.0], [64.6, 191.0], [64.7, 191.0], [64.8, 191.0], [64.9, 193.0], [65.0, 193.0], [65.1, 193.0], [65.2, 193.0], [65.3, 193.0], [65.4, 195.0], [65.5, 195.0], [65.6, 195.0], [65.7, 195.0], [65.8, 199.0], [65.9, 199.0], [66.0, 199.0], [66.1, 199.0], [66.2, 199.0], [66.3, 200.0], [66.4, 200.0], [66.5, 200.0], [66.6, 200.0], [66.7, 206.0], [66.8, 206.0], [66.9, 206.0], [67.0, 206.0], [67.1, 206.0], [67.2, 207.0], [67.3, 207.0], [67.4, 207.0], [67.5, 207.0], [67.6, 208.0], [67.7, 208.0], [67.8, 208.0], [67.9, 208.0], [68.0, 208.0], [68.1, 208.0], [68.2, 208.0], [68.3, 208.0], [68.4, 208.0], [68.5, 209.0], [68.6, 209.0], [68.7, 209.0], [68.8, 209.0], [68.9, 211.0], [69.0, 211.0], [69.1, 211.0], [69.2, 211.0], [69.3, 211.0], [69.4, 212.0], [69.5, 212.0], [69.6, 212.0], [69.7, 212.0], [69.8, 214.0], [69.9, 214.0], [70.0, 214.0], [70.1, 214.0], [70.2, 214.0], [70.3, 219.0], [70.4, 219.0], [70.5, 219.0], [70.6, 219.0], [70.7, 225.0], [70.8, 225.0], [70.9, 225.0], [71.0, 225.0], [71.1, 225.0], [71.2, 235.0], [71.3, 235.0], [71.4, 235.0], [71.5, 235.0], [71.6, 249.0], [71.7, 249.0], [71.8, 249.0], [71.9, 249.0], [72.0, 270.0], [72.1, 270.0], [72.2, 270.0], [72.3, 270.0], [72.4, 270.0], [72.5, 277.0], [72.6, 277.0], [72.7, 277.0], [72.8, 277.0], [72.9, 278.0], [73.0, 278.0], [73.1, 278.0], [73.2, 278.0], [73.3, 278.0], [73.4, 282.0], [73.5, 282.0], [73.6, 282.0], [73.7, 282.0], [73.8, 283.0], [73.9, 283.0], [74.0, 283.0], [74.1, 283.0], [74.2, 283.0], [74.3, 286.0], [74.4, 286.0], [74.5, 286.0], [74.6, 286.0], [74.7, 290.0], [74.8, 290.0], [74.9, 290.0], [75.0, 290.0], [75.1, 290.0], [75.2, 293.0], [75.3, 293.0], [75.4, 293.0], [75.5, 293.0], [75.6, 293.0], [75.7, 293.0], [75.8, 293.0], [75.9, 293.0], [76.0, 296.0], [76.1, 296.0], [76.2, 296.0], [76.3, 296.0], [76.4, 296.0], [76.5, 296.0], [76.6, 296.0], [76.7, 296.0], [76.8, 296.0], [76.9, 303.0], [77.0, 303.0], [77.1, 303.0], [77.2, 303.0], [77.3, 303.0], [77.4, 305.0], [77.5, 305.0], [77.6, 305.0], [77.7, 305.0], [77.8, 307.0], [77.9, 307.0], [78.0, 307.0], [78.1, 307.0], [78.2, 307.0], [78.3, 308.0], [78.4, 308.0], [78.5, 308.0], [78.6, 308.0], [78.7, 310.0], [78.8, 310.0], [78.9, 310.0], [79.0, 310.0], [79.1, 310.0], [79.2, 310.0], [79.3, 310.0], [79.4, 310.0], [79.5, 310.0], [79.6, 315.0], [79.7, 315.0], [79.8, 315.0], [79.9, 315.0], [80.0, 317.0], [80.1, 317.0], [80.2, 317.0], [80.3, 317.0], [80.4, 317.0], [80.5, 320.0], [80.6, 320.0], [80.7, 320.0], [80.8, 320.0], [80.9, 322.0], [81.0, 322.0], [81.1, 322.0], [81.2, 322.0], [81.3, 322.0], [81.4, 325.0], [81.5, 325.0], [81.6, 325.0], [81.7, 325.0], [81.8, 331.0], [81.9, 331.0], [82.0, 331.0], [82.1, 331.0], [82.2, 331.0], [82.3, 334.0], [82.4, 334.0], [82.5, 334.0], [82.6, 334.0], [82.7, 335.0], [82.8, 335.0], [82.9, 335.0], [83.0, 335.0], [83.1, 335.0], [83.2, 336.0], [83.3, 336.0], [83.4, 336.0], [83.5, 336.0], [83.6, 336.0], [83.7, 336.0], [83.8, 336.0], [83.9, 336.0], [84.0, 340.0], [84.1, 340.0], [84.2, 340.0], [84.3, 340.0], [84.4, 340.0], [84.5, 342.0], [84.6, 342.0], [84.7, 342.0], [84.8, 342.0], [84.9, 347.0], [85.0, 347.0], [85.1, 347.0], [85.2, 347.0], [85.3, 347.0], [85.4, 348.0], [85.5, 348.0], [85.6, 348.0], [85.7, 348.0], [85.8, 356.0], [85.9, 356.0], [86.0, 356.0], [86.1, 356.0], [86.2, 356.0], [86.3, 356.0], [86.4, 356.0], [86.5, 356.0], [86.6, 356.0], [86.7, 358.0], [86.8, 358.0], [86.9, 358.0], [87.0, 358.0], [87.1, 358.0], [87.2, 358.0], [87.3, 358.0], [87.4, 358.0], [87.5, 358.0], [87.6, 364.0], [87.7, 364.0], [87.8, 364.0], [87.9, 364.0], [88.0, 366.0], [88.1, 366.0], [88.2, 366.0], [88.3, 366.0], [88.4, 366.0], [88.5, 372.0], [88.6, 372.0], [88.7, 372.0], [88.8, 372.0], [88.9, 373.0], [89.0, 373.0], [89.1, 373.0], [89.2, 373.0], [89.3, 373.0], [89.4, 379.0], [89.5, 379.0], [89.6, 379.0], [89.7, 379.0], [89.8, 380.0], [89.9, 380.0], [90.0, 380.0], [90.1, 380.0], [90.2, 380.0], [90.3, 381.0], [90.4, 381.0], [90.5, 381.0], [90.6, 381.0], [90.7, 385.0], [90.8, 385.0], [90.9, 385.0], [91.0, 385.0], [91.1, 385.0], [91.2, 390.0], [91.3, 390.0], [91.4, 390.0], [91.5, 390.0], [91.6, 405.0], [91.7, 405.0], [91.8, 405.0], [91.9, 405.0], [92.0, 418.0], [92.1, 418.0], [92.2, 418.0], [92.3, 418.0], [92.4, 418.0], [92.5, 422.0], [92.6, 422.0], [92.7, 422.0], [92.8, 422.0], [92.9, 428.0], [93.0, 428.0], [93.1, 428.0], [93.2, 428.0], [93.3, 428.0], [93.4, 449.0], [93.5, 449.0], [93.6, 449.0], [93.7, 449.0], [93.8, 450.0], [93.9, 450.0], [94.0, 450.0], [94.1, 450.0], [94.2, 450.0], [94.3, 452.0], [94.4, 452.0], [94.5, 452.0], [94.6, 452.0], [94.7, 455.0], [94.8, 455.0], [94.9, 455.0], [95.0, 455.0], [95.1, 455.0], [95.2, 460.0], [95.3, 460.0], [95.4, 460.0], [95.5, 460.0], [95.6, 461.0], [95.7, 461.0], [95.8, 461.0], [95.9, 461.0], [96.0, 480.0], [96.1, 480.0], [96.2, 480.0], [96.3, 480.0], [96.4, 480.0], [96.5, 485.0], [96.6, 485.0], [96.7, 485.0], [96.8, 485.0], [96.9, 511.0], [97.0, 511.0], [97.1, 511.0], [97.2, 511.0], [97.3, 511.0], [97.4, 518.0], [97.5, 518.0], [97.6, 518.0], [97.7, 518.0], [97.8, 546.0], [97.9, 546.0], [98.0, 546.0], [98.1, 546.0], [98.2, 546.0], [98.3, 654.0], [98.4, 654.0], [98.5, 654.0], [98.6, 654.0], [98.7, 655.0], [98.8, 655.0], [98.9, 655.0], [99.0, 655.0], [99.1, 655.0], [99.2, 677.0], [99.3, 677.0], [99.4, 677.0], [99.5, 677.0], [99.6, 722.0], [99.7, 722.0], [99.8, 722.0], [99.9, 722.0]], "isOverall": false, "label": "Modify User Infomation", "isController": true}, {"data": [[0.0, 165.0], [0.1, 165.0], [0.2, 165.0], [0.3, 165.0], [0.4, 206.0], [0.5, 206.0], [0.6, 206.0], [0.7, 206.0], [0.8, 284.0], [0.9, 284.0], [1.0, 284.0], [1.1, 284.0], [1.2, 480.0], [1.3, 480.0], [1.4, 480.0], [1.5, 486.0], [1.6, 486.0], [1.7, 486.0], [1.8, 486.0], [1.9, 565.0], [2.0, 565.0], [2.1, 565.0], [2.2, 565.0], [2.3, 691.0], [2.4, 691.0], [2.5, 691.0], [2.6, 872.0], [2.7, 872.0], [2.8, 872.0], [2.9, 872.0], [3.0, 887.0], [3.1, 887.0], [3.2, 887.0], [3.3, 887.0], [3.4, 948.0], [3.5, 948.0], [3.6, 948.0], [3.7, 972.0], [3.8, 972.0], [3.9, 972.0], [4.0, 972.0], [4.1, 1022.0], [4.2, 1022.0], [4.3, 1022.0], [4.4, 1022.0], [4.5, 1215.0], [4.6, 1215.0], [4.7, 1215.0], [4.8, 1309.0], [4.9, 1309.0], [5.0, 1309.0], [5.1, 1309.0], [5.2, 1398.0], [5.3, 1398.0], [5.4, 1398.0], [5.5, 1398.0], [5.6, 1418.0], [5.7, 1418.0], [5.8, 1418.0], [5.9, 1567.0], [6.0, 1567.0], [6.1, 1567.0], [6.2, 1567.0], [6.3, 1637.0], [6.4, 1637.0], [6.5, 1637.0], [6.6, 1637.0], [6.7, 1889.0], [6.8, 1889.0], [6.9, 1889.0], [7.0, 1915.0], [7.1, 1915.0], [7.2, 1915.0], [7.3, 1915.0], [7.4, 1919.0], [7.5, 1919.0], [7.6, 1919.0], [7.7, 1919.0], [7.8, 2005.0], [7.9, 2005.0], [8.0, 2005.0], [8.1, 2120.0], [8.2, 2120.0], [8.3, 2120.0], [8.4, 2120.0], [8.5, 2179.0], [8.6, 2179.0], [8.7, 2179.0], [8.8, 2179.0], [8.9, 2181.0], [9.0, 2181.0], [9.1, 2181.0], [9.2, 2238.0], [9.3, 2238.0], [9.4, 2238.0], [9.5, 2238.0], [9.6, 2257.0], [9.7, 2257.0], [9.8, 2257.0], [9.9, 2257.0], [10.0, 2318.0], [10.1, 2318.0], [10.2, 2318.0], [10.3, 2654.0], [10.4, 2654.0], [10.5, 2654.0], [10.6, 2654.0], [10.7, 2662.0], [10.8, 2662.0], [10.9, 2662.0], [11.0, 2662.0], [11.1, 3075.0], [11.2, 3075.0], [11.3, 3075.0], [11.4, 3110.0], [11.5, 3110.0], [11.6, 3110.0], [11.7, 3110.0], [11.8, 3125.0], [11.9, 3125.0], [12.0, 3125.0], [12.1, 3125.0], [12.2, 3139.0], [12.3, 3139.0], [12.4, 3139.0], [12.5, 3189.0], [12.6, 3189.0], [12.7, 3189.0], [12.8, 3189.0], [12.9, 3369.0], [13.0, 3369.0], [13.1, 3369.0], [13.2, 3369.0], [13.3, 3396.0], [13.4, 3396.0], [13.5, 3396.0], [13.6, 3396.0], [13.7, 3482.0], [13.8, 3482.0], [13.9, 3482.0], [14.0, 3505.0], [14.1, 3505.0], [14.2, 3505.0], [14.3, 3505.0], [14.4, 3546.0], [14.5, 3546.0], [14.6, 3546.0], [14.7, 3546.0], [14.8, 3626.0], [14.9, 3626.0], [15.0, 3626.0], [15.1, 3634.0], [15.2, 3634.0], [15.3, 3634.0], [15.4, 3634.0], [15.5, 3739.0], [15.6, 3739.0], [15.7, 3739.0], [15.8, 3739.0], [15.9, 3739.0], [16.0, 3739.0], [16.1, 3739.0], [16.2, 3751.0], [16.3, 3751.0], [16.4, 3751.0], [16.5, 3751.0], [16.6, 3754.0], [16.7, 3754.0], [16.8, 3754.0], [16.9, 3754.0], [17.0, 3758.0], [17.1, 3758.0], [17.2, 3758.0], [17.3, 3769.0], [17.4, 3769.0], [17.5, 3769.0], [17.6, 3769.0], [17.7, 3797.0], [17.8, 3797.0], [17.9, 3797.0], [18.0, 3797.0], [18.1, 3799.0], [18.2, 3799.0], [18.3, 3799.0], [18.4, 3804.0], [18.5, 3804.0], [18.6, 3804.0], [18.7, 3804.0], [18.8, 3805.0], [18.9, 3805.0], [19.0, 3805.0], [19.1, 3805.0], [19.2, 3806.0], [19.3, 3806.0], [19.4, 3806.0], [19.5, 3820.0], [19.6, 3820.0], [19.7, 3820.0], [19.8, 3820.0], [19.9, 3872.0], [20.0, 3872.0], [20.1, 3872.0], [20.2, 3872.0], [20.3, 3892.0], [20.4, 3892.0], [20.5, 3892.0], [20.6, 3901.0], [20.7, 3901.0], [20.8, 3901.0], [20.9, 3901.0], [21.0, 3915.0], [21.1, 3915.0], [21.2, 3915.0], [21.3, 3915.0], [21.4, 3978.0], [21.5, 3978.0], [21.6, 3978.0], [21.7, 3979.0], [21.8, 3979.0], [21.9, 3979.0], [22.0, 3979.0], [22.1, 3983.0], [22.2, 3983.0], [22.3, 3983.0], [22.4, 3983.0], [22.5, 3995.0], [22.6, 3995.0], [22.7, 3995.0], [22.8, 3997.0], [22.9, 3997.0], [23.0, 3997.0], [23.1, 3997.0], [23.2, 4004.0], [23.3, 4004.0], [23.4, 4004.0], [23.5, 4004.0], [23.6, 4015.0], [23.7, 4015.0], [23.8, 4015.0], [23.9, 4026.0], [24.0, 4026.0], [24.1, 4026.0], [24.2, 4026.0], [24.3, 4026.0], [24.4, 4026.0], [24.5, 4026.0], [24.6, 4026.0], [24.7, 4038.0], [24.8, 4038.0], [24.9, 4038.0], [25.0, 4040.0], [25.1, 4040.0], [25.2, 4040.0], [25.3, 4040.0], [25.4, 4045.0], [25.5, 4045.0], [25.6, 4045.0], [25.7, 4045.0], [25.8, 4053.0], [25.9, 4053.0], [26.0, 4053.0], [26.1, 4053.0], [26.2, 4058.0], [26.3, 4058.0], [26.4, 4058.0], [26.5, 4062.0], [26.6, 4062.0], [26.7, 4062.0], [26.8, 4062.0], [26.9, 4071.0], [27.0, 4071.0], [27.1, 4071.0], [27.2, 4071.0], [27.3, 4076.0], [27.4, 4076.0], [27.5, 4076.0], [27.6, 4076.0], [27.7, 4076.0], [27.8, 4076.0], [27.9, 4076.0], [28.0, 4080.0], [28.1, 4080.0], [28.2, 4080.0], [28.3, 4080.0], [28.4, 4089.0], [28.5, 4089.0], [28.6, 4089.0], [28.7, 4095.0], [28.8, 4095.0], [28.9, 4095.0], [29.0, 4095.0], [29.1, 4103.0], [29.2, 4103.0], [29.3, 4103.0], [29.4, 4103.0], [29.5, 4105.0], [29.6, 4105.0], [29.7, 4105.0], [29.8, 4106.0], [29.9, 4106.0], [30.0, 4106.0], [30.1, 4106.0], [30.2, 4107.0], [30.3, 4107.0], [30.4, 4107.0], [30.5, 4107.0], [30.6, 4115.0], [30.7, 4115.0], [30.8, 4115.0], [30.9, 4118.0], [31.0, 4118.0], [31.1, 4118.0], [31.2, 4118.0], [31.3, 4143.0], [31.4, 4143.0], [31.5, 4143.0], [31.6, 4143.0], [31.7, 4147.0], [31.8, 4147.0], [31.9, 4147.0], [32.0, 4170.0], [32.1, 4170.0], [32.2, 4170.0], [32.3, 4170.0], [32.4, 4176.0], [32.5, 4176.0], [32.6, 4176.0], [32.7, 4176.0], [32.8, 4177.0], [32.9, 4177.0], [33.0, 4177.0], [33.1, 4180.0], [33.2, 4180.0], [33.3, 4180.0], [33.4, 4180.0], [33.5, 4181.0], [33.6, 4181.0], [33.7, 4181.0], [33.8, 4181.0], [33.9, 4192.0], [34.0, 4192.0], [34.1, 4192.0], [34.2, 4192.0], [34.3, 4192.0], [34.4, 4192.0], [34.5, 4192.0], [34.6, 4193.0], [34.7, 4193.0], [34.8, 4193.0], [34.9, 4193.0], [35.0, 4199.0], [35.1, 4199.0], [35.2, 4199.0], [35.3, 4210.0], [35.4, 4210.0], [35.5, 4210.0], [35.6, 4210.0], [35.7, 4214.0], [35.8, 4214.0], [35.9, 4214.0], [36.0, 4214.0], [36.1, 4219.0], [36.2, 4219.0], [36.3, 4219.0], [36.4, 4220.0], [36.5, 4220.0], [36.6, 4220.0], [36.7, 4220.0], [36.8, 4231.0], [36.9, 4231.0], [37.0, 4231.0], [37.1, 4231.0], [37.2, 4232.0], [37.3, 4232.0], [37.4, 4232.0], [37.5, 4233.0], [37.6, 4233.0], [37.7, 4233.0], [37.8, 4233.0], [37.9, 4239.0], [38.0, 4239.0], [38.1, 4239.0], [38.2, 4239.0], [38.3, 4245.0], [38.4, 4245.0], [38.5, 4245.0], [38.6, 4245.0], [38.7, 4254.0], [38.8, 4254.0], [38.9, 4254.0], [39.0, 4257.0], [39.1, 4257.0], [39.2, 4257.0], [39.3, 4257.0], [39.4, 4270.0], [39.5, 4270.0], [39.6, 4270.0], [39.7, 4270.0], [39.8, 4272.0], [39.9, 4272.0], [40.0, 4272.0], [40.1, 4274.0], [40.2, 4274.0], [40.3, 4274.0], [40.4, 4274.0], [40.5, 4280.0], [40.6, 4280.0], [40.7, 4280.0], [40.8, 4280.0], [40.9, 4281.0], [41.0, 4281.0], [41.1, 4281.0], [41.2, 4285.0], [41.3, 4285.0], [41.4, 4285.0], [41.5, 4285.0], [41.6, 4288.0], [41.7, 4288.0], [41.8, 4288.0], [41.9, 4288.0], [42.0, 4290.0], [42.1, 4290.0], [42.2, 4290.0], [42.3, 4291.0], [42.4, 4291.0], [42.5, 4291.0], [42.6, 4291.0], [42.7, 4294.0], [42.8, 4294.0], [42.9, 4294.0], [43.0, 4294.0], [43.1, 4304.0], [43.2, 4304.0], [43.3, 4304.0], [43.4, 4307.0], [43.5, 4307.0], [43.6, 4307.0], [43.7, 4307.0], [43.8, 4317.0], [43.9, 4317.0], [44.0, 4317.0], [44.1, 4317.0], [44.2, 4318.0], [44.3, 4318.0], [44.4, 4318.0], [44.5, 4321.0], [44.6, 4321.0], [44.7, 4321.0], [44.8, 4321.0], [44.9, 4328.0], [45.0, 4328.0], [45.1, 4328.0], [45.2, 4328.0], [45.3, 4331.0], [45.4, 4331.0], [45.5, 4331.0], [45.6, 4337.0], [45.7, 4337.0], [45.8, 4337.0], [45.9, 4337.0], [46.0, 4343.0], [46.1, 4343.0], [46.2, 4343.0], [46.3, 4343.0], [46.4, 4358.0], [46.5, 4358.0], [46.6, 4358.0], [46.7, 4358.0], [46.8, 4358.0], [46.9, 4358.0], [47.0, 4358.0], [47.1, 4363.0], [47.2, 4363.0], [47.3, 4363.0], [47.4, 4363.0], [47.5, 4371.0], [47.6, 4371.0], [47.7, 4371.0], [47.8, 4378.0], [47.9, 4378.0], [48.0, 4378.0], [48.1, 4378.0], [48.2, 4395.0], [48.3, 4395.0], [48.4, 4395.0], [48.5, 4395.0], [48.6, 4399.0], [48.7, 4399.0], [48.8, 4399.0], [48.9, 4404.0], [49.0, 4404.0], [49.1, 4404.0], [49.2, 4404.0], [49.3, 4406.0], [49.4, 4406.0], [49.5, 4406.0], [49.6, 4406.0], [49.7, 4413.0], [49.8, 4413.0], [49.9, 4413.0], [50.0, 4414.0], [50.1, 4414.0], [50.2, 4414.0], [50.3, 4414.0], [50.4, 4419.0], [50.5, 4419.0], [50.6, 4419.0], [50.7, 4419.0], [50.8, 4420.0], [50.9, 4420.0], [51.0, 4420.0], [51.1, 4420.0], [51.2, 4422.0], [51.3, 4422.0], [51.4, 4422.0], [51.5, 4426.0], [51.6, 4426.0], [51.7, 4426.0], [51.8, 4426.0], [51.9, 4429.0], [52.0, 4429.0], [52.1, 4429.0], [52.2, 4429.0], [52.3, 4430.0], [52.4, 4430.0], [52.5, 4430.0], [52.6, 4434.0], [52.7, 4434.0], [52.8, 4434.0], [52.9, 4434.0], [53.0, 4440.0], [53.1, 4440.0], [53.2, 4440.0], [53.3, 4440.0], [53.4, 4441.0], [53.5, 4441.0], [53.6, 4441.0], [53.7, 4442.0], [53.8, 4442.0], [53.9, 4442.0], [54.0, 4442.0], [54.1, 4448.0], [54.2, 4448.0], [54.3, 4448.0], [54.4, 4448.0], [54.5, 4450.0], [54.6, 4450.0], [54.7, 4450.0], [54.8, 4459.0], [54.9, 4459.0], [55.0, 4459.0], [55.1, 4459.0], [55.2, 4461.0], [55.3, 4461.0], [55.4, 4461.0], [55.5, 4461.0], [55.6, 4465.0], [55.7, 4465.0], [55.8, 4465.0], [55.9, 4471.0], [56.0, 4471.0], [56.1, 4471.0], [56.2, 4471.0], [56.3, 4478.0], [56.4, 4478.0], [56.5, 4478.0], [56.6, 4478.0], [56.7, 4481.0], [56.8, 4481.0], [56.9, 4481.0], [57.0, 4483.0], [57.1, 4483.0], [57.2, 4483.0], [57.3, 4483.0], [57.4, 4486.0], [57.5, 4486.0], [57.6, 4486.0], [57.7, 4486.0], [57.8, 4494.0], [57.9, 4494.0], [58.0, 4494.0], [58.1, 4495.0], [58.2, 4495.0], [58.3, 4495.0], [58.4, 4495.0], [58.5, 4496.0], [58.6, 4496.0], [58.7, 4496.0], [58.8, 4496.0], [58.9, 4497.0], [59.0, 4497.0], [59.1, 4497.0], [59.2, 4506.0], [59.3, 4506.0], [59.4, 4506.0], [59.5, 4506.0], [59.6, 4507.0], [59.7, 4507.0], [59.8, 4507.0], [59.9, 4507.0], [60.0, 4521.0], [60.1, 4521.0], [60.2, 4521.0], [60.3, 4523.0], [60.4, 4523.0], [60.5, 4523.0], [60.6, 4523.0], [60.7, 4524.0], [60.8, 4524.0], [60.9, 4524.0], [61.0, 4524.0], [61.1, 4526.0], [61.2, 4526.0], [61.3, 4526.0], [61.4, 4527.0], [61.5, 4527.0], [61.6, 4527.0], [61.7, 4527.0], [61.8, 4528.0], [61.9, 4528.0], [62.0, 4528.0], [62.1, 4528.0], [62.2, 4540.0], [62.3, 4540.0], [62.4, 4540.0], [62.5, 4544.0], [62.6, 4544.0], [62.7, 4544.0], [62.8, 4544.0], [62.9, 4545.0], [63.0, 4545.0], [63.1, 4545.0], [63.2, 4545.0], [63.3, 4551.0], [63.4, 4551.0], [63.5, 4551.0], [63.6, 4551.0], [63.7, 4552.0], [63.8, 4552.0], [63.9, 4552.0], [64.0, 4553.0], [64.1, 4553.0], [64.2, 4553.0], [64.3, 4553.0], [64.4, 4567.0], [64.5, 4567.0], [64.6, 4567.0], [64.7, 4567.0], [64.8, 4568.0], [64.9, 4568.0], [65.0, 4568.0], [65.1, 4573.0], [65.2, 4573.0], [65.3, 4573.0], [65.4, 4573.0], [65.5, 4573.0], [65.6, 4573.0], [65.7, 4573.0], [65.8, 4573.0], [65.9, 4573.0], [66.0, 4573.0], [66.1, 4573.0], [66.2, 4575.0], [66.3, 4575.0], [66.4, 4575.0], [66.5, 4575.0], [66.6, 4577.0], [66.7, 4577.0], [66.8, 4577.0], [66.9, 4577.0], [67.0, 4577.0], [67.1, 4577.0], [67.2, 4577.0], [67.3, 4587.0], [67.4, 4587.0], [67.5, 4587.0], [67.6, 4587.0], [67.7, 4588.0], [67.8, 4588.0], [67.9, 4588.0], [68.0, 4588.0], [68.1, 4593.0], [68.2, 4593.0], [68.3, 4593.0], [68.4, 4593.0], [68.5, 4593.0], [68.6, 4593.0], [68.7, 4593.0], [68.8, 4594.0], [68.9, 4594.0], [69.0, 4594.0], [69.1, 4594.0], [69.2, 4600.0], [69.3, 4600.0], [69.4, 4600.0], [69.5, 4604.0], [69.6, 4604.0], [69.7, 4604.0], [69.8, 4604.0], [69.9, 4604.0], [70.0, 4604.0], [70.1, 4604.0], [70.2, 4604.0], [70.3, 4609.0], [70.4, 4609.0], [70.5, 4609.0], [70.6, 4614.0], [70.7, 4614.0], [70.8, 4614.0], [70.9, 4614.0], [71.0, 4616.0], [71.1, 4616.0], [71.2, 4616.0], [71.3, 4616.0], [71.4, 4621.0], [71.5, 4621.0], [71.6, 4621.0], [71.7, 4632.0], [71.8, 4632.0], [71.9, 4632.0], [72.0, 4632.0], [72.1, 4640.0], [72.2, 4640.0], [72.3, 4640.0], [72.4, 4640.0], [72.5, 4640.0], [72.6, 4640.0], [72.7, 4640.0], [72.8, 4641.0], [72.9, 4641.0], [73.0, 4641.0], [73.1, 4641.0], [73.2, 4645.0], [73.3, 4645.0], [73.4, 4645.0], [73.5, 4645.0], [73.6, 4656.0], [73.7, 4656.0], [73.8, 4656.0], [73.9, 4661.0], [74.0, 4661.0], [74.1, 4661.0], [74.2, 4661.0], [74.3, 4661.0], [74.4, 4661.0], [74.5, 4661.0], [74.6, 4661.0], [74.7, 4662.0], [74.8, 4662.0], [74.9, 4662.0], [75.0, 4662.0], [75.1, 4670.0], [75.2, 4670.0], [75.3, 4670.0], [75.4, 4671.0], [75.5, 4671.0], [75.6, 4671.0], [75.7, 4671.0], [75.8, 4675.0], [75.9, 4675.0], [76.0, 4675.0], [76.1, 4675.0], [76.2, 4675.0], [76.3, 4675.0], [76.4, 4675.0], [76.5, 4676.0], [76.6, 4676.0], [76.7, 4676.0], [76.8, 4676.0], [76.9, 4682.0], [77.0, 4682.0], [77.1, 4682.0], [77.2, 4682.0], [77.3, 4682.0], [77.4, 4682.0], [77.5, 4682.0], [77.6, 4685.0], [77.7, 4685.0], [77.8, 4685.0], [77.9, 4685.0], [78.0, 4689.0], [78.1, 4689.0], [78.2, 4689.0], [78.3, 4689.0], [78.4, 4690.0], [78.5, 4690.0], [78.6, 4690.0], [78.7, 4690.0], [78.8, 4690.0], [78.9, 4690.0], [79.0, 4690.0], [79.1, 4693.0], [79.2, 4693.0], [79.3, 4693.0], [79.4, 4693.0], [79.5, 4696.0], [79.6, 4696.0], [79.7, 4696.0], [79.8, 4696.0], [79.9, 4696.0], [80.0, 4696.0], [80.1, 4696.0], [80.2, 4701.0], [80.3, 4701.0], [80.4, 4701.0], [80.5, 4701.0], [80.6, 4704.0], [80.7, 4704.0], [80.8, 4704.0], [80.9, 4708.0], [81.0, 4708.0], [81.1, 4708.0], [81.2, 4708.0], [81.3, 4718.0], [81.4, 4718.0], [81.5, 4718.0], [81.6, 4718.0], [81.7, 4719.0], [81.8, 4719.0], [81.9, 4719.0], [82.0, 4732.0], [82.1, 4732.0], [82.2, 4732.0], [82.3, 4732.0], [82.4, 4738.0], [82.5, 4738.0], [82.6, 4738.0], [82.7, 4738.0], [82.8, 4742.0], [82.9, 4742.0], [83.0, 4742.0], [83.1, 4742.0], [83.2, 4742.0], [83.3, 4742.0], [83.4, 4742.0], [83.5, 4742.0], [83.6, 4742.0], [83.7, 4742.0], [83.8, 4742.0], [83.9, 4746.0], [84.0, 4746.0], [84.1, 4746.0], [84.2, 4749.0], [84.3, 4749.0], [84.4, 4749.0], [84.5, 4749.0], [84.6, 4765.0], [84.7, 4765.0], [84.8, 4765.0], [84.9, 4765.0], [85.0, 4773.0], [85.1, 4773.0], [85.2, 4773.0], [85.3, 4787.0], [85.4, 4787.0], [85.5, 4787.0], [85.6, 4787.0], [85.7, 4793.0], [85.8, 4793.0], [85.9, 4793.0], [86.0, 4793.0], [86.1, 4794.0], [86.2, 4794.0], [86.3, 4794.0], [86.4, 4800.0], [86.5, 4800.0], [86.6, 4800.0], [86.7, 4800.0], [86.8, 4830.0], [86.9, 4830.0], [87.0, 4830.0], [87.1, 4830.0], [87.2, 4833.0], [87.3, 4833.0], [87.4, 4833.0], [87.5, 4833.0], [87.6, 4848.0], [87.7, 4848.0], [87.8, 4848.0], [87.9, 4858.0], [88.0, 4858.0], [88.1, 4858.0], [88.2, 4858.0], [88.3, 4866.0], [88.4, 4866.0], [88.5, 4866.0], [88.6, 4866.0], [88.7, 4868.0], [88.8, 4868.0], [88.9, 4868.0], [89.0, 4881.0], [89.1, 4881.0], [89.2, 4881.0], [89.3, 4881.0], [89.4, 4889.0], [89.5, 4889.0], [89.6, 4889.0], [89.7, 4889.0], [89.8, 4890.0], [89.9, 4890.0], [90.0, 4890.0], [90.1, 4894.0], [90.2, 4894.0], [90.3, 4894.0], [90.4, 4894.0], [90.5, 4903.0], [90.6, 4903.0], [90.7, 4903.0], [90.8, 4903.0], [90.9, 4942.0], [91.0, 4942.0], [91.1, 4942.0], [91.2, 4960.0], [91.3, 4960.0], [91.4, 4960.0], [91.5, 4960.0], [91.6, 4961.0], [91.7, 4961.0], [91.8, 4961.0], [91.9, 4961.0], [92.0, 4962.0], [92.1, 4962.0], [92.2, 4962.0], [92.3, 4973.0], [92.4, 4973.0], [92.5, 4973.0], [92.6, 4973.0], [92.7, 4981.0], [92.8, 4981.0], [92.9, 4981.0], [93.0, 4981.0], [93.1, 5012.0], [93.2, 5012.0], [93.3, 5012.0], [93.4, 5017.0], [93.5, 5017.0], [93.6, 5017.0], [93.7, 5017.0], [93.8, 5025.0], [93.9, 5025.0], [94.0, 5025.0], [94.1, 5025.0], [94.2, 5030.0], [94.3, 5030.0], [94.4, 5030.0], [94.5, 5034.0], [94.6, 5034.0], [94.7, 5034.0], [94.8, 5034.0], [94.9, 5048.0], [95.0, 5048.0], [95.1, 5048.0], [95.2, 5048.0], [95.3, 5084.0], [95.4, 5084.0], [95.5, 5084.0], [95.6, 5087.0], [95.7, 5087.0], [95.8, 5087.0], [95.9, 5087.0], [96.0, 5091.0], [96.1, 5091.0], [96.2, 5091.0], [96.3, 5091.0], [96.4, 5102.0], [96.5, 5102.0], [96.6, 5102.0], [96.7, 5115.0], [96.8, 5115.0], [96.9, 5115.0], [97.0, 5115.0], [97.1, 5128.0], [97.2, 5128.0], [97.3, 5128.0], [97.4, 5128.0], [97.5, 5133.0], [97.6, 5133.0], [97.7, 5133.0], [97.8, 5178.0], [97.9, 5178.0], [98.0, 5178.0], [98.1, 5178.0], [98.2, 5208.0], [98.3, 5208.0], [98.4, 5208.0], [98.5, 5208.0], [98.6, 5252.0], [98.7, 5252.0], [98.8, 5252.0], [98.9, 5360.0], [99.0, 5360.0], [99.1, 5360.0], [99.2, 5360.0], [99.3, 5408.0], [99.4, 5408.0], [99.5, 5408.0], [99.6, 5408.0], [99.7, 5476.0], [99.8, 5476.0], [99.9, 5476.0], [100.0, 5476.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 317.0], [0.1, 317.0], [0.2, 317.0], [0.3, 317.0], [0.4, 613.0], [0.5, 613.0], [0.6, 613.0], [0.7, 613.0], [0.8, 1021.0], [0.9, 1021.0], [1.0, 1021.0], [1.1, 1021.0], [1.2, 1656.0], [1.3, 1656.0], [1.4, 1656.0], [1.5, 1656.0], [1.6, 1942.0], [1.7, 1942.0], [1.8, 1942.0], [1.9, 2181.0], [2.0, 2181.0], [2.1, 2181.0], [2.2, 2181.0], [2.3, 2583.0], [2.4, 2583.0], [2.5, 2583.0], [2.6, 2583.0], [2.7, 2773.0], [2.8, 2773.0], [2.9, 2773.0], [3.0, 2773.0], [3.1, 3148.0], [3.2, 3148.0], [3.3, 3148.0], [3.4, 3148.0], [3.5, 3417.0], [3.6, 3417.0], [3.7, 3417.0], [3.8, 3491.0], [3.9, 3491.0], [4.0, 3491.0], [4.1, 3491.0], [4.2, 3643.0], [4.3, 3643.0], [4.4, 3643.0], [4.5, 3643.0], [4.6, 3873.0], [4.7, 3873.0], [4.8, 3873.0], [4.9, 3873.0], [5.0, 3989.0], [5.1, 3989.0], [5.2, 3989.0], [5.3, 3989.0], [5.4, 4273.0], [5.5, 4273.0], [5.6, 4273.0], [5.7, 4567.0], [5.8, 4567.0], [5.9, 4567.0], [6.0, 4567.0], [6.1, 4669.0], [6.2, 4669.0], [6.3, 4669.0], [6.4, 4669.0], [6.5, 4828.0], [6.6, 4828.0], [6.7, 4828.0], [6.8, 4828.0], [6.9, 4906.0], [7.0, 4906.0], [7.1, 4906.0], [7.2, 4918.0], [7.3, 4918.0], [7.4, 4918.0], [7.5, 4918.0], [7.6, 4919.0], [7.7, 4919.0], [7.8, 4919.0], [7.9, 4919.0], [8.0, 5024.0], [8.1, 5024.0], [8.2, 5024.0], [8.3, 5024.0], [8.4, 5110.0], [8.5, 5110.0], [8.6, 5110.0], [8.7, 5110.0], [8.8, 5553.0], [8.9, 5553.0], [9.0, 5553.0], [9.1, 5637.0], [9.2, 5637.0], [9.3, 5637.0], [9.4, 5637.0], [9.5, 6080.0], [9.6, 6080.0], [9.7, 6080.0], [9.8, 6080.0], [9.9, 6213.0], [10.0, 6213.0], [10.1, 6213.0], [10.2, 6213.0], [10.3, 6239.0], [10.4, 6239.0], [10.5, 6239.0], [10.6, 6239.0], [10.7, 6241.0], [10.8, 6241.0], [10.9, 6241.0], [11.0, 6628.0], [11.1, 6628.0], [11.2, 6628.0], [11.3, 6628.0], [11.4, 6650.0], [11.5, 6650.0], [11.6, 6650.0], [11.7, 6650.0], [11.8, 6694.0], [11.9, 6694.0], [12.0, 6694.0], [12.1, 6694.0], [12.2, 6866.0], [12.3, 6866.0], [12.4, 6866.0], [12.5, 6866.0], [12.6, 6897.0], [12.7, 6897.0], [12.8, 6897.0], [12.9, 7184.0], [13.0, 7184.0], [13.1, 7184.0], [13.2, 7184.0], [13.3, 7222.0], [13.4, 7222.0], [13.5, 7222.0], [13.6, 7222.0], [13.7, 7366.0], [13.8, 7366.0], [13.9, 7366.0], [14.0, 7366.0], [14.1, 7367.0], [14.2, 7367.0], [14.3, 7367.0], [14.4, 7441.0], [14.5, 7441.0], [14.6, 7441.0], [14.7, 7441.0], [14.8, 7486.0], [14.9, 7486.0], [15.0, 7486.0], [15.1, 7486.0], [15.2, 7580.0], [15.3, 7580.0], [15.4, 7580.0], [15.5, 7580.0], [15.6, 7718.0], [15.7, 7718.0], [15.8, 7718.0], [15.9, 7718.0], [16.0, 7811.0], [16.1, 7811.0], [16.2, 7811.0], [16.3, 7938.0], [16.4, 7938.0], [16.5, 7938.0], [16.6, 7938.0], [16.7, 8012.0], [16.8, 8012.0], [16.9, 8012.0], [17.0, 8012.0], [17.1, 8050.0], [17.2, 8050.0], [17.3, 8050.0], [17.4, 8050.0], [17.5, 8057.0], [17.6, 8057.0], [17.7, 8057.0], [17.8, 8057.0], [17.9, 8067.0], [18.0, 8067.0], [18.1, 8067.0], [18.2, 8121.0], [18.3, 8121.0], [18.4, 8121.0], [18.5, 8121.0], [18.6, 8129.0], [18.7, 8129.0], [18.8, 8129.0], [18.9, 8129.0], [19.0, 8179.0], [19.1, 8179.0], [19.2, 8179.0], [19.3, 8179.0], [19.4, 8204.0], [19.5, 8204.0], [19.6, 8204.0], [19.7, 8299.0], [19.8, 8299.0], [19.9, 8299.0], [20.0, 8299.0], [20.1, 8367.0], [20.2, 8367.0], [20.3, 8367.0], [20.4, 8367.0], [20.5, 8514.0], [20.6, 8514.0], [20.7, 8514.0], [20.8, 8514.0], [20.9, 8566.0], [21.0, 8566.0], [21.1, 8566.0], [21.2, 8566.0], [21.3, 8608.0], [21.4, 8608.0], [21.5, 8608.0], [21.6, 8780.0], [21.7, 8780.0], [21.8, 8780.0], [21.9, 8780.0], [22.0, 8781.0], [22.1, 8781.0], [22.2, 8781.0], [22.3, 8781.0], [22.4, 8782.0], [22.5, 8782.0], [22.6, 8782.0], [22.7, 8782.0], [22.8, 8820.0], [22.9, 8820.0], [23.0, 8820.0], [23.1, 8820.0], [23.2, 8868.0], [23.3, 8868.0], [23.4, 8868.0], [23.5, 8919.0], [23.6, 8919.0], [23.7, 8919.0], [23.8, 8919.0], [23.9, 8934.0], [24.0, 8934.0], [24.1, 8934.0], [24.2, 8934.0], [24.3, 8947.0], [24.4, 8947.0], [24.5, 8947.0], [24.6, 8947.0], [24.7, 8950.0], [24.8, 8950.0], [24.9, 8950.0], [25.0, 8950.0], [25.1, 8973.0], [25.2, 8973.0], [25.3, 8973.0], [25.4, 9006.0], [25.5, 9006.0], [25.6, 9006.0], [25.7, 9006.0], [25.8, 9020.0], [25.9, 9020.0], [26.0, 9020.0], [26.1, 9020.0], [26.2, 9045.0], [26.3, 9045.0], [26.4, 9045.0], [26.5, 9045.0], [26.6, 9064.0], [26.7, 9064.0], [26.8, 9064.0], [26.9, 9082.0], [27.0, 9082.0], [27.1, 9082.0], [27.2, 9082.0], [27.3, 9093.0], [27.4, 9093.0], [27.5, 9093.0], [27.6, 9093.0], [27.7, 9093.0], [27.8, 9093.0], [27.9, 9093.0], [28.0, 9093.0], [28.1, 9146.0], [28.2, 9146.0], [28.3, 9146.0], [28.4, 9146.0], [28.5, 9151.0], [28.6, 9151.0], [28.7, 9151.0], [28.8, 9159.0], [28.9, 9159.0], [29.0, 9159.0], [29.1, 9159.0], [29.2, 9161.0], [29.3, 9161.0], [29.4, 9161.0], [29.5, 9161.0], [29.6, 9162.0], [29.7, 9162.0], [29.8, 9162.0], [29.9, 9162.0], [30.0, 9189.0], [30.1, 9189.0], [30.2, 9189.0], [30.3, 9189.0], [30.4, 9193.0], [30.5, 9193.0], [30.6, 9193.0], [30.7, 9197.0], [30.8, 9197.0], [30.9, 9197.0], [31.0, 9197.0], [31.1, 9209.0], [31.2, 9209.0], [31.3, 9209.0], [31.4, 9209.0], [31.5, 9210.0], [31.6, 9210.0], [31.7, 9210.0], [31.8, 9210.0], [31.9, 9216.0], [32.0, 9216.0], [32.1, 9216.0], [32.2, 9233.0], [32.3, 9233.0], [32.4, 9233.0], [32.5, 9233.0], [32.6, 9238.0], [32.7, 9238.0], [32.8, 9238.0], [32.9, 9238.0], [33.0, 9241.0], [33.1, 9241.0], [33.2, 9241.0], [33.3, 9241.0], [33.4, 9250.0], [33.5, 9250.0], [33.6, 9250.0], [33.7, 9250.0], [33.8, 9260.0], [33.9, 9260.0], [34.0, 9260.0], [34.1, 9280.0], [34.2, 9280.0], [34.3, 9280.0], [34.4, 9280.0], [34.5, 9284.0], [34.6, 9284.0], [34.7, 9284.0], [34.8, 9284.0], [34.9, 9288.0], [35.0, 9288.0], [35.1, 9288.0], [35.2, 9288.0], [35.3, 9293.0], [35.4, 9293.0], [35.5, 9293.0], [35.6, 9293.0], [35.7, 9298.0], [35.8, 9298.0], [35.9, 9298.0], [36.0, 9306.0], [36.1, 9306.0], [36.2, 9306.0], [36.3, 9306.0], [36.4, 9319.0], [36.5, 9319.0], [36.6, 9319.0], [36.7, 9319.0], [36.8, 9327.0], [36.9, 9327.0], [37.0, 9327.0], [37.1, 9327.0], [37.2, 9334.0], [37.3, 9334.0], [37.4, 9334.0], [37.5, 9343.0], [37.6, 9343.0], [37.7, 9343.0], [37.8, 9343.0], [37.9, 9346.0], [38.0, 9346.0], [38.1, 9346.0], [38.2, 9346.0], [38.3, 9347.0], [38.4, 9347.0], [38.5, 9347.0], [38.6, 9347.0], [38.7, 9368.0], [38.8, 9368.0], [38.9, 9368.0], [39.0, 9368.0], [39.1, 9370.0], [39.2, 9370.0], [39.3, 9370.0], [39.4, 9375.0], [39.5, 9375.0], [39.6, 9375.0], [39.7, 9375.0], [39.8, 9382.0], [39.9, 9382.0], [40.0, 9382.0], [40.1, 9382.0], [40.2, 9386.0], [40.3, 9386.0], [40.4, 9386.0], [40.5, 9386.0], [40.6, 9389.0], [40.7, 9389.0], [40.8, 9389.0], [40.9, 9389.0], [41.0, 9390.0], [41.1, 9390.0], [41.2, 9390.0], [41.3, 9399.0], [41.4, 9399.0], [41.5, 9399.0], [41.6, 9399.0], [41.7, 9401.0], [41.8, 9401.0], [41.9, 9401.0], [42.0, 9401.0], [42.1, 9403.0], [42.2, 9403.0], [42.3, 9403.0], [42.4, 9403.0], [42.5, 9407.0], [42.6, 9407.0], [42.7, 9407.0], [42.8, 9407.0], [42.9, 9407.0], [43.0, 9407.0], [43.1, 9407.0], [43.2, 9423.0], [43.3, 9423.0], [43.4, 9423.0], [43.5, 9423.0], [43.6, 9431.0], [43.7, 9431.0], [43.8, 9431.0], [43.9, 9431.0], [44.0, 9436.0], [44.1, 9436.0], [44.2, 9436.0], [44.3, 9436.0], [44.4, 9437.0], [44.5, 9437.0], [44.6, 9437.0], [44.7, 9437.0], [44.8, 9437.0], [44.9, 9437.0], [45.0, 9437.0], [45.1, 9438.0], [45.2, 9438.0], [45.3, 9438.0], [45.4, 9438.0], [45.5, 9441.0], [45.6, 9441.0], [45.7, 9441.0], [45.8, 9441.0], [45.9, 9442.0], [46.0, 9442.0], [46.1, 9442.0], [46.2, 9442.0], [46.3, 9445.0], [46.4, 9445.0], [46.5, 9445.0], [46.6, 9459.0], [46.7, 9459.0], [46.8, 9459.0], [46.9, 9459.0], [47.0, 9460.0], [47.1, 9460.0], [47.2, 9460.0], [47.3, 9460.0], [47.4, 9470.0], [47.5, 9470.0], [47.6, 9470.0], [47.7, 9470.0], [47.8, 9474.0], [47.9, 9474.0], [48.0, 9474.0], [48.1, 9474.0], [48.2, 9475.0], [48.3, 9475.0], [48.4, 9475.0], [48.5, 9478.0], [48.6, 9478.0], [48.7, 9478.0], [48.8, 9478.0], [48.9, 9479.0], [49.0, 9479.0], [49.1, 9479.0], [49.2, 9479.0], [49.3, 9492.0], [49.4, 9492.0], [49.5, 9492.0], [49.6, 9492.0], [49.7, 9495.0], [49.8, 9495.0], [49.9, 9495.0], [50.0, 9501.0], [50.1, 9501.0], [50.2, 9501.0], [50.3, 9501.0], [50.4, 9502.0], [50.5, 9502.0], [50.6, 9502.0], [50.7, 9502.0], [50.8, 9510.0], [50.9, 9510.0], [51.0, 9510.0], [51.1, 9510.0], [51.2, 9511.0], [51.3, 9511.0], [51.4, 9511.0], [51.5, 9511.0], [51.6, 9512.0], [51.7, 9512.0], [51.8, 9512.0], [51.9, 9515.0], [52.0, 9515.0], [52.1, 9515.0], [52.2, 9515.0], [52.3, 9515.0], [52.4, 9515.0], [52.5, 9515.0], [52.6, 9515.0], [52.7, 9519.0], [52.8, 9519.0], [52.9, 9519.0], [53.0, 9519.0], [53.1, 9542.0], [53.2, 9542.0], [53.3, 9542.0], [53.4, 9542.0], [53.5, 9547.0], [53.6, 9547.0], [53.7, 9547.0], [53.8, 9551.0], [53.9, 9551.0], [54.0, 9551.0], [54.1, 9551.0], [54.2, 9554.0], [54.3, 9554.0], [54.4, 9554.0], [54.5, 9554.0], [54.6, 9559.0], [54.7, 9559.0], [54.8, 9559.0], [54.9, 9559.0], [55.0, 9566.0], [55.1, 9566.0], [55.2, 9566.0], [55.3, 9566.0], [55.4, 9566.0], [55.5, 9566.0], [55.6, 9566.0], [55.7, 9567.0], [55.8, 9567.0], [55.9, 9567.0], [56.0, 9567.0], [56.1, 9589.0], [56.2, 9589.0], [56.3, 9589.0], [56.4, 9589.0], [56.5, 9591.0], [56.6, 9591.0], [56.7, 9591.0], [56.8, 9591.0], [56.9, 9592.0], [57.0, 9592.0], [57.1, 9592.0], [57.2, 9598.0], [57.3, 9598.0], [57.4, 9598.0], [57.5, 9598.0], [57.6, 9619.0], [57.7, 9619.0], [57.8, 9619.0], [57.9, 9619.0], [58.0, 9619.0], [58.1, 9619.0], [58.2, 9619.0], [58.3, 9619.0], [58.4, 9626.0], [58.5, 9626.0], [58.6, 9626.0], [58.7, 9626.0], [58.8, 9631.0], [58.9, 9631.0], [59.0, 9631.0], [59.1, 9633.0], [59.2, 9633.0], [59.3, 9633.0], [59.4, 9633.0], [59.5, 9636.0], [59.6, 9636.0], [59.7, 9636.0], [59.8, 9636.0], [59.9, 9667.0], [60.0, 9667.0], [60.1, 9667.0], [60.2, 9667.0], [60.3, 9668.0], [60.4, 9668.0], [60.5, 9668.0], [60.6, 9668.0], [60.7, 9672.0], [60.8, 9672.0], [60.9, 9672.0], [61.0, 9682.0], [61.1, 9682.0], [61.2, 9682.0], [61.3, 9682.0], [61.4, 9688.0], [61.5, 9688.0], [61.6, 9688.0], [61.7, 9688.0], [61.8, 9691.0], [61.9, 9691.0], [62.0, 9691.0], [62.1, 9691.0], [62.2, 9693.0], [62.3, 9693.0], [62.4, 9693.0], [62.5, 9695.0], [62.6, 9695.0], [62.7, 9695.0], [62.8, 9695.0], [62.9, 9698.0], [63.0, 9698.0], [63.1, 9698.0], [63.2, 9698.0], [63.3, 9699.0], [63.4, 9699.0], [63.5, 9699.0], [63.6, 9699.0], [63.7, 9704.0], [63.8, 9704.0], [63.9, 9704.0], [64.0, 9704.0], [64.1, 9705.0], [64.2, 9705.0], [64.3, 9705.0], [64.4, 9706.0], [64.5, 9706.0], [64.6, 9706.0], [64.7, 9706.0], [64.8, 9711.0], [64.9, 9711.0], [65.0, 9711.0], [65.1, 9711.0], [65.2, 9711.0], [65.3, 9711.0], [65.4, 9711.0], [65.5, 9711.0], [65.6, 9711.0], [65.7, 9711.0], [65.8, 9711.0], [65.9, 9711.0], [66.0, 9712.0], [66.1, 9712.0], [66.2, 9712.0], [66.3, 9714.0], [66.4, 9714.0], [66.5, 9714.0], [66.6, 9714.0], [66.7, 9724.0], [66.8, 9724.0], [66.9, 9724.0], [67.0, 9724.0], [67.1, 9724.0], [67.2, 9724.0], [67.3, 9724.0], [67.4, 9724.0], [67.5, 9732.0], [67.6, 9732.0], [67.7, 9732.0], [67.8, 9732.0], [67.9, 9733.0], [68.0, 9733.0], [68.1, 9733.0], [68.2, 9734.0], [68.3, 9734.0], [68.4, 9734.0], [68.5, 9734.0], [68.6, 9742.0], [68.7, 9742.0], [68.8, 9742.0], [68.9, 9742.0], [69.0, 9742.0], [69.1, 9742.0], [69.2, 9742.0], [69.3, 9742.0], [69.4, 9763.0], [69.5, 9763.0], [69.6, 9763.0], [69.7, 9764.0], [69.8, 9764.0], [69.9, 9764.0], [70.0, 9764.0], [70.1, 9767.0], [70.2, 9767.0], [70.3, 9767.0], [70.4, 9767.0], [70.5, 9772.0], [70.6, 9772.0], [70.7, 9772.0], [70.8, 9772.0], [70.9, 9784.0], [71.0, 9784.0], [71.1, 9784.0], [71.2, 9784.0], [71.3, 9784.0], [71.4, 9784.0], [71.5, 9784.0], [71.6, 9785.0], [71.7, 9785.0], [71.8, 9785.0], [71.9, 9785.0], [72.0, 9799.0], [72.1, 9799.0], [72.2, 9799.0], [72.3, 9799.0], [72.4, 9808.0], [72.5, 9808.0], [72.6, 9808.0], [72.7, 9808.0], [72.8, 9808.0], [72.9, 9808.0], [73.0, 9808.0], [73.1, 9808.0], [73.2, 9811.0], [73.3, 9811.0], [73.4, 9811.0], [73.5, 9812.0], [73.6, 9812.0], [73.7, 9812.0], [73.8, 9812.0], [73.9, 9819.0], [74.0, 9819.0], [74.1, 9819.0], [74.2, 9819.0], [74.3, 9820.0], [74.4, 9820.0], [74.5, 9820.0], [74.6, 9820.0], [74.7, 9821.0], [74.8, 9821.0], [74.9, 9821.0], [75.0, 9823.0], [75.1, 9823.0], [75.2, 9823.0], [75.3, 9823.0], [75.4, 9825.0], [75.5, 9825.0], [75.6, 9825.0], [75.7, 9825.0], [75.8, 9826.0], [75.9, 9826.0], [76.0, 9826.0], [76.1, 9826.0], [76.2, 9828.0], [76.3, 9828.0], [76.4, 9828.0], [76.5, 9828.0], [76.6, 9830.0], [76.7, 9830.0], [76.8, 9830.0], [76.9, 9830.0], [77.0, 9830.0], [77.1, 9830.0], [77.2, 9830.0], [77.3, 9833.0], [77.4, 9833.0], [77.5, 9833.0], [77.6, 9833.0], [77.7, 9836.0], [77.8, 9836.0], [77.9, 9836.0], [78.0, 9836.0], [78.1, 9846.0], [78.2, 9846.0], [78.3, 9846.0], [78.4, 9846.0], [78.5, 9849.0], [78.6, 9849.0], [78.7, 9849.0], [78.8, 9853.0], [78.9, 9853.0], [79.0, 9853.0], [79.1, 9853.0], [79.2, 9856.0], [79.3, 9856.0], [79.4, 9856.0], [79.5, 9856.0], [79.6, 9862.0], [79.7, 9862.0], [79.8, 9862.0], [79.9, 9862.0], [80.0, 9864.0], [80.1, 9864.0], [80.2, 9864.0], [80.3, 9864.0], [80.4, 9870.0], [80.5, 9870.0], [80.6, 9870.0], [80.7, 9884.0], [80.8, 9884.0], [80.9, 9884.0], [81.0, 9884.0], [81.1, 9895.0], [81.2, 9895.0], [81.3, 9895.0], [81.4, 9895.0], [81.5, 9898.0], [81.6, 9898.0], [81.7, 9898.0], [81.8, 9898.0], [81.9, 9907.0], [82.0, 9907.0], [82.1, 9907.0], [82.2, 9907.0], [82.3, 9907.0], [82.4, 9907.0], [82.5, 9907.0], [82.6, 9907.0], [82.7, 9907.0], [82.8, 9907.0], [82.9, 9907.0], [83.0, 9912.0], [83.1, 9912.0], [83.2, 9912.0], [83.3, 9912.0], [83.4, 9917.0], [83.5, 9917.0], [83.6, 9917.0], [83.7, 9917.0], [83.8, 9925.0], [83.9, 9925.0], [84.0, 9925.0], [84.1, 9928.0], [84.2, 9928.0], [84.3, 9928.0], [84.4, 9928.0], [84.5, 9936.0], [84.6, 9936.0], [84.7, 9936.0], [84.8, 9936.0], [84.9, 9954.0], [85.0, 9954.0], [85.1, 9954.0], [85.2, 9954.0], [85.3, 9955.0], [85.4, 9955.0], [85.5, 9955.0], [85.6, 9955.0], [85.7, 9968.0], [85.8, 9968.0], [85.9, 9968.0], [86.0, 9969.0], [86.1, 9969.0], [86.2, 9969.0], [86.3, 9969.0], [86.4, 9980.0], [86.5, 9980.0], [86.6, 9980.0], [86.7, 9980.0], [86.8, 9988.0], [86.9, 9988.0], [87.0, 9988.0], [87.1, 9988.0], [87.2, 9992.0], [87.3, 9992.0], [87.4, 9992.0], [87.5, 10002.0], [87.6, 10002.0], [87.7, 10002.0], [87.8, 10002.0], [87.9, 10002.0], [88.0, 10002.0], [88.1, 10002.0], [88.2, 10002.0], [88.3, 10006.0], [88.4, 10006.0], [88.5, 10006.0], [88.6, 10006.0], [88.7, 10006.0], [88.8, 10006.0], [88.9, 10006.0], [89.0, 10006.0], [89.1, 10011.0], [89.2, 10011.0], [89.3, 10011.0], [89.4, 10011.0], [89.5, 10011.0], [89.6, 10011.0], [89.7, 10011.0], [89.8, 10017.0], [89.9, 10017.0], [90.0, 10017.0], [90.1, 10017.0], [90.2, 10020.0], [90.3, 10020.0], [90.4, 10020.0], [90.5, 10020.0], [90.6, 10034.0], [90.7, 10034.0], [90.8, 10034.0], [90.9, 10034.0], [91.0, 10044.0], [91.1, 10044.0], [91.2, 10044.0], [91.3, 10051.0], [91.4, 10051.0], [91.5, 10051.0], [91.6, 10051.0], [91.7, 10059.0], [91.8, 10059.0], [91.9, 10059.0], [92.0, 10059.0], [92.1, 10059.0], [92.2, 10059.0], [92.3, 10059.0], [92.4, 10059.0], [92.5, 10091.0], [92.6, 10091.0], [92.7, 10091.0], [92.8, 10091.0], [92.9, 10092.0], [93.0, 10092.0], [93.1, 10092.0], [93.2, 10143.0], [93.3, 10143.0], [93.4, 10143.0], [93.5, 10143.0], [93.6, 10148.0], [93.7, 10148.0], [93.8, 10148.0], [93.9, 10148.0], [94.0, 10150.0], [94.1, 10150.0], [94.2, 10150.0], [94.3, 10150.0], [94.4, 10177.0], [94.5, 10177.0], [94.6, 10177.0], [94.7, 10192.0], [94.8, 10192.0], [94.9, 10192.0], [95.0, 10192.0], [95.1, 10211.0], [95.2, 10211.0], [95.3, 10211.0], [95.4, 10211.0], [95.5, 10238.0], [95.6, 10238.0], [95.7, 10238.0], [95.8, 10238.0], [95.9, 10241.0], [96.0, 10241.0], [96.1, 10241.0], [96.2, 10241.0], [96.3, 10247.0], [96.4, 10247.0], [96.5, 10247.0], [96.6, 10312.0], [96.7, 10312.0], [96.8, 10312.0], [96.9, 10312.0], [97.0, 10331.0], [97.1, 10331.0], [97.2, 10331.0], [97.3, 10331.0], [97.4, 10338.0], [97.5, 10338.0], [97.6, 10338.0], [97.7, 10338.0], [97.8, 10339.0], [97.9, 10339.0], [98.0, 10339.0], [98.1, 10339.0], [98.2, 10343.0], [98.3, 10343.0], [98.4, 10343.0], [98.5, 10499.0], [98.6, 10499.0], [98.7, 10499.0], [98.8, 10499.0], [98.9, 10510.0], [99.0, 10510.0], [99.1, 10510.0], [99.2, 10510.0], [99.3, 10521.0], [99.4, 10521.0], [99.5, 10521.0], [99.6, 10521.0], [99.7, 10839.0], [99.8, 10839.0], [99.9, 10839.0]], "isOverall": false, "label": "Modify Password", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 143.0, "series": [{"data": [[0.0, 6.0], [300.0, 33.0], [600.0, 3.0], [700.0, 1.0], [100.0, 143.0], [200.0, 24.0], [400.0, 12.0], [500.0, 3.0]], "isOverall": false, "label": "Modify User Info", "isController": false}, {"data": [[0.0, 6.0], [300.0, 33.0], [600.0, 3.0], [700.0, 1.0], [100.0, 143.0], [200.0, 24.0], [400.0, 12.0], [500.0, 3.0]], "isOverall": false, "label": "Modify User Infomation", "isController": true}, {"data": [[600.0, 2.0], [800.0, 4.0], [900.0, 4.0], [1000.0, 2.0], [1200.0, 2.0], [1300.0, 4.0], [1400.0, 2.0], [1500.0, 2.0], [100.0, 2.0], [1600.0, 2.0], [1800.0, 2.0], [1900.0, 4.0], [2000.0, 2.0], [2100.0, 6.0], [2300.0, 2.0], [2200.0, 4.0], [2600.0, 4.0], [3000.0, 2.0], [3100.0, 8.0], [200.0, 4.0], [3300.0, 4.0], [3400.0, 2.0], [3500.0, 4.0], [3600.0, 4.0], [3700.0, 16.0], [3800.0, 12.0], [3900.0, 14.0], [4000.0, 32.0], [4100.0, 34.0], [4300.0, 32.0], [4200.0, 42.0], [4400.0, 56.0], [4600.0, 60.0], [4500.0, 54.0], [4800.0, 22.0], [4700.0, 34.0], [5100.0, 10.0], [5000.0, 18.0], [4900.0, 14.0], [5200.0, 4.0], [5300.0, 2.0], [5400.0, 4.0], [400.0, 4.0], [500.0, 2.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[600.0, 2.0], [1000.0, 2.0], [1600.0, 2.0], [1900.0, 2.0], [2100.0, 2.0], [2500.0, 2.0], [2700.0, 2.0], [3100.0, 2.0], [3400.0, 4.0], [3600.0, 2.0], [3800.0, 2.0], [3900.0, 2.0], [4200.0, 2.0], [4600.0, 2.0], [4500.0, 2.0], [4800.0, 2.0], [5000.0, 2.0], [5100.0, 2.0], [4900.0, 6.0], [5500.0, 2.0], [5600.0, 2.0], [6000.0, 2.0], [6200.0, 6.0], [6600.0, 6.0], [6800.0, 4.0], [7100.0, 2.0], [7400.0, 4.0], [7300.0, 4.0], [7200.0, 2.0], [7500.0, 2.0], [7800.0, 2.0], [7700.0, 2.0], [7900.0, 2.0], [8100.0, 6.0], [8000.0, 8.0], [8300.0, 2.0], [8700.0, 6.0], [8500.0, 4.0], [8600.0, 2.0], [8200.0, 4.0], [8900.0, 10.0], [9100.0, 16.0], [9200.0, 26.0], [9000.0, 14.0], [8800.0, 4.0], [9300.0, 30.0], [9700.0, 46.0], [9400.0, 44.0], [9600.0, 32.0], [9500.0, 40.0], [9800.0, 50.0], [10000.0, 30.0], [9900.0, 30.0], [10200.0, 8.0], [10100.0, 10.0], [10400.0, 2.0], [10300.0, 10.0], [10500.0, 4.0], [10800.0, 2.0], [300.0, 2.0]], "isOverall": false, "label": "Modify Password", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 10800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 20.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 517.0, "series": [{"data": [[0.0, 224.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 20.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 517.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 45.49823321554769, "minX": 1.57793712E12, "maxY": 46.3682008368201, "series": [{"data": [[1.57793712E12, 46.3682008368201], [1.57793718E12, 45.49823321554769]], "isOverall": false, "label": "User Infomation Manage Thread Group(\u4E2A\u4EBA\u4FE1\u606F\u7BA1\u7406)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793718E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 70.0, "minX": 1.0, "maxY": 9569.637254901952, "series": [{"data": [[34.0, 722.0], [35.0, 333.0], [9.0, 70.0], [42.0, 485.0], [44.0, 265.5], [45.0, 347.0], [46.0, 283.0], [3.0, 98.0], [49.0, 121.0], [48.0, 161.0], [50.0, 206.3774509803921], [16.0, 303.0], [17.0, 174.0], [19.0, 122.0], [24.0, 174.0], [7.0, 101.0], [29.0, 200.0], [30.0, 184.0]], "isOverall": false, "label": "Modify User Info", "isController": false}, {"data": [[48.319999999999986, 209.62222222222232]], "isOverall": false, "label": "Modify User Info-Aggregated", "isController": false}, {"data": [[34.0, 722.0], [35.0, 333.0], [9.0, 70.0], [42.0, 485.0], [44.0, 265.5], [45.0, 347.0], [46.0, 283.0], [3.0, 98.0], [49.0, 121.0], [48.0, 161.0], [50.0, 206.3774509803921], [16.0, 303.0], [17.0, 174.0], [19.0, 122.0], [24.0, 174.0], [7.0, 101.0], [29.0, 200.0], [30.0, 184.0]], "isOverall": false, "label": "Modify User Infomation", "isController": true}, {"data": [[48.319999999999986, 209.62222222222232]], "isOverall": false, "label": "Modify User Infomation-Aggregated", "isController": true}, {"data": [[33.0, 2455.5], [34.0, 3324.333333333333], [35.0, 4115.0], [37.0, 3144.0], [36.0, 3806.0], [39.0, 3482.0], [38.0, 4528.0], [40.0, 3937.0], [42.0, 3368.3333333333335], [45.0, 3257.7999999999997], [47.0, 4319.0], [3.0, 284.0], [49.0, 3505.0], [48.0, 4362.285714285715], [50.0, 4488.465116279066], [4.0, 206.0], [6.0, 483.0], [7.0, 565.0], [9.0, 691.0], [11.0, 917.5], [12.0, 872.0], [13.0, 972.0], [14.0, 1022.0], [1.0, 165.0], [16.0, 1309.0], [18.0, 1316.5], [19.0, 1398.0], [21.0, 1567.0], [24.0, 1637.0], [26.0, 2068.0], [27.0, 1889.0], [29.0, 2005.0], [30.0, 2181.0], [31.0, 2179.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[45.89705882352941, 4087.1985294117653]], "isOverall": false, "label": "Login-Aggregated", "isController": false}, {"data": [[33.0, 3989.0], [32.0, 8514.0], [2.0, 2583.0], [34.0, 3873.0], [37.0, 8566.0], [39.0, 4669.0], [41.0, 9501.0], [40.0, 8868.0], [43.0, 6471.333333333334], [42.0, 9288.0], [44.0, 9407.0], [47.0, 5553.0], [46.0, 9174.0], [3.0, 2295.0], [49.0, 9492.0], [48.0, 9268.666666666666], [50.0, 9569.637254901952], [4.0, 4828.0], [6.0, 2590.0], [7.0, 4918.5], [8.0, 4906.0], [9.0, 3329.0], [10.0, 6080.0], [11.0, 6239.0], [12.0, 6241.0], [14.0, 4978.0], [15.0, 6694.0], [16.0, 1942.0], [1.0, 3148.0], [17.0, 6881.5], [18.0, 4682.5], [19.0, 7222.0], [21.0, 7366.5], [22.0, 8057.0], [23.0, 5476.0], [25.0, 8162.5], [26.0, 8012.0], [28.0, 6749.666666666667], [29.0, 3491.0], [30.0, 6907.666666666667], [31.0, 8608.0]], "isOverall": false, "label": "Modify Password", "isController": false}, {"data": [[44.25378787878788, 8806.26515151516]], "isOverall": false, "label": "Modify Password-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 50.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.57793712E12, "maxY": 5138.216666666666, "series": [{"data": [[1.57793712E12, 5138.216666666666], [1.57793718E12, 2985.9]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.57793712E12, 0.0], [1.57793718E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793718E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 203.9060402684564, "minX": 1.57793712E12, "maxY": 8815.543624161071, "series": [{"data": [[1.57793712E12, 203.90604026845642], [1.57793718E12, 220.8289473684211]], "isOverall": false, "label": "Modify User Info", "isController": false}, {"data": [[1.57793712E12, 203.9060402684564], [1.57793718E12, 220.8289473684211]], "isOverall": false, "label": "Modify User Infomation", "isController": true}, {"data": [[1.57793712E12, 3868.994444444445], [1.57793718E12, 4514.119565217393]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.57793712E12, 8815.543624161071], [1.57793718E12, 8794.24347826087]], "isOverall": false, "label": "Modify Password", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793718E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 203.46979865771812, "minX": 1.57793712E12, "maxY": 8815.161073825513, "series": [{"data": [[1.57793712E12, 203.46979865771812], [1.57793718E12, 219.10526315789465]], "isOverall": false, "label": "Modify User Info", "isController": false}, {"data": [[1.57793712E12, 203.46979865771817], [1.57793718E12, 219.10526315789465]], "isOverall": false, "label": "Modify User Infomation", "isController": true}, {"data": [[1.57793712E12, 3829.8500000000026], [1.57793718E12, 4436.130434782609]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.57793712E12, 8815.161073825513], [1.57793718E12, 8793.852173913046]], "isOverall": false, "label": "Modify Password", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793718E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 47.13043478260866, "minX": 1.57793712E12, "maxY": 58.933333333333294, "series": [{"data": [[1.57793712E12, 54.16107382550332], [1.57793718E12, 53.77631578947368]], "isOverall": false, "label": "Modify User Info", "isController": false}, {"data": [[1.57793712E12, 54.16107382550332], [1.57793718E12, 53.77631578947367]], "isOverall": false, "label": "Modify User Infomation", "isController": true}, {"data": [[1.57793712E12, 58.933333333333294], [1.57793718E12, 49.83695652173916]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.57793712E12, 49.24161073825504], [1.57793718E12, 47.13043478260866]], "isOverall": false, "label": "Modify Password", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793718E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 70.0, "minX": 1.57793712E12, "maxY": 10839.0, "series": [{"data": [[1.57793712E12, 10839.0], [1.57793718E12, 10343.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.57793712E12, 70.0], [1.57793718E12, 72.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.57793712E12, 9763.1], [1.57793718E12, 9814.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.57793712E12, 10372.599999999997], [1.57793718E12, 10148.44]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.57793712E12, 9969.949999999999], [1.57793718E12, 9949.6]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793718E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2318.0, "minX": 1.0, "maxY": 6777.0, "series": [{"data": [[8.0, 4360.5], [2.0, 6777.0], [9.0, 4115.0], [10.0, 3454.0], [11.0, 4483.5], [3.0, 2518.0], [12.0, 4463.0], [13.0, 4696.0], [14.0, 2349.0], [4.0, 4606.0], [1.0, 4483.0], [17.0, 4881.0], [18.0, 4918.5], [19.0, 4553.0], [5.0, 3977.0], [20.0, 4166.0], [21.0, 4614.0], [22.0, 4474.5], [6.0, 3870.5], [7.0, 2318.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 22.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 2318.0, "minX": 1.0, "maxY": 6776.5, "series": [{"data": [[8.0, 4261.5], [2.0, 6776.5], [9.0, 4102.0], [10.0, 3454.0], [11.0, 4479.5], [3.0, 2431.0], [12.0, 4357.5], [13.0, 4695.0], [14.0, 2349.0], [4.0, 4493.0], [1.0, 4483.0], [17.0, 4793.0], [18.0, 4918.5], [19.0, 4553.0], [5.0, 3977.0], [20.0, 4054.5], [21.0, 4577.0], [22.0, 4474.5], [6.0, 3748.0], [7.0, 2318.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 22.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 3.8833333333333333, "minX": 1.57793712E12, "maxY": 8.8, "series": [{"data": [[1.57793712E12, 8.8], [1.57793718E12, 3.8833333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793718E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 4.716666666666667, "minX": 1.57793712E12, "maxY": 7.966666666666667, "series": [{"data": [[1.57793712E12, 7.966666666666667], [1.57793718E12, 4.716666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793718E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.2666666666666666, "minX": 1.57793712E12, "maxY": 6.0, "series": [{"data": [[1.57793712E12, 4.966666666666667], [1.57793718E12, 3.8333333333333335]], "isOverall": false, "label": "Modify Password-success", "isController": false}, {"data": [[1.57793712E12, 2.4833333333333334], [1.57793718E12, 1.2666666666666666]], "isOverall": false, "label": "Modify User Infomation-success", "isController": true}, {"data": [[1.57793712E12, 6.0], [1.57793718E12, 3.066666666666667]], "isOverall": false, "label": "Login-success", "isController": false}, {"data": [[1.57793712E12, 2.4833333333333334], [1.57793718E12, 1.2666666666666666]], "isOverall": false, "label": "Modify User Info-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793718E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 9.433333333333334, "minX": 1.57793712E12, "maxY": 15.933333333333334, "series": [{"data": [[1.57793712E12, 15.933333333333334], [1.57793718E12, 9.433333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793718E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

