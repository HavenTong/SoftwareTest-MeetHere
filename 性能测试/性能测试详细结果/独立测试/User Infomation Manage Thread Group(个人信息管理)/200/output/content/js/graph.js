/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 77.0, "minX": 0.0, "maxY": 74447.0, "series": [{"data": [[0.0, 77.0], [0.1, 77.0], [0.2, 77.0], [0.3, 77.0], [0.4, 77.0], [0.5, 77.0], [0.6, 87.0], [0.7, 87.0], [0.8, 87.0], [0.9, 87.0], [1.0, 87.0], [1.1, 87.0], [1.2, 98.0], [1.3, 98.0], [1.4, 98.0], [1.5, 98.0], [1.6, 98.0], [1.7, 98.0], [1.8, 119.0], [1.9, 119.0], [2.0, 119.0], [2.1, 119.0], [2.2, 119.0], [2.3, 119.0], [2.4, 119.0], [2.5, 119.0], [2.6, 119.0], [2.7, 119.0], [2.8, 119.0], [2.9, 119.0], [3.0, 125.0], [3.1, 125.0], [3.2, 125.0], [3.3, 125.0], [3.4, 125.0], [3.5, 125.0], [3.6, 126.0], [3.7, 126.0], [3.8, 126.0], [3.9, 126.0], [4.0, 126.0], [4.1, 126.0], [4.2, 126.0], [4.3, 126.0], [4.4, 126.0], [4.5, 126.0], [4.6, 126.0], [4.7, 126.0], [4.8, 131.0], [4.9, 131.0], [5.0, 131.0], [5.1, 131.0], [5.2, 131.0], [5.3, 131.0], [5.4, 132.0], [5.5, 132.0], [5.6, 132.0], [5.7, 132.0], [5.8, 132.0], [5.9, 132.0], [6.0, 134.0], [6.1, 134.0], [6.2, 134.0], [6.3, 134.0], [6.4, 134.0], [6.5, 134.0], [6.6, 134.0], [6.7, 134.0], [6.8, 134.0], [6.9, 134.0], [7.0, 134.0], [7.1, 134.0], [7.2, 135.0], [7.3, 135.0], [7.4, 135.0], [7.5, 135.0], [7.6, 135.0], [7.7, 146.0], [7.8, 146.0], [7.9, 146.0], [8.0, 146.0], [8.1, 146.0], [8.2, 146.0], [8.3, 151.0], [8.4, 151.0], [8.5, 151.0], [8.6, 151.0], [8.7, 151.0], [8.8, 151.0], [8.9, 154.0], [9.0, 154.0], [9.1, 154.0], [9.2, 154.0], [9.3, 154.0], [9.4, 154.0], [9.5, 166.0], [9.6, 166.0], [9.7, 166.0], [9.8, 166.0], [9.9, 166.0], [10.0, 166.0], [10.1, 167.0], [10.2, 167.0], [10.3, 167.0], [10.4, 167.0], [10.5, 167.0], [10.6, 167.0], [10.7, 195.0], [10.8, 195.0], [10.9, 195.0], [11.0, 195.0], [11.1, 195.0], [11.2, 195.0], [11.3, 211.0], [11.4, 211.0], [11.5, 211.0], [11.6, 211.0], [11.7, 211.0], [11.8, 211.0], [11.9, 213.0], [12.0, 213.0], [12.1, 213.0], [12.2, 213.0], [12.3, 213.0], [12.4, 213.0], [12.5, 218.0], [12.6, 218.0], [12.7, 218.0], [12.8, 218.0], [12.9, 218.0], [13.0, 218.0], [13.1, 227.0], [13.2, 227.0], [13.3, 227.0], [13.4, 227.0], [13.5, 227.0], [13.6, 227.0], [13.7, 260.0], [13.8, 260.0], [13.9, 260.0], [14.0, 260.0], [14.1, 260.0], [14.2, 260.0], [14.3, 264.0], [14.4, 264.0], [14.5, 264.0], [14.6, 264.0], [14.7, 264.0], [14.8, 264.0], [14.9, 264.0], [15.0, 264.0], [15.1, 264.0], [15.2, 264.0], [15.3, 264.0], [15.4, 264.0], [15.5, 264.0], [15.6, 264.0], [15.7, 264.0], [15.8, 264.0], [15.9, 264.0], [16.0, 290.0], [16.1, 290.0], [16.2, 290.0], [16.3, 290.0], [16.4, 290.0], [16.5, 290.0], [16.6, 299.0], [16.7, 299.0], [16.8, 299.0], [16.9, 299.0], [17.0, 299.0], [17.1, 299.0], [17.2, 329.0], [17.3, 329.0], [17.4, 329.0], [17.5, 329.0], [17.6, 329.0], [17.7, 329.0], [17.8, 415.0], [17.9, 415.0], [18.0, 415.0], [18.1, 415.0], [18.2, 415.0], [18.3, 415.0], [18.4, 420.0], [18.5, 420.0], [18.6, 420.0], [18.7, 420.0], [18.8, 420.0], [18.9, 420.0], [19.0, 425.0], [19.1, 425.0], [19.2, 425.0], [19.3, 425.0], [19.4, 425.0], [19.5, 425.0], [19.6, 440.0], [19.7, 440.0], [19.8, 440.0], [19.9, 440.0], [20.0, 440.0], [20.1, 440.0], [20.2, 474.0], [20.3, 474.0], [20.4, 474.0], [20.5, 474.0], [20.6, 474.0], [20.7, 474.0], [20.8, 475.0], [20.9, 475.0], [21.0, 475.0], [21.1, 475.0], [21.2, 475.0], [21.3, 475.0], [21.4, 477.0], [21.5, 477.0], [21.6, 477.0], [21.7, 477.0], [21.8, 477.0], [21.9, 481.0], [22.0, 481.0], [22.1, 481.0], [22.2, 481.0], [22.3, 481.0], [22.4, 481.0], [22.5, 482.0], [22.6, 482.0], [22.7, 482.0], [22.8, 482.0], [22.9, 482.0], [23.0, 482.0], [23.1, 499.0], [23.2, 499.0], [23.3, 499.0], [23.4, 499.0], [23.5, 499.0], [23.6, 499.0], [23.7, 499.0], [23.8, 499.0], [23.9, 499.0], [24.0, 499.0], [24.1, 499.0], [24.2, 499.0], [24.3, 520.0], [24.4, 520.0], [24.5, 520.0], [24.6, 520.0], [24.7, 520.0], [24.8, 520.0], [24.9, 535.0], [25.0, 535.0], [25.1, 535.0], [25.2, 535.0], [25.3, 535.0], [25.4, 535.0], [25.5, 571.0], [25.6, 571.0], [25.7, 571.0], [25.8, 571.0], [25.9, 571.0], [26.0, 571.0], [26.1, 574.0], [26.2, 574.0], [26.3, 574.0], [26.4, 574.0], [26.5, 574.0], [26.6, 574.0], [26.7, 576.0], [26.8, 576.0], [26.9, 576.0], [27.0, 576.0], [27.1, 576.0], [27.2, 576.0], [27.3, 579.0], [27.4, 579.0], [27.5, 579.0], [27.6, 579.0], [27.7, 579.0], [27.8, 579.0], [27.9, 596.0], [28.0, 596.0], [28.1, 596.0], [28.2, 596.0], [28.3, 596.0], [28.4, 596.0], [28.5, 691.0], [28.6, 691.0], [28.7, 691.0], [28.8, 691.0], [28.9, 691.0], [29.0, 716.0], [29.1, 716.0], [29.2, 716.0], [29.3, 716.0], [29.4, 716.0], [29.5, 716.0], [29.6, 747.0], [29.7, 747.0], [29.8, 747.0], [29.9, 747.0], [30.0, 747.0], [30.1, 747.0], [30.2, 771.0], [30.3, 771.0], [30.4, 771.0], [30.5, 771.0], [30.6, 771.0], [30.7, 771.0], [30.8, 778.0], [30.9, 778.0], [31.0, 778.0], [31.1, 778.0], [31.2, 778.0], [31.3, 778.0], [31.4, 861.0], [31.5, 861.0], [31.6, 861.0], [31.7, 861.0], [31.8, 861.0], [31.9, 861.0], [32.0, 868.0], [32.1, 868.0], [32.2, 868.0], [32.3, 868.0], [32.4, 868.0], [32.5, 868.0], [32.6, 887.0], [32.7, 887.0], [32.8, 887.0], [32.9, 887.0], [33.0, 887.0], [33.1, 887.0], [33.2, 1034.0], [33.3, 1034.0], [33.4, 1034.0], [33.5, 1034.0], [33.6, 1034.0], [33.7, 1034.0], [33.8, 1037.0], [33.9, 1037.0], [34.0, 1037.0], [34.1, 1037.0], [34.2, 1037.0], [34.3, 1037.0], [34.4, 1037.0], [34.5, 1037.0], [34.6, 1037.0], [34.7, 1037.0], [34.8, 1037.0], [34.9, 1037.0], [35.0, 1072.0], [35.1, 1072.0], [35.2, 1072.0], [35.3, 1072.0], [35.4, 1072.0], [35.5, 1072.0], [35.6, 1075.0], [35.7, 1075.0], [35.8, 1075.0], [35.9, 1075.0], [36.0, 1075.0], [36.1, 1084.0], [36.2, 1084.0], [36.3, 1084.0], [36.4, 1084.0], [36.5, 1084.0], [36.6, 1084.0], [36.7, 1144.0], [36.8, 1144.0], [36.9, 1144.0], [37.0, 1144.0], [37.1, 1144.0], [37.2, 1144.0], [37.3, 1158.0], [37.4, 1158.0], [37.5, 1158.0], [37.6, 1158.0], [37.7, 1158.0], [37.8, 1158.0], [37.9, 1201.0], [38.0, 1201.0], [38.1, 1201.0], [38.2, 1201.0], [38.3, 1201.0], [38.4, 1201.0], [38.5, 1236.0], [38.6, 1236.0], [38.7, 1236.0], [38.8, 1236.0], [38.9, 1236.0], [39.0, 1236.0], [39.1, 1477.0], [39.2, 1477.0], [39.3, 1477.0], [39.4, 1477.0], [39.5, 1477.0], [39.6, 1477.0], [39.7, 1493.0], [39.8, 1493.0], [39.9, 1493.0], [40.0, 1493.0], [40.1, 1493.0], [40.2, 1493.0], [40.3, 1589.0], [40.4, 1589.0], [40.5, 1589.0], [40.6, 1589.0], [40.7, 1589.0], [40.8, 1589.0], [40.9, 1729.0], [41.0, 1729.0], [41.1, 1729.0], [41.2, 1729.0], [41.3, 1729.0], [41.4, 1729.0], [41.5, 2425.0], [41.6, 2425.0], [41.7, 2425.0], [41.8, 2425.0], [41.9, 2425.0], [42.0, 2425.0], [42.1, 2526.0], [42.2, 2526.0], [42.3, 2526.0], [42.4, 2526.0], [42.5, 2526.0], [42.6, 2526.0], [42.7, 2539.0], [42.8, 2539.0], [42.9, 2539.0], [43.0, 2539.0], [43.1, 2539.0], [43.2, 2539.0], [43.3, 2539.0], [43.4, 2539.0], [43.5, 2539.0], [43.6, 2539.0], [43.7, 2539.0], [43.8, 2539.0], [43.9, 2539.0], [44.0, 2539.0], [44.1, 2539.0], [44.2, 2539.0], [44.3, 2539.0], [44.4, 3130.0], [44.5, 3130.0], [44.6, 3130.0], [44.7, 3130.0], [44.8, 3130.0], [44.9, 3130.0], [45.0, 3131.0], [45.1, 3131.0], [45.2, 3131.0], [45.3, 3131.0], [45.4, 3131.0], [45.5, 3131.0], [45.6, 3143.0], [45.7, 3143.0], [45.8, 3143.0], [45.9, 3143.0], [46.0, 3143.0], [46.1, 3143.0], [46.2, 3145.0], [46.3, 3145.0], [46.4, 3145.0], [46.5, 3145.0], [46.6, 3145.0], [46.7, 3145.0], [46.8, 3158.0], [46.9, 3158.0], [47.0, 3158.0], [47.1, 3158.0], [47.2, 3158.0], [47.3, 3158.0], [47.4, 3159.0], [47.5, 3159.0], [47.6, 3159.0], [47.7, 3159.0], [47.8, 3159.0], [47.9, 3159.0], [48.0, 3163.0], [48.1, 3163.0], [48.2, 3163.0], [48.3, 3163.0], [48.4, 3163.0], [48.5, 3163.0], [48.6, 3164.0], [48.7, 3164.0], [48.8, 3164.0], [48.9, 3164.0], [49.0, 3164.0], [49.1, 3164.0], [49.2, 3165.0], [49.3, 3165.0], [49.4, 3165.0], [49.5, 3165.0], [49.6, 3165.0], [49.7, 3165.0], [49.8, 3179.0], [49.9, 3179.0], [50.0, 3179.0], [50.1, 3179.0], [50.2, 3179.0], [50.3, 3269.0], [50.4, 3269.0], [50.5, 3269.0], [50.6, 3269.0], [50.7, 3269.0], [50.8, 3269.0], [50.9, 3458.0], [51.0, 3458.0], [51.1, 3458.0], [51.2, 3458.0], [51.3, 3458.0], [51.4, 3458.0], [51.5, 3567.0], [51.6, 3567.0], [51.7, 3567.0], [51.8, 3567.0], [51.9, 3567.0], [52.0, 3567.0], [52.1, 4108.0], [52.2, 4108.0], [52.3, 4108.0], [52.4, 4108.0], [52.5, 4108.0], [52.6, 4108.0], [52.7, 4190.0], [52.8, 4190.0], [52.9, 4190.0], [53.0, 4190.0], [53.1, 4190.0], [53.2, 4190.0], [53.3, 4190.0], [53.4, 4190.0], [53.5, 4190.0], [53.6, 4190.0], [53.7, 4190.0], [53.8, 4190.0], [53.9, 4191.0], [54.0, 4191.0], [54.1, 4191.0], [54.2, 4191.0], [54.3, 4191.0], [54.4, 4191.0], [54.5, 4191.0], [54.6, 4191.0], [54.7, 4191.0], [54.8, 4191.0], [54.9, 4191.0], [55.0, 4191.0], [55.1, 4191.0], [55.2, 4191.0], [55.3, 4191.0], [55.4, 4191.0], [55.5, 4191.0], [55.6, 4191.0], [55.7, 4577.0], [55.8, 4577.0], [55.9, 4577.0], [56.0, 4577.0], [56.1, 4577.0], [56.2, 4577.0], [56.3, 5056.0], [56.4, 5056.0], [56.5, 5056.0], [56.6, 5056.0], [56.7, 5056.0], [56.8, 5056.0], [56.9, 5250.0], [57.0, 5250.0], [57.1, 5250.0], [57.2, 5250.0], [57.3, 5250.0], [57.4, 5533.0], [57.5, 5533.0], [57.6, 5533.0], [57.7, 5533.0], [57.8, 5533.0], [57.9, 5533.0], [58.0, 5750.0], [58.1, 5750.0], [58.2, 5750.0], [58.3, 5750.0], [58.4, 5750.0], [58.5, 5750.0], [58.6, 5889.0], [58.7, 5889.0], [58.8, 5889.0], [58.9, 5889.0], [59.0, 5889.0], [59.1, 5889.0], [59.2, 6025.0], [59.3, 6025.0], [59.4, 6025.0], [59.5, 6025.0], [59.6, 6025.0], [59.7, 6025.0], [59.8, 6078.0], [59.9, 6078.0], [60.0, 6078.0], [60.1, 6078.0], [60.2, 6078.0], [60.3, 6078.0], [60.4, 6269.0], [60.5, 6269.0], [60.6, 6269.0], [60.7, 6269.0], [60.8, 6269.0], [60.9, 6269.0], [61.0, 6708.0], [61.1, 6708.0], [61.2, 6708.0], [61.3, 6708.0], [61.4, 6708.0], [61.5, 6708.0], [61.6, 6745.0], [61.7, 6745.0], [61.8, 6745.0], [61.9, 6745.0], [62.0, 6745.0], [62.1, 6745.0], [62.2, 7046.0], [62.3, 7046.0], [62.4, 7046.0], [62.5, 7046.0], [62.6, 7046.0], [62.7, 7046.0], [62.8, 7097.0], [62.9, 7097.0], [63.0, 7097.0], [63.1, 7097.0], [63.2, 7097.0], [63.3, 7097.0], [63.4, 7416.0], [63.5, 7416.0], [63.6, 7416.0], [63.7, 7416.0], [63.8, 7416.0], [63.9, 7416.0], [64.0, 7473.0], [64.1, 7473.0], [64.2, 7473.0], [64.3, 7473.0], [64.4, 7473.0], [64.5, 7577.0], [64.6, 7577.0], [64.7, 7577.0], [64.8, 7577.0], [64.9, 7577.0], [65.0, 7577.0], [65.1, 7641.0], [65.2, 7641.0], [65.3, 7641.0], [65.4, 7641.0], [65.5, 7641.0], [65.6, 7641.0], [65.7, 7642.0], [65.8, 7642.0], [65.9, 7642.0], [66.0, 7642.0], [66.1, 7642.0], [66.2, 7642.0], [66.3, 7643.0], [66.4, 7643.0], [66.5, 7643.0], [66.6, 7643.0], [66.7, 7643.0], [66.8, 7643.0], [66.9, 7792.0], [67.0, 7792.0], [67.1, 7792.0], [67.2, 7792.0], [67.3, 7792.0], [67.4, 7792.0], [67.5, 8150.0], [67.6, 8150.0], [67.7, 8150.0], [67.8, 8150.0], [67.9, 8150.0], [68.0, 8150.0], [68.1, 8533.0], [68.2, 8533.0], [68.3, 8533.0], [68.4, 8533.0], [68.5, 8533.0], [68.6, 8533.0], [68.7, 8545.0], [68.8, 8545.0], [68.9, 8545.0], [69.0, 8545.0], [69.1, 8545.0], [69.2, 8545.0], [69.3, 8819.0], [69.4, 8819.0], [69.5, 8819.0], [69.6, 8819.0], [69.7, 8819.0], [69.8, 8819.0], [69.9, 8821.0], [70.0, 8821.0], [70.1, 8821.0], [70.2, 8821.0], [70.3, 8821.0], [70.4, 8821.0], [70.5, 8854.0], [70.6, 8854.0], [70.7, 8854.0], [70.8, 8854.0], [70.9, 8854.0], [71.0, 8854.0], [71.1, 8959.0], [71.2, 8959.0], [71.3, 8959.0], [71.4, 8959.0], [71.5, 8959.0], [71.6, 9137.0], [71.7, 9137.0], [71.8, 9137.0], [71.9, 9137.0], [72.0, 9137.0], [72.1, 9137.0], [72.2, 9281.0], [72.3, 9281.0], [72.4, 9281.0], [72.5, 9281.0], [72.6, 9281.0], [72.7, 9281.0], [72.8, 9367.0], [72.9, 9367.0], [73.0, 9367.0], [73.1, 9367.0], [73.2, 9367.0], [73.3, 9367.0], [73.4, 9475.0], [73.5, 9475.0], [73.6, 9475.0], [73.7, 9475.0], [73.8, 9475.0], [73.9, 9475.0], [74.0, 9659.0], [74.1, 9659.0], [74.2, 9659.0], [74.3, 9659.0], [74.4, 9659.0], [74.5, 9659.0], [74.6, 9763.0], [74.7, 9763.0], [74.8, 9763.0], [74.9, 9763.0], [75.0, 9763.0], [75.1, 9763.0], [75.2, 9963.0], [75.3, 9963.0], [75.4, 9963.0], [75.5, 9963.0], [75.6, 9963.0], [75.7, 9963.0], [75.8, 10171.0], [75.9, 10171.0], [76.0, 10171.0], [76.1, 10171.0], [76.2, 10171.0], [76.3, 10171.0], [76.4, 11107.0], [76.5, 11107.0], [76.6, 11107.0], [76.7, 11107.0], [76.8, 11107.0], [76.9, 11107.0], [77.0, 11347.0], [77.1, 11347.0], [77.2, 11347.0], [77.3, 11347.0], [77.4, 11347.0], [77.5, 11347.0], [77.6, 11348.0], [77.7, 11348.0], [77.8, 11348.0], [77.9, 11348.0], [78.0, 11348.0], [78.1, 11348.0], [78.2, 11537.0], [78.3, 11537.0], [78.4, 11537.0], [78.5, 11537.0], [78.6, 11537.0], [78.7, 11633.0], [78.8, 11633.0], [78.9, 11633.0], [79.0, 11633.0], [79.1, 11633.0], [79.2, 11633.0], [79.3, 11735.0], [79.4, 11735.0], [79.5, 11735.0], [79.6, 11735.0], [79.7, 11735.0], [79.8, 11735.0], [79.9, 11840.0], [80.0, 11840.0], [80.1, 11840.0], [80.2, 11840.0], [80.3, 11840.0], [80.4, 11840.0], [80.5, 12575.0], [80.6, 12575.0], [80.7, 12575.0], [80.8, 12575.0], [80.9, 12575.0], [81.0, 12575.0], [81.1, 12588.0], [81.2, 12588.0], [81.3, 12588.0], [81.4, 12588.0], [81.5, 12588.0], [81.6, 12588.0], [81.7, 12680.0], [81.8, 12680.0], [81.9, 12680.0], [82.0, 12680.0], [82.1, 12680.0], [82.2, 12680.0], [82.3, 12908.0], [82.4, 12908.0], [82.5, 12908.0], [82.6, 12908.0], [82.7, 12908.0], [82.8, 12908.0], [82.9, 13026.0], [83.0, 13026.0], [83.1, 13026.0], [83.2, 13026.0], [83.3, 13026.0], [83.4, 13026.0], [83.5, 13193.0], [83.6, 13193.0], [83.7, 13193.0], [83.8, 13193.0], [83.9, 13193.0], [84.0, 13193.0], [84.1, 13224.0], [84.2, 13224.0], [84.3, 13224.0], [84.4, 13224.0], [84.5, 13224.0], [84.6, 13224.0], [84.7, 13548.0], [84.8, 13548.0], [84.9, 13548.0], [85.0, 13548.0], [85.1, 13548.0], [85.2, 13548.0], [85.3, 13605.0], [85.4, 13605.0], [85.5, 13605.0], [85.6, 13605.0], [85.7, 13605.0], [85.8, 13666.0], [85.9, 13666.0], [86.0, 13666.0], [86.1, 13666.0], [86.2, 13666.0], [86.3, 13666.0], [86.4, 13740.0], [86.5, 13740.0], [86.6, 13740.0], [86.7, 13740.0], [86.8, 13740.0], [86.9, 13740.0], [87.0, 14112.0], [87.1, 14112.0], [87.2, 14112.0], [87.3, 14112.0], [87.4, 14112.0], [87.5, 14112.0], [87.6, 15201.0], [87.7, 15201.0], [87.8, 15201.0], [87.9, 15201.0], [88.0, 15201.0], [88.1, 15201.0], [88.2, 15248.0], [88.3, 15248.0], [88.4, 15248.0], [88.5, 15248.0], [88.6, 15248.0], [88.7, 15248.0], [88.8, 15299.0], [88.9, 15299.0], [89.0, 15299.0], [89.1, 15299.0], [89.2, 15299.0], [89.3, 15299.0], [89.4, 15776.0], [89.5, 15776.0], [89.6, 15776.0], [89.7, 15776.0], [89.8, 15776.0], [89.9, 15776.0], [90.0, 16580.0], [90.1, 16580.0], [90.2, 16580.0], [90.3, 16580.0], [90.4, 16580.0], [90.5, 16580.0], [90.6, 16597.0], [90.7, 16597.0], [90.8, 16597.0], [90.9, 16597.0], [91.0, 16597.0], [91.1, 16597.0], [91.2, 17349.0], [91.3, 17349.0], [91.4, 17349.0], [91.5, 17349.0], [91.6, 17349.0], [91.7, 17349.0], [91.8, 17973.0], [91.9, 17973.0], [92.0, 17973.0], [92.1, 17973.0], [92.2, 17973.0], [92.3, 17973.0], [92.4, 18170.0], [92.5, 18170.0], [92.6, 18170.0], [92.7, 18170.0], [92.8, 18170.0], [92.9, 18446.0], [93.0, 18446.0], [93.1, 18446.0], [93.2, 18446.0], [93.3, 18446.0], [93.4, 18446.0], [93.5, 18571.0], [93.6, 18571.0], [93.7, 18571.0], [93.8, 18571.0], [93.9, 18571.0], [94.0, 18571.0], [94.1, 19183.0], [94.2, 19183.0], [94.3, 19183.0], [94.4, 19183.0], [94.5, 19183.0], [94.6, 19183.0], [94.7, 19260.0], [94.8, 19260.0], [94.9, 19260.0], [95.0, 19260.0], [95.1, 19260.0], [95.2, 19260.0], [95.3, 19866.0], [95.4, 19866.0], [95.5, 19866.0], [95.6, 19866.0], [95.7, 19866.0], [95.8, 19866.0], [95.9, 20314.0], [96.0, 20314.0], [96.1, 20314.0], [96.2, 20314.0], [96.3, 20314.0], [96.4, 20314.0], [96.5, 20710.0], [96.6, 20710.0], [96.7, 20710.0], [96.8, 20710.0], [96.9, 20710.0], [97.0, 20710.0], [97.1, 20729.0], [97.2, 20729.0], [97.3, 20729.0], [97.4, 20729.0], [97.5, 20729.0], [97.6, 20729.0], [97.7, 21886.0], [97.8, 21886.0], [97.9, 21886.0], [98.0, 21886.0], [98.1, 21886.0], [98.2, 21886.0], [98.3, 23317.0], [98.4, 23317.0], [98.5, 23317.0], [98.6, 23317.0], [98.7, 23317.0], [98.8, 23317.0], [98.9, 25201.0], [99.0, 25201.0], [99.1, 25201.0], [99.2, 25201.0], [99.3, 25201.0], [99.4, 25201.0], [99.5, 27299.0], [99.6, 27299.0], [99.7, 27299.0], [99.8, 27299.0], [99.9, 27299.0]], "isOverall": false, "label": "Modify User Info", "isController": false}, {"data": [[0.0, 77.0], [0.1, 77.0], [0.2, 77.0], [0.3, 77.0], [0.4, 77.0], [0.5, 77.0], [0.6, 87.0], [0.7, 87.0], [0.8, 87.0], [0.9, 87.0], [1.0, 87.0], [1.1, 87.0], [1.2, 98.0], [1.3, 98.0], [1.4, 98.0], [1.5, 98.0], [1.6, 98.0], [1.7, 98.0], [1.8, 119.0], [1.9, 119.0], [2.0, 119.0], [2.1, 119.0], [2.2, 119.0], [2.3, 119.0], [2.4, 119.0], [2.5, 119.0], [2.6, 119.0], [2.7, 119.0], [2.8, 119.0], [2.9, 119.0], [3.0, 125.0], [3.1, 125.0], [3.2, 125.0], [3.3, 125.0], [3.4, 125.0], [3.5, 125.0], [3.6, 126.0], [3.7, 126.0], [3.8, 126.0], [3.9, 126.0], [4.0, 126.0], [4.1, 126.0], [4.2, 126.0], [4.3, 126.0], [4.4, 126.0], [4.5, 126.0], [4.6, 126.0], [4.7, 126.0], [4.8, 131.0], [4.9, 131.0], [5.0, 131.0], [5.1, 131.0], [5.2, 131.0], [5.3, 131.0], [5.4, 132.0], [5.5, 132.0], [5.6, 132.0], [5.7, 132.0], [5.8, 132.0], [5.9, 132.0], [6.0, 134.0], [6.1, 134.0], [6.2, 134.0], [6.3, 134.0], [6.4, 134.0], [6.5, 134.0], [6.6, 134.0], [6.7, 134.0], [6.8, 134.0], [6.9, 134.0], [7.0, 134.0], [7.1, 134.0], [7.2, 135.0], [7.3, 135.0], [7.4, 135.0], [7.5, 135.0], [7.6, 135.0], [7.7, 146.0], [7.8, 146.0], [7.9, 146.0], [8.0, 146.0], [8.1, 146.0], [8.2, 146.0], [8.3, 151.0], [8.4, 151.0], [8.5, 151.0], [8.6, 151.0], [8.7, 151.0], [8.8, 151.0], [8.9, 154.0], [9.0, 154.0], [9.1, 154.0], [9.2, 154.0], [9.3, 154.0], [9.4, 154.0], [9.5, 166.0], [9.6, 166.0], [9.7, 166.0], [9.8, 166.0], [9.9, 166.0], [10.0, 166.0], [10.1, 167.0], [10.2, 167.0], [10.3, 167.0], [10.4, 167.0], [10.5, 167.0], [10.6, 167.0], [10.7, 195.0], [10.8, 195.0], [10.9, 195.0], [11.0, 195.0], [11.1, 195.0], [11.2, 195.0], [11.3, 211.0], [11.4, 211.0], [11.5, 211.0], [11.6, 211.0], [11.7, 211.0], [11.8, 211.0], [11.9, 213.0], [12.0, 213.0], [12.1, 213.0], [12.2, 213.0], [12.3, 213.0], [12.4, 213.0], [12.5, 218.0], [12.6, 218.0], [12.7, 218.0], [12.8, 218.0], [12.9, 218.0], [13.0, 218.0], [13.1, 227.0], [13.2, 227.0], [13.3, 227.0], [13.4, 227.0], [13.5, 227.0], [13.6, 227.0], [13.7, 260.0], [13.8, 260.0], [13.9, 260.0], [14.0, 260.0], [14.1, 260.0], [14.2, 260.0], [14.3, 264.0], [14.4, 264.0], [14.5, 264.0], [14.6, 264.0], [14.7, 264.0], [14.8, 264.0], [14.9, 264.0], [15.0, 264.0], [15.1, 264.0], [15.2, 264.0], [15.3, 264.0], [15.4, 264.0], [15.5, 264.0], [15.6, 264.0], [15.7, 264.0], [15.8, 264.0], [15.9, 264.0], [16.0, 290.0], [16.1, 290.0], [16.2, 290.0], [16.3, 290.0], [16.4, 290.0], [16.5, 290.0], [16.6, 299.0], [16.7, 299.0], [16.8, 299.0], [16.9, 299.0], [17.0, 299.0], [17.1, 299.0], [17.2, 329.0], [17.3, 329.0], [17.4, 329.0], [17.5, 329.0], [17.6, 329.0], [17.7, 329.0], [17.8, 415.0], [17.9, 415.0], [18.0, 415.0], [18.1, 415.0], [18.2, 415.0], [18.3, 415.0], [18.4, 420.0], [18.5, 420.0], [18.6, 420.0], [18.7, 420.0], [18.8, 420.0], [18.9, 420.0], [19.0, 425.0], [19.1, 425.0], [19.2, 425.0], [19.3, 425.0], [19.4, 425.0], [19.5, 425.0], [19.6, 440.0], [19.7, 440.0], [19.8, 440.0], [19.9, 440.0], [20.0, 440.0], [20.1, 440.0], [20.2, 474.0], [20.3, 474.0], [20.4, 474.0], [20.5, 474.0], [20.6, 474.0], [20.7, 474.0], [20.8, 475.0], [20.9, 475.0], [21.0, 475.0], [21.1, 475.0], [21.2, 475.0], [21.3, 475.0], [21.4, 477.0], [21.5, 477.0], [21.6, 477.0], [21.7, 477.0], [21.8, 477.0], [21.9, 481.0], [22.0, 481.0], [22.1, 481.0], [22.2, 481.0], [22.3, 481.0], [22.4, 481.0], [22.5, 482.0], [22.6, 482.0], [22.7, 482.0], [22.8, 482.0], [22.9, 482.0], [23.0, 482.0], [23.1, 499.0], [23.2, 499.0], [23.3, 499.0], [23.4, 499.0], [23.5, 499.0], [23.6, 499.0], [23.7, 499.0], [23.8, 499.0], [23.9, 499.0], [24.0, 499.0], [24.1, 499.0], [24.2, 499.0], [24.3, 520.0], [24.4, 520.0], [24.5, 520.0], [24.6, 520.0], [24.7, 520.0], [24.8, 520.0], [24.9, 535.0], [25.0, 535.0], [25.1, 535.0], [25.2, 535.0], [25.3, 535.0], [25.4, 535.0], [25.5, 571.0], [25.6, 571.0], [25.7, 571.0], [25.8, 571.0], [25.9, 571.0], [26.0, 571.0], [26.1, 574.0], [26.2, 574.0], [26.3, 574.0], [26.4, 574.0], [26.5, 574.0], [26.6, 574.0], [26.7, 576.0], [26.8, 576.0], [26.9, 576.0], [27.0, 576.0], [27.1, 576.0], [27.2, 576.0], [27.3, 579.0], [27.4, 579.0], [27.5, 579.0], [27.6, 579.0], [27.7, 579.0], [27.8, 579.0], [27.9, 596.0], [28.0, 596.0], [28.1, 596.0], [28.2, 596.0], [28.3, 596.0], [28.4, 596.0], [28.5, 691.0], [28.6, 691.0], [28.7, 691.0], [28.8, 691.0], [28.9, 691.0], [29.0, 716.0], [29.1, 716.0], [29.2, 716.0], [29.3, 716.0], [29.4, 716.0], [29.5, 716.0], [29.6, 747.0], [29.7, 747.0], [29.8, 747.0], [29.9, 747.0], [30.0, 747.0], [30.1, 747.0], [30.2, 771.0], [30.3, 771.0], [30.4, 771.0], [30.5, 771.0], [30.6, 771.0], [30.7, 771.0], [30.8, 778.0], [30.9, 778.0], [31.0, 778.0], [31.1, 778.0], [31.2, 778.0], [31.3, 778.0], [31.4, 861.0], [31.5, 861.0], [31.6, 861.0], [31.7, 861.0], [31.8, 861.0], [31.9, 861.0], [32.0, 868.0], [32.1, 868.0], [32.2, 868.0], [32.3, 868.0], [32.4, 868.0], [32.5, 868.0], [32.6, 887.0], [32.7, 887.0], [32.8, 887.0], [32.9, 887.0], [33.0, 887.0], [33.1, 887.0], [33.2, 1034.0], [33.3, 1034.0], [33.4, 1034.0], [33.5, 1034.0], [33.6, 1034.0], [33.7, 1034.0], [33.8, 1037.0], [33.9, 1037.0], [34.0, 1037.0], [34.1, 1037.0], [34.2, 1037.0], [34.3, 1037.0], [34.4, 1037.0], [34.5, 1037.0], [34.6, 1037.0], [34.7, 1037.0], [34.8, 1037.0], [34.9, 1037.0], [35.0, 1072.0], [35.1, 1072.0], [35.2, 1072.0], [35.3, 1072.0], [35.4, 1072.0], [35.5, 1072.0], [35.6, 1075.0], [35.7, 1075.0], [35.8, 1075.0], [35.9, 1075.0], [36.0, 1075.0], [36.1, 1084.0], [36.2, 1084.0], [36.3, 1084.0], [36.4, 1084.0], [36.5, 1084.0], [36.6, 1084.0], [36.7, 1144.0], [36.8, 1144.0], [36.9, 1144.0], [37.0, 1144.0], [37.1, 1144.0], [37.2, 1144.0], [37.3, 1158.0], [37.4, 1158.0], [37.5, 1158.0], [37.6, 1158.0], [37.7, 1158.0], [37.8, 1158.0], [37.9, 1201.0], [38.0, 1201.0], [38.1, 1201.0], [38.2, 1201.0], [38.3, 1201.0], [38.4, 1201.0], [38.5, 1236.0], [38.6, 1236.0], [38.7, 1236.0], [38.8, 1236.0], [38.9, 1236.0], [39.0, 1236.0], [39.1, 1477.0], [39.2, 1477.0], [39.3, 1477.0], [39.4, 1477.0], [39.5, 1477.0], [39.6, 1477.0], [39.7, 1493.0], [39.8, 1493.0], [39.9, 1493.0], [40.0, 1493.0], [40.1, 1493.0], [40.2, 1493.0], [40.3, 1589.0], [40.4, 1589.0], [40.5, 1589.0], [40.6, 1589.0], [40.7, 1589.0], [40.8, 1589.0], [40.9, 1729.0], [41.0, 1729.0], [41.1, 1729.0], [41.2, 1729.0], [41.3, 1729.0], [41.4, 1729.0], [41.5, 2425.0], [41.6, 2425.0], [41.7, 2425.0], [41.8, 2425.0], [41.9, 2425.0], [42.0, 2425.0], [42.1, 2526.0], [42.2, 2526.0], [42.3, 2526.0], [42.4, 2526.0], [42.5, 2526.0], [42.6, 2526.0], [42.7, 2539.0], [42.8, 2539.0], [42.9, 2539.0], [43.0, 2539.0], [43.1, 2539.0], [43.2, 2539.0], [43.3, 2539.0], [43.4, 2539.0], [43.5, 2539.0], [43.6, 2539.0], [43.7, 2539.0], [43.8, 2539.0], [43.9, 2539.0], [44.0, 2539.0], [44.1, 2539.0], [44.2, 2539.0], [44.3, 2539.0], [44.4, 3130.0], [44.5, 3130.0], [44.6, 3130.0], [44.7, 3130.0], [44.8, 3130.0], [44.9, 3130.0], [45.0, 3131.0], [45.1, 3131.0], [45.2, 3131.0], [45.3, 3131.0], [45.4, 3131.0], [45.5, 3131.0], [45.6, 3143.0], [45.7, 3143.0], [45.8, 3143.0], [45.9, 3143.0], [46.0, 3143.0], [46.1, 3143.0], [46.2, 3145.0], [46.3, 3145.0], [46.4, 3145.0], [46.5, 3145.0], [46.6, 3145.0], [46.7, 3145.0], [46.8, 3158.0], [46.9, 3158.0], [47.0, 3158.0], [47.1, 3158.0], [47.2, 3158.0], [47.3, 3158.0], [47.4, 3159.0], [47.5, 3159.0], [47.6, 3159.0], [47.7, 3159.0], [47.8, 3159.0], [47.9, 3159.0], [48.0, 3163.0], [48.1, 3163.0], [48.2, 3163.0], [48.3, 3163.0], [48.4, 3163.0], [48.5, 3163.0], [48.6, 3164.0], [48.7, 3164.0], [48.8, 3164.0], [48.9, 3164.0], [49.0, 3164.0], [49.1, 3164.0], [49.2, 3165.0], [49.3, 3165.0], [49.4, 3165.0], [49.5, 3165.0], [49.6, 3165.0], [49.7, 3165.0], [49.8, 3179.0], [49.9, 3179.0], [50.0, 3179.0], [50.1, 3179.0], [50.2, 3179.0], [50.3, 3269.0], [50.4, 3269.0], [50.5, 3269.0], [50.6, 3269.0], [50.7, 3269.0], [50.8, 3269.0], [50.9, 3458.0], [51.0, 3458.0], [51.1, 3458.0], [51.2, 3458.0], [51.3, 3458.0], [51.4, 3458.0], [51.5, 3567.0], [51.6, 3567.0], [51.7, 3567.0], [51.8, 3567.0], [51.9, 3567.0], [52.0, 3567.0], [52.1, 4108.0], [52.2, 4108.0], [52.3, 4108.0], [52.4, 4108.0], [52.5, 4108.0], [52.6, 4108.0], [52.7, 4190.0], [52.8, 4190.0], [52.9, 4190.0], [53.0, 4190.0], [53.1, 4190.0], [53.2, 4190.0], [53.3, 4190.0], [53.4, 4190.0], [53.5, 4190.0], [53.6, 4190.0], [53.7, 4190.0], [53.8, 4190.0], [53.9, 4191.0], [54.0, 4191.0], [54.1, 4191.0], [54.2, 4191.0], [54.3, 4191.0], [54.4, 4191.0], [54.5, 4191.0], [54.6, 4191.0], [54.7, 4191.0], [54.8, 4191.0], [54.9, 4191.0], [55.0, 4191.0], [55.1, 4191.0], [55.2, 4191.0], [55.3, 4191.0], [55.4, 4191.0], [55.5, 4191.0], [55.6, 4191.0], [55.7, 4577.0], [55.8, 4577.0], [55.9, 4577.0], [56.0, 4577.0], [56.1, 4577.0], [56.2, 4577.0], [56.3, 5056.0], [56.4, 5056.0], [56.5, 5056.0], [56.6, 5056.0], [56.7, 5056.0], [56.8, 5056.0], [56.9, 5250.0], [57.0, 5250.0], [57.1, 5250.0], [57.2, 5250.0], [57.3, 5250.0], [57.4, 5533.0], [57.5, 5533.0], [57.6, 5533.0], [57.7, 5533.0], [57.8, 5533.0], [57.9, 5533.0], [58.0, 5750.0], [58.1, 5750.0], [58.2, 5750.0], [58.3, 5750.0], [58.4, 5750.0], [58.5, 5750.0], [58.6, 5889.0], [58.7, 5889.0], [58.8, 5889.0], [58.9, 5889.0], [59.0, 5889.0], [59.1, 5889.0], [59.2, 6025.0], [59.3, 6025.0], [59.4, 6025.0], [59.5, 6025.0], [59.6, 6025.0], [59.7, 6025.0], [59.8, 6078.0], [59.9, 6078.0], [60.0, 6078.0], [60.1, 6078.0], [60.2, 6078.0], [60.3, 6078.0], [60.4, 6269.0], [60.5, 6269.0], [60.6, 6269.0], [60.7, 6269.0], [60.8, 6269.0], [60.9, 6269.0], [61.0, 6708.0], [61.1, 6708.0], [61.2, 6708.0], [61.3, 6708.0], [61.4, 6708.0], [61.5, 6708.0], [61.6, 6745.0], [61.7, 6745.0], [61.8, 6745.0], [61.9, 6745.0], [62.0, 6745.0], [62.1, 6745.0], [62.2, 7046.0], [62.3, 7046.0], [62.4, 7046.0], [62.5, 7046.0], [62.6, 7046.0], [62.7, 7046.0], [62.8, 7097.0], [62.9, 7097.0], [63.0, 7097.0], [63.1, 7097.0], [63.2, 7097.0], [63.3, 7097.0], [63.4, 7416.0], [63.5, 7416.0], [63.6, 7416.0], [63.7, 7416.0], [63.8, 7416.0], [63.9, 7416.0], [64.0, 7473.0], [64.1, 7473.0], [64.2, 7473.0], [64.3, 7473.0], [64.4, 7473.0], [64.5, 7577.0], [64.6, 7577.0], [64.7, 7577.0], [64.8, 7577.0], [64.9, 7577.0], [65.0, 7577.0], [65.1, 7641.0], [65.2, 7641.0], [65.3, 7641.0], [65.4, 7641.0], [65.5, 7641.0], [65.6, 7641.0], [65.7, 7642.0], [65.8, 7642.0], [65.9, 7642.0], [66.0, 7642.0], [66.1, 7642.0], [66.2, 7642.0], [66.3, 7643.0], [66.4, 7643.0], [66.5, 7643.0], [66.6, 7643.0], [66.7, 7643.0], [66.8, 7643.0], [66.9, 7792.0], [67.0, 7792.0], [67.1, 7792.0], [67.2, 7792.0], [67.3, 7792.0], [67.4, 7792.0], [67.5, 8150.0], [67.6, 8150.0], [67.7, 8150.0], [67.8, 8150.0], [67.9, 8150.0], [68.0, 8150.0], [68.1, 8533.0], [68.2, 8533.0], [68.3, 8533.0], [68.4, 8533.0], [68.5, 8533.0], [68.6, 8533.0], [68.7, 8545.0], [68.8, 8545.0], [68.9, 8545.0], [69.0, 8545.0], [69.1, 8545.0], [69.2, 8545.0], [69.3, 8819.0], [69.4, 8819.0], [69.5, 8819.0], [69.6, 8819.0], [69.7, 8819.0], [69.8, 8819.0], [69.9, 8821.0], [70.0, 8821.0], [70.1, 8821.0], [70.2, 8821.0], [70.3, 8821.0], [70.4, 8821.0], [70.5, 8854.0], [70.6, 8854.0], [70.7, 8854.0], [70.8, 8854.0], [70.9, 8854.0], [71.0, 8854.0], [71.1, 8959.0], [71.2, 8959.0], [71.3, 8959.0], [71.4, 8959.0], [71.5, 8959.0], [71.6, 9137.0], [71.7, 9137.0], [71.8, 9137.0], [71.9, 9137.0], [72.0, 9137.0], [72.1, 9137.0], [72.2, 9281.0], [72.3, 9281.0], [72.4, 9281.0], [72.5, 9281.0], [72.6, 9281.0], [72.7, 9281.0], [72.8, 9367.0], [72.9, 9367.0], [73.0, 9367.0], [73.1, 9367.0], [73.2, 9367.0], [73.3, 9367.0], [73.4, 9475.0], [73.5, 9475.0], [73.6, 9475.0], [73.7, 9475.0], [73.8, 9475.0], [73.9, 9475.0], [74.0, 9659.0], [74.1, 9659.0], [74.2, 9659.0], [74.3, 9659.0], [74.4, 9659.0], [74.5, 9659.0], [74.6, 9763.0], [74.7, 9763.0], [74.8, 9763.0], [74.9, 9763.0], [75.0, 9763.0], [75.1, 9763.0], [75.2, 9963.0], [75.3, 9963.0], [75.4, 9963.0], [75.5, 9963.0], [75.6, 9963.0], [75.7, 9963.0], [75.8, 10171.0], [75.9, 10171.0], [76.0, 10171.0], [76.1, 10171.0], [76.2, 10171.0], [76.3, 10171.0], [76.4, 11107.0], [76.5, 11107.0], [76.6, 11107.0], [76.7, 11107.0], [76.8, 11107.0], [76.9, 11107.0], [77.0, 11347.0], [77.1, 11347.0], [77.2, 11347.0], [77.3, 11347.0], [77.4, 11347.0], [77.5, 11347.0], [77.6, 11348.0], [77.7, 11348.0], [77.8, 11348.0], [77.9, 11348.0], [78.0, 11348.0], [78.1, 11348.0], [78.2, 11537.0], [78.3, 11537.0], [78.4, 11537.0], [78.5, 11537.0], [78.6, 11537.0], [78.7, 11633.0], [78.8, 11633.0], [78.9, 11633.0], [79.0, 11633.0], [79.1, 11633.0], [79.2, 11633.0], [79.3, 11735.0], [79.4, 11735.0], [79.5, 11735.0], [79.6, 11735.0], [79.7, 11735.0], [79.8, 11735.0], [79.9, 11840.0], [80.0, 11840.0], [80.1, 11840.0], [80.2, 11840.0], [80.3, 11840.0], [80.4, 11840.0], [80.5, 12575.0], [80.6, 12575.0], [80.7, 12575.0], [80.8, 12575.0], [80.9, 12575.0], [81.0, 12575.0], [81.1, 12588.0], [81.2, 12588.0], [81.3, 12588.0], [81.4, 12588.0], [81.5, 12588.0], [81.6, 12588.0], [81.7, 12680.0], [81.8, 12680.0], [81.9, 12680.0], [82.0, 12680.0], [82.1, 12680.0], [82.2, 12680.0], [82.3, 12908.0], [82.4, 12908.0], [82.5, 12908.0], [82.6, 12908.0], [82.7, 12908.0], [82.8, 12908.0], [82.9, 13026.0], [83.0, 13026.0], [83.1, 13026.0], [83.2, 13026.0], [83.3, 13026.0], [83.4, 13026.0], [83.5, 13193.0], [83.6, 13193.0], [83.7, 13193.0], [83.8, 13193.0], [83.9, 13193.0], [84.0, 13193.0], [84.1, 13224.0], [84.2, 13224.0], [84.3, 13224.0], [84.4, 13224.0], [84.5, 13224.0], [84.6, 13224.0], [84.7, 13548.0], [84.8, 13548.0], [84.9, 13548.0], [85.0, 13548.0], [85.1, 13548.0], [85.2, 13548.0], [85.3, 13605.0], [85.4, 13605.0], [85.5, 13605.0], [85.6, 13605.0], [85.7, 13605.0], [85.8, 13666.0], [85.9, 13666.0], [86.0, 13666.0], [86.1, 13666.0], [86.2, 13666.0], [86.3, 13666.0], [86.4, 13740.0], [86.5, 13740.0], [86.6, 13740.0], [86.7, 13740.0], [86.8, 13740.0], [86.9, 13740.0], [87.0, 14112.0], [87.1, 14112.0], [87.2, 14112.0], [87.3, 14112.0], [87.4, 14112.0], [87.5, 14112.0], [87.6, 15201.0], [87.7, 15201.0], [87.8, 15201.0], [87.9, 15201.0], [88.0, 15201.0], [88.1, 15201.0], [88.2, 15248.0], [88.3, 15248.0], [88.4, 15248.0], [88.5, 15248.0], [88.6, 15248.0], [88.7, 15248.0], [88.8, 15299.0], [88.9, 15299.0], [89.0, 15299.0], [89.1, 15299.0], [89.2, 15299.0], [89.3, 15299.0], [89.4, 15776.0], [89.5, 15776.0], [89.6, 15776.0], [89.7, 15776.0], [89.8, 15776.0], [89.9, 15776.0], [90.0, 16580.0], [90.1, 16580.0], [90.2, 16580.0], [90.3, 16580.0], [90.4, 16580.0], [90.5, 16580.0], [90.6, 16597.0], [90.7, 16597.0], [90.8, 16597.0], [90.9, 16597.0], [91.0, 16597.0], [91.1, 16597.0], [91.2, 17349.0], [91.3, 17349.0], [91.4, 17349.0], [91.5, 17349.0], [91.6, 17349.0], [91.7, 17349.0], [91.8, 17973.0], [91.9, 17973.0], [92.0, 17973.0], [92.1, 17973.0], [92.2, 17973.0], [92.3, 17973.0], [92.4, 18170.0], [92.5, 18170.0], [92.6, 18170.0], [92.7, 18170.0], [92.8, 18170.0], [92.9, 18446.0], [93.0, 18446.0], [93.1, 18446.0], [93.2, 18446.0], [93.3, 18446.0], [93.4, 18446.0], [93.5, 18571.0], [93.6, 18571.0], [93.7, 18571.0], [93.8, 18571.0], [93.9, 18571.0], [94.0, 18571.0], [94.1, 19183.0], [94.2, 19183.0], [94.3, 19183.0], [94.4, 19183.0], [94.5, 19183.0], [94.6, 19183.0], [94.7, 19260.0], [94.8, 19260.0], [94.9, 19260.0], [95.0, 19260.0], [95.1, 19260.0], [95.2, 19260.0], [95.3, 19866.0], [95.4, 19866.0], [95.5, 19866.0], [95.6, 19866.0], [95.7, 19866.0], [95.8, 19866.0], [95.9, 20314.0], [96.0, 20314.0], [96.1, 20314.0], [96.2, 20314.0], [96.3, 20314.0], [96.4, 20314.0], [96.5, 20710.0], [96.6, 20710.0], [96.7, 20710.0], [96.8, 20710.0], [96.9, 20710.0], [97.0, 20710.0], [97.1, 20729.0], [97.2, 20729.0], [97.3, 20729.0], [97.4, 20729.0], [97.5, 20729.0], [97.6, 20729.0], [97.7, 21886.0], [97.8, 21886.0], [97.9, 21886.0], [98.0, 21886.0], [98.1, 21886.0], [98.2, 21886.0], [98.3, 23317.0], [98.4, 23317.0], [98.5, 23317.0], [98.6, 23317.0], [98.7, 23317.0], [98.8, 23317.0], [98.9, 25201.0], [99.0, 25201.0], [99.1, 25201.0], [99.2, 25201.0], [99.3, 25201.0], [99.4, 25201.0], [99.5, 27299.0], [99.6, 27299.0], [99.7, 27299.0], [99.8, 27299.0], [99.9, 27299.0]], "isOverall": false, "label": "Modify User Infomation", "isController": true}, {"data": [[0.0, 2342.0], [0.1, 2342.0], [0.2, 2342.0], [0.3, 3049.0], [0.4, 3049.0], [0.5, 3049.0], [0.6, 3362.0], [0.7, 3362.0], [0.8, 3362.0], [0.9, 3538.0], [1.0, 3538.0], [1.1, 3718.0], [1.2, 3718.0], [1.3, 3718.0], [1.4, 3731.0], [1.5, 3731.0], [1.6, 3731.0], [1.7, 3745.0], [1.8, 3745.0], [1.9, 3839.0], [2.0, 3839.0], [2.1, 3839.0], [2.2, 4269.0], [2.3, 4269.0], [2.4, 4269.0], [2.5, 4847.0], [2.6, 4847.0], [2.7, 4847.0], [2.8, 4997.0], [2.9, 4997.0], [3.0, 5149.0], [3.1, 5149.0], [3.2, 5149.0], [3.3, 5154.0], [3.4, 5154.0], [3.5, 5154.0], [3.6, 5163.0], [3.7, 5163.0], [3.8, 5475.0], [3.9, 5475.0], [4.0, 5475.0], [4.1, 5564.0], [4.2, 5564.0], [4.3, 5564.0], [4.4, 5703.0], [4.5, 5703.0], [4.6, 5703.0], [4.7, 5833.0], [4.8, 5833.0], [4.9, 5851.0], [5.0, 5851.0], [5.1, 5851.0], [5.2, 6250.0], [5.3, 6250.0], [5.4, 6250.0], [5.5, 6652.0], [5.6, 6652.0], [5.7, 6679.0], [5.8, 6679.0], [5.9, 6679.0], [6.0, 6864.0], [6.1, 6864.0], [6.2, 6864.0], [6.3, 6944.0], [6.4, 6944.0], [6.5, 6944.0], [6.6, 6979.0], [6.7, 6979.0], [6.8, 7384.0], [6.9, 7384.0], [7.0, 7384.0], [7.1, 7552.0], [7.2, 7552.0], [7.3, 7552.0], [7.4, 7578.0], [7.5, 7578.0], [7.6, 7648.0], [7.7, 7648.0], [7.8, 7648.0], [7.9, 7700.0], [8.0, 7700.0], [8.1, 7700.0], [8.2, 7723.0], [8.3, 7723.0], [8.4, 7723.0], [8.5, 7728.0], [8.6, 7728.0], [8.7, 7743.0], [8.8, 7743.0], [8.9, 7743.0], [9.0, 7855.0], [9.1, 7855.0], [9.2, 7855.0], [9.3, 7896.0], [9.4, 7896.0], [9.5, 8503.0], [9.6, 8503.0], [9.7, 8503.0], [9.8, 8603.0], [9.9, 8603.0], [10.0, 8603.0], [10.1, 8654.0], [10.2, 8654.0], [10.3, 8753.0], [10.4, 8753.0], [10.5, 8753.0], [10.6, 8839.0], [10.7, 8839.0], [10.8, 8839.0], [10.9, 8921.0], [11.0, 8921.0], [11.1, 8921.0], [11.2, 9040.0], [11.3, 9040.0], [11.4, 9047.0], [11.5, 9047.0], [11.6, 9047.0], [11.7, 9197.0], [11.8, 9197.0], [11.9, 9197.0], [12.0, 9342.0], [12.1, 9342.0], [12.2, 9392.0], [12.3, 9392.0], [12.4, 9392.0], [12.5, 9460.0], [12.6, 9460.0], [12.7, 9460.0], [12.8, 9492.0], [12.9, 9492.0], [13.0, 9492.0], [13.1, 9567.0], [13.2, 9567.0], [13.3, 9577.0], [13.4, 9577.0], [13.5, 9577.0], [13.6, 9599.0], [13.7, 9599.0], [13.8, 9599.0], [13.9, 9616.0], [14.0, 9616.0], [14.1, 9643.0], [14.2, 9643.0], [14.3, 9643.0], [14.4, 9698.0], [14.5, 9698.0], [14.6, 9698.0], [14.7, 9798.0], [14.8, 9798.0], [14.9, 9798.0], [15.0, 9802.0], [15.1, 9802.0], [15.2, 9882.0], [15.3, 9882.0], [15.4, 9882.0], [15.5, 9888.0], [15.6, 9888.0], [15.7, 9888.0], [15.8, 9924.0], [15.9, 9924.0], [16.0, 9940.0], [16.1, 9940.0], [16.2, 9940.0], [16.3, 9945.0], [16.4, 9945.0], [16.5, 9945.0], [16.6, 9952.0], [16.7, 9952.0], [16.8, 9952.0], [16.9, 9977.0], [17.0, 9977.0], [17.1, 10100.0], [17.2, 10100.0], [17.3, 10100.0], [17.4, 10117.0], [17.5, 10117.0], [17.6, 10117.0], [17.7, 10118.0], [17.8, 10118.0], [17.9, 10194.0], [18.0, 10194.0], [18.1, 10194.0], [18.2, 10206.0], [18.3, 10206.0], [18.4, 10206.0], [18.5, 10229.0], [18.6, 10229.0], [18.7, 10245.0], [18.8, 10245.0], [18.9, 10245.0], [19.0, 10282.0], [19.1, 10282.0], [19.2, 10282.0], [19.3, 10328.0], [19.4, 10328.0], [19.5, 10328.0], [19.6, 10347.0], [19.7, 10347.0], [19.8, 10376.0], [19.9, 10376.0], [20.0, 10376.0], [20.1, 10409.0], [20.2, 10409.0], [20.3, 10409.0], [20.4, 10443.0], [20.5, 10443.0], [20.6, 10453.0], [20.7, 10453.0], [20.8, 10453.0], [20.9, 10592.0], [21.0, 10592.0], [21.1, 10592.0], [21.2, 10616.0], [21.3, 10616.0], [21.4, 10616.0], [21.5, 10630.0], [21.6, 10630.0], [21.7, 10652.0], [21.8, 10652.0], [21.9, 10652.0], [22.0, 10700.0], [22.1, 10700.0], [22.2, 10700.0], [22.3, 10701.0], [22.4, 10701.0], [22.5, 10718.0], [22.6, 10718.0], [22.7, 10718.0], [22.8, 10725.0], [22.9, 10725.0], [23.0, 10725.0], [23.1, 10839.0], [23.2, 10839.0], [23.3, 10839.0], [23.4, 10861.0], [23.5, 10861.0], [23.6, 10874.0], [23.7, 10874.0], [23.8, 10874.0], [23.9, 10893.0], [24.0, 10893.0], [24.1, 10893.0], [24.2, 10922.0], [24.3, 10922.0], [24.4, 10922.0], [24.5, 10922.0], [24.6, 10922.0], [24.7, 10947.0], [24.8, 10947.0], [24.9, 10947.0], [25.0, 10952.0], [25.1, 10952.0], [25.2, 10952.0], [25.3, 10983.0], [25.4, 10983.0], [25.5, 11086.0], [25.6, 11086.0], [25.7, 11086.0], [25.8, 11156.0], [25.9, 11156.0], [26.0, 11156.0], [26.1, 11156.0], [26.2, 11156.0], [26.3, 11187.0], [26.4, 11187.0], [26.5, 11187.0], [26.6, 11191.0], [26.7, 11191.0], [26.8, 11191.0], [26.9, 11204.0], [27.0, 11204.0], [27.1, 11204.0], [27.2, 11240.0], [27.3, 11240.0], [27.4, 11257.0], [27.5, 11257.0], [27.6, 11257.0], [27.7, 11264.0], [27.8, 11264.0], [27.9, 11264.0], [28.0, 11268.0], [28.1, 11268.0], [28.2, 11284.0], [28.3, 11284.0], [28.4, 11284.0], [28.5, 11286.0], [28.6, 11286.0], [28.7, 11286.0], [28.8, 11317.0], [28.9, 11317.0], [29.0, 11353.0], [29.1, 11353.0], [29.2, 11353.0], [29.3, 11365.0], [29.4, 11365.0], [29.5, 11365.0], [29.6, 11387.0], [29.7, 11387.0], [29.8, 11387.0], [29.9, 11389.0], [30.0, 11389.0], [30.1, 11398.0], [30.2, 11398.0], [30.3, 11398.0], [30.4, 11454.0], [30.5, 11454.0], [30.6, 11454.0], [30.7, 11464.0], [30.8, 11464.0], [30.9, 11515.0], [31.0, 11515.0], [31.1, 11515.0], [31.2, 11516.0], [31.3, 11516.0], [31.4, 11516.0], [31.5, 11582.0], [31.6, 11582.0], [31.7, 11582.0], [31.8, 11656.0], [31.9, 11656.0], [32.0, 11875.0], [32.1, 11875.0], [32.2, 11875.0], [32.3, 11896.0], [32.4, 11896.0], [32.5, 11896.0], [32.6, 11914.0], [32.7, 11914.0], [32.8, 11988.0], [32.9, 11988.0], [33.0, 11988.0], [33.1, 12169.0], [33.2, 12169.0], [33.3, 12169.0], [33.4, 12182.0], [33.5, 12182.0], [33.6, 12182.0], [33.7, 12315.0], [33.8, 12315.0], [33.9, 12319.0], [34.0, 12319.0], [34.1, 12319.0], [34.2, 12357.0], [34.3, 12357.0], [34.4, 12357.0], [34.5, 12370.0], [34.6, 12370.0], [34.7, 12375.0], [34.8, 12375.0], [34.9, 12375.0], [35.0, 12388.0], [35.1, 12388.0], [35.2, 12388.0], [35.3, 12397.0], [35.4, 12397.0], [35.5, 12397.0], [35.6, 12440.0], [35.7, 12440.0], [35.8, 12449.0], [35.9, 12449.0], [36.0, 12449.0], [36.1, 12544.0], [36.2, 12544.0], [36.3, 12544.0], [36.4, 12593.0], [36.5, 12593.0], [36.6, 12594.0], [36.7, 12594.0], [36.8, 12594.0], [36.9, 12627.0], [37.0, 12627.0], [37.1, 12627.0], [37.2, 12652.0], [37.3, 12652.0], [37.4, 12682.0], [37.5, 12682.0], [37.6, 12682.0], [37.7, 12686.0], [37.8, 12686.0], [37.9, 12686.0], [38.0, 12708.0], [38.1, 12708.0], [38.2, 12708.0], [38.3, 12709.0], [38.4, 12709.0], [38.5, 12737.0], [38.6, 12737.0], [38.7, 12737.0], [38.8, 12763.0], [38.9, 12763.0], [39.0, 12763.0], [39.1, 12833.0], [39.2, 12833.0], [39.3, 12848.0], [39.4, 12848.0], [39.5, 12848.0], [39.6, 12864.0], [39.7, 12864.0], [39.8, 12864.0], [39.9, 12932.0], [40.0, 12932.0], [40.1, 12932.0], [40.2, 13057.0], [40.3, 13057.0], [40.4, 13085.0], [40.5, 13085.0], [40.6, 13085.0], [40.7, 13140.0], [40.8, 13140.0], [40.9, 13140.0], [41.0, 13142.0], [41.1, 13142.0], [41.2, 13191.0], [41.3, 13191.0], [41.4, 13191.0], [41.5, 13220.0], [41.6, 13220.0], [41.7, 13220.0], [41.8, 13221.0], [41.9, 13221.0], [42.0, 13221.0], [42.1, 13374.0], [42.2, 13374.0], [42.3, 13439.0], [42.4, 13439.0], [42.5, 13439.0], [42.6, 13479.0], [42.7, 13479.0], [42.8, 13479.0], [42.9, 13904.0], [43.0, 13904.0], [43.1, 13976.0], [43.2, 13976.0], [43.3, 13976.0], [43.4, 14089.0], [43.5, 14089.0], [43.6, 14089.0], [43.7, 14189.0], [43.8, 14189.0], [43.9, 14189.0], [44.0, 14256.0], [44.1, 14256.0], [44.2, 14467.0], [44.3, 14467.0], [44.4, 14467.0], [44.5, 14498.0], [44.6, 14498.0], [44.7, 14498.0], [44.8, 14546.0], [44.9, 14546.0], [45.0, 14573.0], [45.1, 14573.0], [45.2, 14573.0], [45.3, 14586.0], [45.4, 14586.0], [45.5, 14586.0], [45.6, 14641.0], [45.7, 14641.0], [45.8, 14677.0], [45.9, 14677.0], [46.0, 14677.0], [46.1, 14679.0], [46.2, 14679.0], [46.3, 14679.0], [46.4, 14775.0], [46.5, 14775.0], [46.6, 14775.0], [46.7, 14791.0], [46.8, 14791.0], [46.9, 14791.0], [47.0, 14791.0], [47.1, 14791.0], [47.2, 14889.0], [47.3, 14889.0], [47.4, 14889.0], [47.5, 14962.0], [47.6, 14962.0], [47.7, 14971.0], [47.8, 14971.0], [47.9, 14971.0], [48.0, 15057.0], [48.1, 15057.0], [48.2, 15057.0], [48.3, 15133.0], [48.4, 15133.0], [48.5, 15133.0], [48.6, 15134.0], [48.7, 15134.0], [48.8, 15155.0], [48.9, 15155.0], [49.0, 15155.0], [49.1, 15183.0], [49.2, 15183.0], [49.3, 15183.0], [49.4, 15204.0], [49.5, 15204.0], [49.6, 15260.0], [49.7, 15260.0], [49.8, 15260.0], [49.9, 15330.0], [50.0, 15330.0], [50.1, 15330.0], [50.2, 15357.0], [50.3, 15357.0], [50.4, 15357.0], [50.5, 15411.0], [50.6, 15411.0], [50.7, 15421.0], [50.8, 15421.0], [50.9, 15421.0], [51.0, 15472.0], [51.1, 15472.0], [51.2, 15472.0], [51.3, 15509.0], [51.4, 15509.0], [51.5, 15667.0], [51.6, 15667.0], [51.7, 15667.0], [51.8, 15719.0], [51.9, 15719.0], [52.0, 15719.0], [52.1, 15771.0], [52.2, 15771.0], [52.3, 15771.0], [52.4, 15799.0], [52.5, 15799.0], [52.6, 15946.0], [52.7, 15946.0], [52.8, 15946.0], [52.9, 15975.0], [53.0, 15975.0], [53.1, 15975.0], [53.2, 16024.0], [53.3, 16024.0], [53.4, 16033.0], [53.5, 16033.0], [53.6, 16033.0], [53.7, 16071.0], [53.8, 16071.0], [53.9, 16071.0], [54.0, 16105.0], [54.1, 16105.0], [54.2, 16105.0], [54.3, 16107.0], [54.4, 16107.0], [54.5, 16108.0], [54.6, 16108.0], [54.7, 16108.0], [54.8, 16122.0], [54.9, 16122.0], [55.0, 16122.0], [55.1, 16123.0], [55.2, 16123.0], [55.3, 16146.0], [55.4, 16146.0], [55.5, 16146.0], [55.6, 16165.0], [55.7, 16165.0], [55.8, 16165.0], [55.9, 16178.0], [56.0, 16178.0], [56.1, 16314.0], [56.2, 16314.0], [56.3, 16314.0], [56.4, 16426.0], [56.5, 16426.0], [56.6, 16426.0], [56.7, 16492.0], [56.8, 16492.0], [56.9, 16492.0], [57.0, 16546.0], [57.1, 16546.0], [57.2, 16596.0], [57.3, 16596.0], [57.4, 16596.0], [57.5, 16608.0], [57.6, 16608.0], [57.7, 16608.0], [57.8, 16638.0], [57.9, 16638.0], [58.0, 16645.0], [58.1, 16645.0], [58.2, 16645.0], [58.3, 16651.0], [58.4, 16651.0], [58.5, 16651.0], [58.6, 16653.0], [58.7, 16653.0], [58.8, 16653.0], [58.9, 16687.0], [59.0, 16687.0], [59.1, 16720.0], [59.2, 16720.0], [59.3, 16720.0], [59.4, 16765.0], [59.5, 16765.0], [59.6, 16765.0], [59.7, 16775.0], [59.8, 16775.0], [59.9, 16776.0], [60.0, 16776.0], [60.1, 16776.0], [60.2, 16851.0], [60.3, 16851.0], [60.4, 16851.0], [60.5, 16909.0], [60.6, 16909.0], [60.7, 16909.0], [60.8, 16970.0], [60.9, 16970.0], [61.0, 17021.0], [61.1, 17021.0], [61.2, 17021.0], [61.3, 17025.0], [61.4, 17025.0], [61.5, 17025.0], [61.6, 17048.0], [61.7, 17048.0], [61.8, 17125.0], [61.9, 17125.0], [62.0, 17125.0], [62.1, 17129.0], [62.2, 17129.0], [62.3, 17129.0], [62.4, 17265.0], [62.5, 17265.0], [62.6, 17265.0], [62.7, 17269.0], [62.8, 17269.0], [62.9, 17279.0], [63.0, 17279.0], [63.1, 17279.0], [63.2, 17285.0], [63.3, 17285.0], [63.4, 17285.0], [63.5, 17311.0], [63.6, 17311.0], [63.7, 17352.0], [63.8, 17352.0], [63.9, 17352.0], [64.0, 17354.0], [64.1, 17354.0], [64.2, 17354.0], [64.3, 17364.0], [64.4, 17364.0], [64.5, 17366.0], [64.6, 17366.0], [64.7, 17366.0], [64.8, 17436.0], [64.9, 17436.0], [65.0, 17436.0], [65.1, 17449.0], [65.2, 17449.0], [65.3, 17449.0], [65.4, 17507.0], [65.5, 17507.0], [65.6, 17520.0], [65.7, 17520.0], [65.8, 17520.0], [65.9, 17544.0], [66.0, 17544.0], [66.1, 17544.0], [66.2, 17567.0], [66.3, 17567.0], [66.4, 17609.0], [66.5, 17609.0], [66.6, 17609.0], [66.7, 17653.0], [66.8, 17653.0], [66.9, 17653.0], [67.0, 17673.0], [67.1, 17673.0], [67.2, 17673.0], [67.3, 17677.0], [67.4, 17677.0], [67.5, 17725.0], [67.6, 17725.0], [67.7, 17725.0], [67.8, 17793.0], [67.9, 17793.0], [68.0, 17793.0], [68.1, 17813.0], [68.2, 17813.0], [68.3, 17816.0], [68.4, 17816.0], [68.5, 17816.0], [68.6, 17818.0], [68.7, 17818.0], [68.8, 17818.0], [68.9, 17871.0], [69.0, 17871.0], [69.1, 17871.0], [69.2, 17906.0], [69.3, 17906.0], [69.4, 17986.0], [69.5, 17986.0], [69.6, 17986.0], [69.7, 18003.0], [69.8, 18003.0], [69.9, 18003.0], [70.0, 18006.0], [70.1, 18006.0], [70.2, 18043.0], [70.3, 18043.0], [70.4, 18043.0], [70.5, 18067.0], [70.6, 18067.0], [70.7, 18067.0], [70.8, 18079.0], [70.9, 18079.0], [71.0, 18079.0], [71.1, 18089.0], [71.2, 18089.0], [71.3, 18094.0], [71.4, 18094.0], [71.5, 18094.0], [71.6, 18098.0], [71.7, 18098.0], [71.8, 18098.0], [71.9, 18104.0], [72.0, 18104.0], [72.1, 18149.0], [72.2, 18149.0], [72.3, 18149.0], [72.4, 18189.0], [72.5, 18189.0], [72.6, 18189.0], [72.7, 18216.0], [72.8, 18216.0], [72.9, 18217.0], [73.0, 18217.0], [73.1, 18217.0], [73.2, 18335.0], [73.3, 18335.0], [73.4, 18335.0], [73.5, 18358.0], [73.6, 18358.0], [73.7, 18358.0], [73.8, 18386.0], [73.9, 18386.0], [74.0, 18389.0], [74.1, 18389.0], [74.2, 18389.0], [74.3, 18395.0], [74.4, 18395.0], [74.5, 18395.0], [74.6, 18422.0], [74.7, 18422.0], [74.8, 18449.0], [74.9, 18449.0], [75.0, 18449.0], [75.1, 18452.0], [75.2, 18452.0], [75.3, 18452.0], [75.4, 18464.0], [75.5, 18464.0], [75.6, 18464.0], [75.7, 18468.0], [75.8, 18468.0], [75.9, 18481.0], [76.0, 18481.0], [76.1, 18481.0], [76.2, 18484.0], [76.3, 18484.0], [76.4, 18484.0], [76.5, 18512.0], [76.6, 18512.0], [76.7, 18529.0], [76.8, 18529.0], [76.9, 18529.0], [77.0, 18529.0], [77.1, 18529.0], [77.2, 18529.0], [77.3, 18595.0], [77.4, 18595.0], [77.5, 18595.0], [77.6, 18608.0], [77.7, 18608.0], [77.8, 18609.0], [77.9, 18609.0], [78.0, 18609.0], [78.1, 18611.0], [78.2, 18611.0], [78.3, 18611.0], [78.4, 18632.0], [78.5, 18632.0], [78.6, 18671.0], [78.7, 18671.0], [78.8, 18671.0], [78.9, 18704.0], [79.0, 18704.0], [79.1, 18704.0], [79.2, 18720.0], [79.3, 18720.0], [79.4, 18720.0], [79.5, 18732.0], [79.6, 18732.0], [79.7, 18776.0], [79.8, 18776.0], [79.9, 18776.0], [80.0, 18802.0], [80.1, 18802.0], [80.2, 18802.0], [80.3, 18866.0], [80.4, 18866.0], [80.5, 18869.0], [80.6, 18869.0], [80.7, 18869.0], [80.8, 18875.0], [80.9, 18875.0], [81.0, 18875.0], [81.1, 18915.0], [81.2, 18915.0], [81.3, 18915.0], [81.4, 18923.0], [81.5, 18923.0], [81.6, 19010.0], [81.7, 19010.0], [81.8, 19010.0], [81.9, 19010.0], [82.0, 19010.0], [82.1, 19010.0], [82.2, 19052.0], [82.3, 19052.0], [82.4, 19075.0], [82.5, 19075.0], [82.6, 19075.0], [82.7, 19185.0], [82.8, 19185.0], [82.9, 19185.0], [83.0, 19294.0], [83.1, 19294.0], [83.2, 19364.0], [83.3, 19364.0], [83.4, 19364.0], [83.5, 19373.0], [83.6, 19373.0], [83.7, 19373.0], [83.8, 19493.0], [83.9, 19493.0], [84.0, 19493.0], [84.1, 19531.0], [84.2, 19531.0], [84.3, 19572.0], [84.4, 19572.0], [84.5, 19572.0], [84.6, 19580.0], [84.7, 19580.0], [84.8, 19580.0], [84.9, 19622.0], [85.0, 19622.0], [85.1, 19782.0], [85.2, 19782.0], [85.3, 19782.0], [85.4, 19865.0], [85.5, 19865.0], [85.6, 19865.0], [85.7, 19875.0], [85.8, 19875.0], [85.9, 19875.0], [86.0, 19986.0], [86.1, 19986.0], [86.2, 20037.0], [86.3, 20037.0], [86.4, 20037.0], [86.5, 20066.0], [86.6, 20066.0], [86.7, 20066.0], [86.8, 20200.0], [86.9, 20200.0], [87.0, 20204.0], [87.1, 20204.0], [87.2, 20204.0], [87.3, 20261.0], [87.4, 20261.0], [87.5, 20261.0], [87.6, 20527.0], [87.7, 20527.0], [87.8, 20527.0], [87.9, 20529.0], [88.0, 20529.0], [88.1, 20674.0], [88.2, 20674.0], [88.3, 20674.0], [88.4, 20709.0], [88.5, 20709.0], [88.6, 20709.0], [88.7, 20859.0], [88.8, 20859.0], [88.9, 20896.0], [89.0, 20896.0], [89.1, 20896.0], [89.2, 20973.0], [89.3, 20973.0], [89.4, 20973.0], [89.5, 21113.0], [89.6, 21113.0], [89.7, 21113.0], [89.8, 21196.0], [89.9, 21196.0], [90.0, 21235.0], [90.1, 21235.0], [90.2, 21235.0], [90.3, 21433.0], [90.4, 21433.0], [90.5, 21433.0], [90.6, 21467.0], [90.7, 21467.0], [90.8, 21824.0], [90.9, 21824.0], [91.0, 21824.0], [91.1, 21885.0], [91.2, 21885.0], [91.3, 21885.0], [91.4, 21909.0], [91.5, 21909.0], [91.6, 21912.0], [91.7, 21912.0], [91.8, 21912.0], [91.9, 21933.0], [92.0, 21933.0], [92.1, 21933.0], [92.2, 21961.0], [92.3, 21961.0], [92.4, 21961.0], [92.5, 21982.0], [92.6, 21982.0], [92.7, 22434.0], [92.8, 22434.0], [92.9, 22434.0], [93.0, 23557.0], [93.1, 23557.0], [93.2, 23557.0], [93.3, 24126.0], [93.4, 24126.0], [93.5, 24503.0], [93.6, 24503.0], [93.7, 24503.0], [93.8, 25456.0], [93.9, 25456.0], [94.0, 25456.0], [94.1, 25904.0], [94.2, 25904.0], [94.3, 25904.0], [94.4, 25964.0], [94.5, 25964.0], [94.6, 25982.0], [94.7, 25982.0], [94.8, 25982.0], [94.9, 26092.0], [95.0, 26092.0], [95.1, 26092.0], [95.2, 26212.0], [95.3, 26212.0], [95.4, 26274.0], [95.5, 26274.0], [95.6, 26274.0], [95.7, 26539.0], [95.8, 26539.0], [95.9, 26539.0], [96.0, 27223.0], [96.1, 27223.0], [96.2, 27223.0], [96.3, 27259.0], [96.4, 27259.0], [96.5, 27743.0], [96.6, 27743.0], [96.7, 27743.0], [96.8, 28020.0], [96.9, 28020.0], [97.0, 28020.0], [97.1, 28055.0], [97.2, 28055.0], [97.3, 28091.0], [97.4, 28091.0], [97.5, 28091.0], [97.6, 28198.0], [97.7, 28198.0], [97.8, 28198.0], [97.9, 28437.0], [98.0, 28437.0], [98.1, 28437.0], [98.2, 28586.0], [98.3, 28586.0], [98.4, 28968.0], [98.5, 28968.0], [98.6, 28968.0], [98.7, 29368.0], [98.8, 29368.0], [98.9, 29368.0], [99.0, 29464.0], [99.1, 29464.0], [99.2, 30982.0], [99.3, 30982.0], [99.4, 30982.0], [99.5, 31770.0], [99.6, 31770.0], [99.7, 31770.0], [99.8, 31838.0], [99.9, 31838.0], [100.0, 31838.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 9226.0], [0.1, 9226.0], [0.2, 9226.0], [0.3, 9226.0], [0.4, 9226.0], [0.5, 13680.0], [0.6, 13680.0], [0.7, 13680.0], [0.8, 13680.0], [0.9, 13680.0], [1.0, 14326.0], [1.1, 14326.0], [1.2, 14326.0], [1.3, 14326.0], [1.4, 14326.0], [1.5, 17864.0], [1.6, 17864.0], [1.7, 17864.0], [1.8, 17864.0], [1.9, 17864.0], [2.0, 18878.0], [2.1, 18878.0], [2.2, 18878.0], [2.3, 18878.0], [2.4, 19200.0], [2.5, 19200.0], [2.6, 19200.0], [2.7, 19200.0], [2.8, 19200.0], [2.9, 19914.0], [3.0, 19914.0], [3.1, 19914.0], [3.2, 19914.0], [3.3, 19914.0], [3.4, 21530.0], [3.5, 21530.0], [3.6, 21530.0], [3.7, 21530.0], [3.8, 21530.0], [3.9, 22024.0], [4.0, 22024.0], [4.1, 22024.0], [4.2, 22024.0], [4.3, 22804.0], [4.4, 22804.0], [4.5, 22804.0], [4.6, 22804.0], [4.7, 22804.0], [4.8, 23329.0], [4.9, 23329.0], [5.0, 23329.0], [5.1, 23329.0], [5.2, 23329.0], [5.3, 23331.0], [5.4, 23331.0], [5.5, 23331.0], [5.6, 23331.0], [5.7, 23331.0], [5.8, 23333.0], [5.9, 23333.0], [6.0, 23333.0], [6.1, 23333.0], [6.2, 23335.0], [6.3, 23335.0], [6.4, 23335.0], [6.5, 23335.0], [6.6, 23335.0], [6.7, 23958.0], [6.8, 23958.0], [6.9, 23958.0], [7.0, 23958.0], [7.1, 23958.0], [7.2, 24490.0], [7.3, 24490.0], [7.4, 24490.0], [7.5, 24490.0], [7.6, 24490.0], [7.7, 24650.0], [7.8, 24650.0], [7.9, 24650.0], [8.0, 24650.0], [8.1, 24717.0], [8.2, 24717.0], [8.3, 24717.0], [8.4, 24717.0], [8.5, 24717.0], [8.6, 24764.0], [8.7, 24764.0], [8.8, 24764.0], [8.9, 24764.0], [9.0, 24764.0], [9.1, 24851.0], [9.2, 24851.0], [9.3, 24851.0], [9.4, 24851.0], [9.5, 24851.0], [9.6, 25164.0], [9.7, 25164.0], [9.8, 25164.0], [9.9, 25164.0], [10.0, 25431.0], [10.1, 25431.0], [10.2, 25431.0], [10.3, 25431.0], [10.4, 25431.0], [10.5, 25939.0], [10.6, 25939.0], [10.7, 25939.0], [10.8, 25939.0], [10.9, 25939.0], [11.0, 26288.0], [11.1, 26288.0], [11.2, 26288.0], [11.3, 26288.0], [11.4, 26288.0], [11.5, 26634.0], [11.6, 26634.0], [11.7, 26634.0], [11.8, 26634.0], [11.9, 26634.0], [12.0, 26677.0], [12.1, 26677.0], [12.2, 26677.0], [12.3, 26677.0], [12.4, 27308.0], [12.5, 27308.0], [12.6, 27308.0], [12.7, 27308.0], [12.8, 27308.0], [12.9, 27533.0], [13.0, 27533.0], [13.1, 27533.0], [13.2, 27533.0], [13.3, 27533.0], [13.4, 28057.0], [13.5, 28057.0], [13.6, 28057.0], [13.7, 28057.0], [13.8, 28057.0], [13.9, 28156.0], [14.0, 28156.0], [14.1, 28156.0], [14.2, 28156.0], [14.3, 28449.0], [14.4, 28449.0], [14.5, 28449.0], [14.6, 28449.0], [14.7, 28449.0], [14.8, 28451.0], [14.9, 28451.0], [15.0, 28451.0], [15.1, 28451.0], [15.2, 28451.0], [15.3, 28774.0], [15.4, 28774.0], [15.5, 28774.0], [15.6, 28774.0], [15.7, 28774.0], [15.8, 29060.0], [15.9, 29060.0], [16.0, 29060.0], [16.1, 29060.0], [16.2, 29167.0], [16.3, 29167.0], [16.4, 29167.0], [16.5, 29167.0], [16.6, 29167.0], [16.7, 29366.0], [16.8, 29366.0], [16.9, 29366.0], [17.0, 29366.0], [17.1, 29366.0], [17.2, 29838.0], [17.3, 29838.0], [17.4, 29838.0], [17.5, 29838.0], [17.6, 29838.0], [17.7, 29962.0], [17.8, 29962.0], [17.9, 29962.0], [18.0, 29962.0], [18.1, 30354.0], [18.2, 30354.0], [18.3, 30354.0], [18.4, 30354.0], [18.5, 30354.0], [18.6, 30639.0], [18.7, 30639.0], [18.8, 30639.0], [18.9, 30639.0], [19.0, 30639.0], [19.1, 30855.0], [19.2, 30855.0], [19.3, 30855.0], [19.4, 30855.0], [19.5, 30855.0], [19.6, 31208.0], [19.7, 31208.0], [19.8, 31208.0], [19.9, 31208.0], [20.0, 31215.0], [20.1, 31215.0], [20.2, 31215.0], [20.3, 31215.0], [20.4, 31215.0], [20.5, 31287.0], [20.6, 31287.0], [20.7, 31287.0], [20.8, 31287.0], [20.9, 31287.0], [21.0, 31342.0], [21.1, 31342.0], [21.2, 31342.0], [21.3, 31342.0], [21.4, 31342.0], [21.5, 31455.0], [21.6, 31455.0], [21.7, 31455.0], [21.8, 31455.0], [21.9, 31455.0], [22.0, 31656.0], [22.1, 31656.0], [22.2, 31656.0], [22.3, 31656.0], [22.4, 31723.0], [22.5, 31723.0], [22.6, 31723.0], [22.7, 31723.0], [22.8, 31723.0], [22.9, 31847.0], [23.0, 31847.0], [23.1, 31847.0], [23.2, 31847.0], [23.3, 31847.0], [23.4, 32042.0], [23.5, 32042.0], [23.6, 32042.0], [23.7, 32042.0], [23.8, 32042.0], [23.9, 32454.0], [24.0, 32454.0], [24.1, 32454.0], [24.2, 32454.0], [24.3, 32502.0], [24.4, 32502.0], [24.5, 32502.0], [24.6, 32502.0], [24.7, 32502.0], [24.8, 32535.0], [24.9, 32535.0], [25.0, 32535.0], [25.1, 32535.0], [25.2, 32535.0], [25.3, 32617.0], [25.4, 32617.0], [25.5, 32617.0], [25.6, 32617.0], [25.7, 32617.0], [25.8, 32705.0], [25.9, 32705.0], [26.0, 32705.0], [26.1, 32705.0], [26.2, 32790.0], [26.3, 32790.0], [26.4, 32790.0], [26.5, 32790.0], [26.6, 32790.0], [26.7, 32864.0], [26.8, 32864.0], [26.9, 32864.0], [27.0, 32864.0], [27.1, 32864.0], [27.2, 32977.0], [27.3, 32977.0], [27.4, 32977.0], [27.5, 32977.0], [27.6, 32977.0], [27.7, 33211.0], [27.8, 33211.0], [27.9, 33211.0], [28.0, 33211.0], [28.1, 33325.0], [28.2, 33325.0], [28.3, 33325.0], [28.4, 33325.0], [28.5, 33325.0], [28.6, 33554.0], [28.7, 33554.0], [28.8, 33554.0], [28.9, 33554.0], [29.0, 33554.0], [29.1, 33556.0], [29.2, 33556.0], [29.3, 33556.0], [29.4, 33556.0], [29.5, 33556.0], [29.6, 33775.0], [29.7, 33775.0], [29.8, 33775.0], [29.9, 33775.0], [30.0, 34219.0], [30.1, 34219.0], [30.2, 34219.0], [30.3, 34219.0], [30.4, 34219.0], [30.5, 34254.0], [30.6, 34254.0], [30.7, 34254.0], [30.8, 34254.0], [30.9, 34254.0], [31.0, 34593.0], [31.1, 34593.0], [31.2, 34593.0], [31.3, 34593.0], [31.4, 34593.0], [31.5, 34744.0], [31.6, 34744.0], [31.7, 34744.0], [31.8, 34744.0], [31.9, 34744.0], [32.0, 34757.0], [32.1, 34757.0], [32.2, 34757.0], [32.3, 34757.0], [32.4, 34854.0], [32.5, 34854.0], [32.6, 34854.0], [32.7, 34854.0], [32.8, 34854.0], [32.9, 34987.0], [33.0, 34987.0], [33.1, 34987.0], [33.2, 34987.0], [33.3, 34987.0], [33.4, 35224.0], [33.5, 35224.0], [33.6, 35224.0], [33.7, 35224.0], [33.8, 35224.0], [33.9, 35665.0], [34.0, 35665.0], [34.1, 35665.0], [34.2, 35665.0], [34.3, 35697.0], [34.4, 35697.0], [34.5, 35697.0], [34.6, 35697.0], [34.7, 35697.0], [34.8, 35863.0], [34.9, 35863.0], [35.0, 35863.0], [35.1, 35863.0], [35.2, 35863.0], [35.3, 36179.0], [35.4, 36179.0], [35.5, 36179.0], [35.6, 36179.0], [35.7, 36179.0], [35.8, 36211.0], [35.9, 36211.0], [36.0, 36211.0], [36.1, 36211.0], [36.2, 36233.0], [36.3, 36233.0], [36.4, 36233.0], [36.5, 36233.0], [36.6, 36233.0], [36.7, 36574.0], [36.8, 36574.0], [36.9, 36574.0], [37.0, 36574.0], [37.1, 36574.0], [37.2, 37025.0], [37.3, 37025.0], [37.4, 37025.0], [37.5, 37025.0], [37.6, 37025.0], [37.7, 37044.0], [37.8, 37044.0], [37.9, 37044.0], [38.0, 37044.0], [38.1, 37148.0], [38.2, 37148.0], [38.3, 37148.0], [38.4, 37148.0], [38.5, 37148.0], [38.6, 37220.0], [38.7, 37220.0], [38.8, 37220.0], [38.9, 37220.0], [39.0, 37220.0], [39.1, 37265.0], [39.2, 37265.0], [39.3, 37265.0], [39.4, 37265.0], [39.5, 37265.0], [39.6, 37267.0], [39.7, 37267.0], [39.8, 37267.0], [39.9, 37267.0], [40.0, 37358.0], [40.1, 37358.0], [40.2, 37358.0], [40.3, 37358.0], [40.4, 37358.0], [40.5, 37438.0], [40.6, 37438.0], [40.7, 37438.0], [40.8, 37438.0], [40.9, 37438.0], [41.0, 37511.0], [41.1, 37511.0], [41.2, 37511.0], [41.3, 37511.0], [41.4, 37511.0], [41.5, 37998.0], [41.6, 37998.0], [41.7, 37998.0], [41.8, 37998.0], [41.9, 37998.0], [42.0, 38038.0], [42.1, 38038.0], [42.2, 38038.0], [42.3, 38038.0], [42.4, 38228.0], [42.5, 38228.0], [42.6, 38228.0], [42.7, 38228.0], [42.8, 38228.0], [42.9, 38238.0], [43.0, 38238.0], [43.1, 38238.0], [43.2, 38238.0], [43.3, 38238.0], [43.4, 38368.0], [43.5, 38368.0], [43.6, 38368.0], [43.7, 38368.0], [43.8, 38368.0], [43.9, 38469.0], [44.0, 38469.0], [44.1, 38469.0], [44.2, 38469.0], [44.3, 38510.0], [44.4, 38510.0], [44.5, 38510.0], [44.6, 38510.0], [44.7, 38510.0], [44.8, 38642.0], [44.9, 38642.0], [45.0, 38642.0], [45.1, 38642.0], [45.2, 38642.0], [45.3, 38807.0], [45.4, 38807.0], [45.5, 38807.0], [45.6, 38807.0], [45.7, 38807.0], [45.8, 38885.0], [45.9, 38885.0], [46.0, 38885.0], [46.1, 38885.0], [46.2, 38918.0], [46.3, 38918.0], [46.4, 38918.0], [46.5, 38918.0], [46.6, 38918.0], [46.7, 39024.0], [46.8, 39024.0], [46.9, 39024.0], [47.0, 39024.0], [47.1, 39024.0], [47.2, 39039.0], [47.3, 39039.0], [47.4, 39039.0], [47.5, 39039.0], [47.6, 39039.0], [47.7, 39218.0], [47.8, 39218.0], [47.9, 39218.0], [48.0, 39218.0], [48.1, 39522.0], [48.2, 39522.0], [48.3, 39522.0], [48.4, 39522.0], [48.5, 39522.0], [48.6, 39607.0], [48.7, 39607.0], [48.8, 39607.0], [48.9, 39607.0], [49.0, 39607.0], [49.1, 39677.0], [49.2, 39677.0], [49.3, 39677.0], [49.4, 39677.0], [49.5, 39677.0], [49.6, 39849.0], [49.7, 39849.0], [49.8, 39849.0], [49.9, 39849.0], [50.0, 39940.0], [50.1, 39940.0], [50.2, 39940.0], [50.3, 39940.0], [50.4, 39940.0], [50.5, 40132.0], [50.6, 40132.0], [50.7, 40132.0], [50.8, 40132.0], [50.9, 40132.0], [51.0, 40178.0], [51.1, 40178.0], [51.2, 40178.0], [51.3, 40178.0], [51.4, 40178.0], [51.5, 40376.0], [51.6, 40376.0], [51.7, 40376.0], [51.8, 40376.0], [51.9, 40376.0], [52.0, 40408.0], [52.1, 40408.0], [52.2, 40408.0], [52.3, 40408.0], [52.4, 40447.0], [52.5, 40447.0], [52.6, 40447.0], [52.7, 40447.0], [52.8, 40447.0], [52.9, 40454.0], [53.0, 40454.0], [53.1, 40454.0], [53.2, 40454.0], [53.3, 40454.0], [53.4, 40477.0], [53.5, 40477.0], [53.6, 40477.0], [53.7, 40477.0], [53.8, 40477.0], [53.9, 40577.0], [54.0, 40577.0], [54.1, 40577.0], [54.2, 40577.0], [54.3, 40605.0], [54.4, 40605.0], [54.5, 40605.0], [54.6, 40605.0], [54.7, 40605.0], [54.8, 40988.0], [54.9, 40988.0], [55.0, 40988.0], [55.1, 40988.0], [55.2, 40988.0], [55.3, 41421.0], [55.4, 41421.0], [55.5, 41421.0], [55.6, 41421.0], [55.7, 41421.0], [55.8, 41422.0], [55.9, 41422.0], [56.0, 41422.0], [56.1, 41422.0], [56.2, 41457.0], [56.3, 41457.0], [56.4, 41457.0], [56.5, 41457.0], [56.6, 41457.0], [56.7, 41465.0], [56.8, 41465.0], [56.9, 41465.0], [57.0, 41465.0], [57.1, 41465.0], [57.2, 41495.0], [57.3, 41495.0], [57.4, 41495.0], [57.5, 41495.0], [57.6, 41495.0], [57.7, 41642.0], [57.8, 41642.0], [57.9, 41642.0], [58.0, 41642.0], [58.1, 41643.0], [58.2, 41643.0], [58.3, 41643.0], [58.4, 41643.0], [58.5, 41643.0], [58.6, 41673.0], [58.7, 41673.0], [58.8, 41673.0], [58.9, 41673.0], [59.0, 41673.0], [59.1, 41872.0], [59.2, 41872.0], [59.3, 41872.0], [59.4, 41872.0], [59.5, 41872.0], [59.6, 42069.0], [59.7, 42069.0], [59.8, 42069.0], [59.9, 42069.0], [60.0, 42118.0], [60.1, 42118.0], [60.2, 42118.0], [60.3, 42118.0], [60.4, 42118.0], [60.5, 42170.0], [60.6, 42170.0], [60.7, 42170.0], [60.8, 42170.0], [60.9, 42170.0], [61.0, 42170.0], [61.1, 42170.0], [61.2, 42170.0], [61.3, 42170.0], [61.4, 42170.0], [61.5, 42263.0], [61.6, 42263.0], [61.7, 42263.0], [61.8, 42263.0], [61.9, 42263.0], [62.0, 42334.0], [62.1, 42334.0], [62.2, 42334.0], [62.3, 42334.0], [62.4, 42522.0], [62.5, 42522.0], [62.6, 42522.0], [62.7, 42522.0], [62.8, 42522.0], [62.9, 42762.0], [63.0, 42762.0], [63.1, 42762.0], [63.2, 42762.0], [63.3, 42762.0], [63.4, 42940.0], [63.5, 42940.0], [63.6, 42940.0], [63.7, 42940.0], [63.8, 42940.0], [63.9, 42982.0], [64.0, 42982.0], [64.1, 42982.0], [64.2, 42982.0], [64.3, 42986.0], [64.4, 42986.0], [64.5, 42986.0], [64.6, 42986.0], [64.7, 42986.0], [64.8, 43011.0], [64.9, 43011.0], [65.0, 43011.0], [65.1, 43011.0], [65.2, 43011.0], [65.3, 43165.0], [65.4, 43165.0], [65.5, 43165.0], [65.6, 43165.0], [65.7, 43165.0], [65.8, 43176.0], [65.9, 43176.0], [66.0, 43176.0], [66.1, 43176.0], [66.2, 43264.0], [66.3, 43264.0], [66.4, 43264.0], [66.5, 43264.0], [66.6, 43264.0], [66.7, 43346.0], [66.8, 43346.0], [66.9, 43346.0], [67.0, 43346.0], [67.1, 43346.0], [67.2, 43432.0], [67.3, 43432.0], [67.4, 43432.0], [67.5, 43432.0], [67.6, 43432.0], [67.7, 43563.0], [67.8, 43563.0], [67.9, 43563.0], [68.0, 43563.0], [68.1, 43905.0], [68.2, 43905.0], [68.3, 43905.0], [68.4, 43905.0], [68.5, 43905.0], [68.6, 43994.0], [68.7, 43994.0], [68.8, 43994.0], [68.9, 43994.0], [69.0, 43994.0], [69.1, 44146.0], [69.2, 44146.0], [69.3, 44146.0], [69.4, 44146.0], [69.5, 44146.0], [69.6, 44268.0], [69.7, 44268.0], [69.8, 44268.0], [69.9, 44268.0], [70.0, 44296.0], [70.1, 44296.0], [70.2, 44296.0], [70.3, 44296.0], [70.4, 44296.0], [70.5, 44309.0], [70.6, 44309.0], [70.7, 44309.0], [70.8, 44309.0], [70.9, 44309.0], [71.0, 44389.0], [71.1, 44389.0], [71.2, 44389.0], [71.3, 44389.0], [71.4, 44389.0], [71.5, 44418.0], [71.6, 44418.0], [71.7, 44418.0], [71.8, 44418.0], [71.9, 44418.0], [72.0, 44424.0], [72.1, 44424.0], [72.2, 44424.0], [72.3, 44424.0], [72.4, 44501.0], [72.5, 44501.0], [72.6, 44501.0], [72.7, 44501.0], [72.8, 44501.0], [72.9, 44546.0], [73.0, 44546.0], [73.1, 44546.0], [73.2, 44546.0], [73.3, 44546.0], [73.4, 44562.0], [73.5, 44562.0], [73.6, 44562.0], [73.7, 44562.0], [73.8, 44562.0], [73.9, 44817.0], [74.0, 44817.0], [74.1, 44817.0], [74.2, 44817.0], [74.3, 44902.0], [74.4, 44902.0], [74.5, 44902.0], [74.6, 44902.0], [74.7, 44902.0], [74.8, 45088.0], [74.9, 45088.0], [75.0, 45088.0], [75.1, 45088.0], [75.2, 45088.0], [75.3, 45099.0], [75.4, 45099.0], [75.5, 45099.0], [75.6, 45099.0], [75.7, 45099.0], [75.8, 45386.0], [75.9, 45386.0], [76.0, 45386.0], [76.1, 45386.0], [76.2, 45402.0], [76.3, 45402.0], [76.4, 45402.0], [76.5, 45402.0], [76.6, 45402.0], [76.7, 45495.0], [76.8, 45495.0], [76.9, 45495.0], [77.0, 45495.0], [77.1, 45495.0], [77.2, 45524.0], [77.3, 45524.0], [77.4, 45524.0], [77.5, 45524.0], [77.6, 45524.0], [77.7, 45586.0], [77.8, 45586.0], [77.9, 45586.0], [78.0, 45586.0], [78.1, 45611.0], [78.2, 45611.0], [78.3, 45611.0], [78.4, 45611.0], [78.5, 45611.0], [78.6, 45688.0], [78.7, 45688.0], [78.8, 45688.0], [78.9, 45688.0], [79.0, 45688.0], [79.1, 45699.0], [79.2, 45699.0], [79.3, 45699.0], [79.4, 45699.0], [79.5, 45699.0], [79.6, 45896.0], [79.7, 45896.0], [79.8, 45896.0], [79.9, 45896.0], [80.0, 45896.0], [80.1, 45965.0], [80.2, 45965.0], [80.3, 45965.0], [80.4, 45965.0], [80.5, 46239.0], [80.6, 46239.0], [80.7, 46239.0], [80.8, 46239.0], [80.9, 46239.0], [81.0, 46339.0], [81.1, 46339.0], [81.2, 46339.0], [81.3, 46339.0], [81.4, 46339.0], [81.5, 46441.0], [81.6, 46441.0], [81.7, 46441.0], [81.8, 46441.0], [81.9, 46441.0], [82.0, 46475.0], [82.1, 46475.0], [82.2, 46475.0], [82.3, 46475.0], [82.4, 46639.0], [82.5, 46639.0], [82.6, 46639.0], [82.7, 46639.0], [82.8, 46639.0], [82.9, 46766.0], [83.0, 46766.0], [83.1, 46766.0], [83.2, 46766.0], [83.3, 46766.0], [83.4, 46967.0], [83.5, 46967.0], [83.6, 46967.0], [83.7, 46967.0], [83.8, 46967.0], [83.9, 47399.0], [84.0, 47399.0], [84.1, 47399.0], [84.2, 47399.0], [84.3, 47478.0], [84.4, 47478.0], [84.5, 47478.0], [84.6, 47478.0], [84.7, 47478.0], [84.8, 47640.0], [84.9, 47640.0], [85.0, 47640.0], [85.1, 47640.0], [85.2, 47640.0], [85.3, 47660.0], [85.4, 47660.0], [85.5, 47660.0], [85.6, 47660.0], [85.7, 47660.0], [85.8, 47871.0], [85.9, 47871.0], [86.0, 47871.0], [86.1, 47871.0], [86.2, 48302.0], [86.3, 48302.0], [86.4, 48302.0], [86.5, 48302.0], [86.6, 48302.0], [86.7, 48492.0], [86.8, 48492.0], [86.9, 48492.0], [87.0, 48492.0], [87.1, 48492.0], [87.2, 48822.0], [87.3, 48822.0], [87.4, 48822.0], [87.5, 48822.0], [87.6, 48822.0], [87.7, 49116.0], [87.8, 49116.0], [87.9, 49116.0], [88.0, 49116.0], [88.1, 49763.0], [88.2, 49763.0], [88.3, 49763.0], [88.4, 49763.0], [88.5, 49763.0], [88.6, 49947.0], [88.7, 49947.0], [88.8, 49947.0], [88.9, 49947.0], [89.0, 49947.0], [89.1, 50001.0], [89.2, 50001.0], [89.3, 50001.0], [89.4, 50001.0], [89.5, 50001.0], [89.6, 50103.0], [89.7, 50103.0], [89.8, 50103.0], [89.9, 50103.0], [90.0, 50103.0], [90.1, 50241.0], [90.2, 50241.0], [90.3, 50241.0], [90.4, 50241.0], [90.5, 50288.0], [90.6, 50288.0], [90.7, 50288.0], [90.8, 50288.0], [90.9, 50288.0], [91.0, 50740.0], [91.1, 50740.0], [91.2, 50740.0], [91.3, 50740.0], [91.4, 50740.0], [91.5, 52041.0], [91.6, 52041.0], [91.7, 52041.0], [91.8, 52041.0], [91.9, 52041.0], [92.0, 52173.0], [92.1, 52173.0], [92.2, 52173.0], [92.3, 52173.0], [92.4, 52957.0], [92.5, 52957.0], [92.6, 52957.0], [92.7, 52957.0], [92.8, 52957.0], [92.9, 53212.0], [93.0, 53212.0], [93.1, 53212.0], [93.2, 53212.0], [93.3, 53212.0], [93.4, 53989.0], [93.5, 53989.0], [93.6, 53989.0], [93.7, 53989.0], [93.8, 53989.0], [93.9, 54756.0], [94.0, 54756.0], [94.1, 54756.0], [94.2, 54756.0], [94.3, 54968.0], [94.4, 54968.0], [94.5, 54968.0], [94.6, 54968.0], [94.7, 54968.0], [94.8, 55164.0], [94.9, 55164.0], [95.0, 55164.0], [95.1, 55164.0], [95.2, 55164.0], [95.3, 55551.0], [95.4, 55551.0], [95.5, 55551.0], [95.6, 55551.0], [95.7, 55551.0], [95.8, 56052.0], [95.9, 56052.0], [96.0, 56052.0], [96.1, 56052.0], [96.2, 57467.0], [96.3, 57467.0], [96.4, 57467.0], [96.5, 57467.0], [96.6, 57467.0], [96.7, 58663.0], [96.8, 58663.0], [96.9, 58663.0], [97.0, 58663.0], [97.1, 58663.0], [97.2, 59883.0], [97.3, 59883.0], [97.4, 59883.0], [97.5, 59883.0], [97.6, 59883.0], [97.7, 61382.0], [97.8, 61382.0], [97.9, 61382.0], [98.0, 61382.0], [98.1, 61407.0], [98.2, 61407.0], [98.3, 61407.0], [98.4, 61407.0], [98.5, 61407.0], [98.6, 61422.0], [98.7, 61422.0], [98.8, 61422.0], [98.9, 61422.0], [99.0, 61422.0], [99.1, 62488.0], [99.2, 62488.0], [99.3, 62488.0], [99.4, 62488.0], [99.5, 62488.0], [99.6, 74447.0], [99.7, 74447.0], [99.8, 74447.0], [99.9, 74447.0], [100.0, 74447.0]], "isOverall": false, "label": "Modify Password", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 16.0, "series": [{"data": [[0.0, 3.0], [600.0, 1.0], [700.0, 4.0], [800.0, 3.0], [1000.0, 6.0], [1100.0, 2.0], [1200.0, 2.0], [1400.0, 2.0], [1500.0, 1.0], [1700.0, 1.0], [2400.0, 1.0], [2500.0, 4.0], [3100.0, 10.0], [3200.0, 1.0], [3400.0, 1.0], [3500.0, 1.0], [4100.0, 6.0], [4500.0, 1.0], [5000.0, 1.0], [5200.0, 1.0], [5500.0, 1.0], [5700.0, 1.0], [5800.0, 1.0], [6000.0, 2.0], [6200.0, 1.0], [6700.0, 2.0], [7000.0, 2.0], [7400.0, 2.0], [7600.0, 3.0], [7500.0, 1.0], [7700.0, 1.0], [8100.0, 1.0], [8500.0, 2.0], [8800.0, 3.0], [9200.0, 1.0], [9100.0, 1.0], [8900.0, 1.0], [9300.0, 1.0], [9700.0, 1.0], [9400.0, 1.0], [9600.0, 1.0], [10100.0, 1.0], [9900.0, 1.0], [11100.0, 1.0], [11300.0, 2.0], [11500.0, 1.0], [11600.0, 1.0], [11700.0, 1.0], [11800.0, 1.0], [12600.0, 1.0], [12500.0, 2.0], [13000.0, 1.0], [12900.0, 1.0], [13100.0, 1.0], [13200.0, 1.0], [13500.0, 1.0], [13600.0, 2.0], [13700.0, 1.0], [14100.0, 1.0], [15200.0, 3.0], [15700.0, 1.0], [16500.0, 2.0], [17300.0, 1.0], [18100.0, 1.0], [18400.0, 1.0], [17900.0, 1.0], [18500.0, 1.0], [19200.0, 1.0], [19100.0, 1.0], [20300.0, 1.0], [19800.0, 1.0], [20700.0, 2.0], [21800.0, 1.0], [23300.0, 1.0], [25200.0, 1.0], [100.0, 16.0], [27200.0, 1.0], [200.0, 10.0], [300.0, 1.0], [400.0, 11.0], [500.0, 7.0]], "isOverall": false, "label": "Modify User Info", "isController": false}, {"data": [[0.0, 3.0], [600.0, 1.0], [700.0, 4.0], [800.0, 3.0], [1000.0, 6.0], [1100.0, 2.0], [1200.0, 2.0], [1400.0, 2.0], [1500.0, 1.0], [1700.0, 1.0], [2400.0, 1.0], [2500.0, 4.0], [3100.0, 10.0], [3200.0, 1.0], [3400.0, 1.0], [3500.0, 1.0], [4100.0, 6.0], [4500.0, 1.0], [5000.0, 1.0], [5200.0, 1.0], [5500.0, 1.0], [5700.0, 1.0], [5800.0, 1.0], [6000.0, 2.0], [6200.0, 1.0], [6700.0, 2.0], [7000.0, 2.0], [7400.0, 2.0], [7600.0, 3.0], [7500.0, 1.0], [7700.0, 1.0], [8100.0, 1.0], [8500.0, 2.0], [8800.0, 3.0], [9200.0, 1.0], [9100.0, 1.0], [8900.0, 1.0], [9300.0, 1.0], [9700.0, 1.0], [9400.0, 1.0], [9600.0, 1.0], [10100.0, 1.0], [9900.0, 1.0], [11100.0, 1.0], [11300.0, 2.0], [11500.0, 1.0], [11600.0, 1.0], [11700.0, 1.0], [11800.0, 1.0], [12600.0, 1.0], [12500.0, 2.0], [13000.0, 1.0], [12900.0, 1.0], [13100.0, 1.0], [13200.0, 1.0], [13500.0, 1.0], [13600.0, 2.0], [13700.0, 1.0], [14100.0, 1.0], [15200.0, 3.0], [15700.0, 1.0], [16500.0, 2.0], [17300.0, 1.0], [18100.0, 1.0], [18400.0, 1.0], [17900.0, 1.0], [18500.0, 1.0], [19200.0, 1.0], [19100.0, 1.0], [20300.0, 1.0], [19800.0, 1.0], [20700.0, 2.0], [21800.0, 1.0], [23300.0, 1.0], [25200.0, 1.0], [100.0, 16.0], [27200.0, 1.0], [200.0, 10.0], [300.0, 1.0], [400.0, 11.0], [500.0, 7.0]], "isOverall": false, "label": "Modify User Infomation", "isController": true}, {"data": [[2300.0, 2.0], [3000.0, 2.0], [3300.0, 2.0], [3500.0, 2.0], [3700.0, 6.0], [3800.0, 2.0], [4200.0, 2.0], [4800.0, 2.0], [5100.0, 6.0], [4900.0, 2.0], [5500.0, 2.0], [5400.0, 2.0], [5800.0, 4.0], [5700.0, 2.0], [6200.0, 2.0], [6600.0, 4.0], [6900.0, 4.0], [6800.0, 2.0], [7300.0, 2.0], [7500.0, 4.0], [7600.0, 2.0], [7700.0, 8.0], [7800.0, 4.0], [8500.0, 2.0], [8600.0, 4.0], [8700.0, 2.0], [9000.0, 4.0], [8800.0, 2.0], [9100.0, 2.0], [8900.0, 2.0], [9300.0, 4.0], [9600.0, 6.0], [9500.0, 6.0], [9400.0, 4.0], [9700.0, 2.0], [9800.0, 6.0], [9900.0, 10.0], [10100.0, 8.0], [10200.0, 8.0], [10300.0, 6.0], [10700.0, 8.0], [10400.0, 6.0], [10600.0, 6.0], [10500.0, 2.0], [10900.0, 10.0], [10800.0, 8.0], [11100.0, 8.0], [11200.0, 14.0], [11000.0, 2.0], [11300.0, 12.0], [11400.0, 4.0], [11500.0, 6.0], [11600.0, 2.0], [11800.0, 4.0], [12100.0, 4.0], [11900.0, 4.0], [12600.0, 8.0], [12700.0, 8.0], [12300.0, 14.0], [12500.0, 6.0], [12400.0, 4.0], [12800.0, 6.0], [13000.0, 4.0], [13100.0, 6.0], [13300.0, 2.0], [12900.0, 2.0], [13200.0, 4.0], [13400.0, 4.0], [14000.0, 2.0], [13900.0, 4.0], [14200.0, 2.0], [14100.0, 2.0], [14400.0, 4.0], [14600.0, 6.0], [14700.0, 6.0], [14500.0, 6.0], [14800.0, 2.0], [15200.0, 4.0], [15100.0, 8.0], [15300.0, 4.0], [15000.0, 2.0], [14900.0, 4.0], [15500.0, 2.0], [15700.0, 6.0], [15400.0, 6.0], [15600.0, 2.0], [16000.0, 6.0], [16100.0, 16.0], [15900.0, 4.0], [16300.0, 2.0], [17200.0, 8.0], [16500.0, 4.0], [16400.0, 4.0], [17000.0, 6.0], [16600.0, 12.0], [16700.0, 8.0], [16800.0, 2.0], [16900.0, 4.0], [17100.0, 4.0], [17300.0, 10.0], [17400.0, 4.0], [17500.0, 8.0], [18400.0, 14.0], [17700.0, 4.0], [18300.0, 10.0], [18100.0, 6.0], [17800.0, 8.0], [18000.0, 16.0], [17600.0, 8.0], [18200.0, 4.0], [17900.0, 4.0], [19200.0, 2.0], [18700.0, 8.0], [19300.0, 4.0], [19400.0, 2.0], [19000.0, 8.0], [18600.0, 10.0], [18900.0, 4.0], [18500.0, 8.0], [18800.0, 8.0], [19100.0, 2.0], [20000.0, 4.0], [20200.0, 6.0], [19900.0, 2.0], [19700.0, 2.0], [19600.0, 2.0], [19500.0, 6.0], [19800.0, 4.0], [20700.0, 2.0], [20500.0, 4.0], [21100.0, 4.0], [21400.0, 4.0], [21200.0, 2.0], [20800.0, 4.0], [20600.0, 2.0], [20900.0, 2.0], [21800.0, 4.0], [21900.0, 10.0], [22400.0, 2.0], [23500.0, 2.0], [24500.0, 2.0], [24100.0, 2.0], [25400.0, 2.0], [25900.0, 6.0], [26200.0, 4.0], [26000.0, 2.0], [26500.0, 2.0], [27200.0, 4.0], [28500.0, 2.0], [28100.0, 2.0], [28000.0, 6.0], [27700.0, 2.0], [28400.0, 2.0], [29400.0, 2.0], [28900.0, 2.0], [29300.0, 2.0], [31700.0, 2.0], [30900.0, 2.0], [31800.0, 2.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[32900.0, 2.0], [34700.0, 4.0], [33300.0, 2.0], [34500.0, 2.0], [33700.0, 2.0], [33500.0, 4.0], [36100.0, 2.0], [36500.0, 2.0], [34900.0, 2.0], [37100.0, 2.0], [37500.0, 2.0], [38300.0, 2.0], [37900.0, 2.0], [38500.0, 2.0], [38900.0, 2.0], [37300.0, 2.0], [40500.0, 2.0], [39500.0, 2.0], [40100.0, 4.0], [39900.0, 2.0], [40900.0, 2.0], [40300.0, 2.0], [42900.0, 6.0], [42500.0, 2.0], [42100.0, 6.0], [42700.0, 2.0], [42300.0, 2.0], [43100.0, 4.0], [44500.0, 6.0], [43900.0, 4.0], [44300.0, 4.0], [44100.0, 2.0], [43500.0, 2.0], [43300.0, 2.0], [44900.0, 2.0], [45500.0, 4.0], [46900.0, 2.0], [45900.0, 2.0], [45300.0, 2.0], [46300.0, 2.0], [46700.0, 2.0], [47300.0, 2.0], [49100.0, 2.0], [48300.0, 2.0], [49700.0, 2.0], [50700.0, 2.0], [50100.0, 2.0], [49900.0, 2.0], [52100.0, 2.0], [52900.0, 2.0], [55100.0, 2.0], [54900.0, 2.0], [54700.0, 2.0], [53900.0, 2.0], [55500.0, 2.0], [61300.0, 2.0], [9200.0, 2.0], [13600.0, 2.0], [14300.0, 2.0], [17800.0, 2.0], [19200.0, 2.0], [18800.0, 2.0], [19900.0, 2.0], [21500.0, 2.0], [22000.0, 2.0], [23300.0, 8.0], [22800.0, 2.0], [23900.0, 2.0], [24400.0, 2.0], [24600.0, 2.0], [24700.0, 4.0], [24800.0, 2.0], [25400.0, 2.0], [25100.0, 2.0], [25900.0, 2.0], [26200.0, 2.0], [26600.0, 4.0], [27300.0, 2.0], [27500.0, 2.0], [28100.0, 2.0], [28000.0, 2.0], [28400.0, 4.0], [29000.0, 2.0], [28700.0, 2.0], [29300.0, 2.0], [29100.0, 2.0], [29800.0, 2.0], [30600.0, 2.0], [29900.0, 2.0], [30300.0, 2.0], [31200.0, 6.0], [31300.0, 2.0], [31400.0, 2.0], [31700.0, 2.0], [30800.0, 2.0], [31600.0, 2.0], [32000.0, 2.0], [32400.0, 2.0], [32700.0, 4.0], [31800.0, 2.0], [32500.0, 4.0], [32600.0, 2.0], [33200.0, 2.0], [34200.0, 4.0], [34800.0, 2.0], [32800.0, 2.0], [35600.0, 4.0], [36200.0, 4.0], [35800.0, 2.0], [35200.0, 2.0], [37200.0, 6.0], [38000.0, 2.0], [37400.0, 2.0], [37000.0, 4.0], [38200.0, 4.0], [38600.0, 2.0], [38400.0, 2.0], [38800.0, 4.0], [39800.0, 2.0], [40400.0, 8.0], [40600.0, 2.0], [39000.0, 4.0], [39200.0, 2.0], [39600.0, 4.0], [41400.0, 10.0], [41600.0, 6.0], [41800.0, 2.0], [43000.0, 2.0], [42000.0, 2.0], [42200.0, 2.0], [44800.0, 2.0], [44400.0, 4.0], [44200.0, 4.0], [43400.0, 2.0], [45000.0, 4.0], [43200.0, 2.0], [46400.0, 4.0], [45600.0, 6.0], [46600.0, 2.0], [45400.0, 4.0], [45800.0, 2.0], [46200.0, 2.0], [48400.0, 2.0], [47600.0, 4.0], [47400.0, 2.0], [47800.0, 2.0], [48800.0, 2.0], [50200.0, 4.0], [50000.0, 2.0], [52000.0, 2.0], [53200.0, 2.0], [56000.0, 2.0], [58600.0, 2.0], [57400.0, 2.0], [61400.0, 4.0], [59800.0, 2.0], [62400.0, 2.0], [74400.0, 2.0]], "isOverall": false, "label": "Modify Password", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 74400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 27.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 680.0, "series": [{"data": [[0.0, 41.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 27.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 680.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 96.61904761904765, "minX": 1.5779373E12, "maxY": 199.89098532494756, "series": [{"data": [[1.5779373E12, 173.46341463414615], [1.57793736E12, 199.89098532494756], [1.57793742E12, 96.61904761904765]], "isOverall": false, "label": "User Infomation Manage Thread Group(\u4E2A\u4EBA\u4FE1\u606F\u7BA1\u7406)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793742E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 3049.0, "minX": 2.0, "maxY": 61407.0, "series": [{"data": [[200.0, 6086.597633136095]], "isOverall": false, "label": "Modify User Info", "isController": false}, {"data": [[200.0, 6086.597633136095]], "isOverall": false, "label": "Modify User Info-Aggregated", "isController": false}, {"data": [[200.0, 6086.597633136096]], "isOverall": false, "label": "Modify User Infomation", "isController": true}, {"data": [[200.0, 6086.597633136096]], "isOverall": false, "label": "Modify User Infomation-Aggregated", "isController": true}, {"data": [[18.0, 7743.0], [20.0, 7711.5], [21.0, 7578.0], [22.0, 10245.0], [23.0, 10118.0], [25.0, 8742.0], [26.0, 13085.0], [31.0, 13758.0], [33.0, 12737.0], [32.0, 9616.0], [35.0, 12652.0], [37.0, 12708.0], [36.0, 18003.0], [39.0, 12449.0], [38.0, 18802.0], [41.0, 17449.0], [42.0, 12594.0], [44.0, 12357.0], [46.0, 18136.0], [49.0, 19052.0], [48.0, 17704.0], [51.0, 18916.5], [52.0, 18217.0], [54.0, 22837.5], [56.0, 12724.0], [71.0, 19131.466666666667], [72.0, 3049.0], [75.0, 18611.0], [74.0, 16107.0], [73.0, 16911.5], [77.0, 7638.0], [79.0, 17591.0], [76.0, 18189.0], [83.0, 18216.0], [82.0, 17436.0], [81.0, 14962.0], [80.0, 18098.0], [85.0, 3683.0], [87.0, 3839.0], [95.0, 18395.0], [94.0, 17906.0], [99.0, 28437.0], [98.0, 20674.0], [101.0, 15404.0], [100.0, 17269.0], [107.0, 18050.0], [105.0, 17797.5], [111.0, 17272.0], [109.0, 15799.0], [108.0, 18079.0], [113.0, 7689.799999999999], [114.0, 4847.0], [119.0, 17793.0], [118.0, 17366.0], [117.0, 21187.600000000002], [121.0, 17352.0], [120.0, 17673.0], [127.0, 5795.666666666667], [130.0, 5519.5], [135.0, 21654.599999999995], [134.0, 20859.0], [132.0, 19177.0], [131.0, 17285.0], [143.0, 16608.0], [142.0, 17064.5], [140.0, 17364.0], [139.0, 17025.0], [138.0, 19531.0], [137.0, 20527.0], [136.0, 17816.0], [148.0, 6250.0], [150.0, 16108.0], [147.0, 20204.0], [145.0, 17125.0], [144.0, 17544.0], [153.0, 14002.333333333334], [158.0, 17371.5], [159.0, 16687.0], [157.0, 24126.0], [156.0, 16851.0], [155.0, 28020.0], [154.0, 25982.0], [163.0, 11834.75], [167.0, 16314.0], [166.0, 18915.0], [165.0, 19580.0], [161.0, 16638.0], [173.0, 16814.666666666664], [175.0, 16146.0], [174.0, 16165.0], [171.0, 16024.0], [170.0, 16123.0], [169.0, 18512.0], [168.0, 18529.0], [181.0, 11916.5], [183.0, 6864.0], [182.0, 14775.0], [178.0, 15667.0], [177.0, 15946.0], [176.0, 19010.0], [185.0, 7855.0], [189.0, 11415.5], [191.0, 16994.0], [190.0, 28055.0], [188.0, 19223.0], [186.0, 15330.0], [184.0, 15133.0], [198.0, 14968.0], [199.0, 12268.0], [197.0, 21961.0], [196.0, 13904.0], [195.0, 22434.0], [194.0, 14890.666666666666], [200.0, 14411.9497206704]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[154.98102981029808, 15079.661246612472]], "isOverall": false, "label": "Login-Aggregated", "isController": false}, {"data": [[2.0, 11453.0], [34.0, 43264.0], [44.0, 46339.0], [3.0, 14326.0], [4.0, 17864.0], [5.0, 45611.0], [84.0, 61407.0], [94.0, 56307.0], [97.0, 55551.0], [96.0, 56052.0], [6.0, 21530.0], [150.0, 50025.0], [147.0, 58663.0], [153.0, 50001.0], [165.0, 52957.0], [161.0, 50740.0], [182.0, 48822.0], [179.0, 52173.0], [185.0, 53212.0], [184.0, 55164.0], [200.0, 37743.63313609466], [13.0, 18878.0], [15.0, 35988.74999999999], [16.0, 46766.0], [17.0, 48302.0]], "isOverall": false, "label": "Modify Password", "isController": false}, {"data": [[175.45238095238088, 39018.690476190466]], "isOverall": false, "label": "Modify Password-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.5779373E12, "maxY": 4959.583333333333, "series": [{"data": [[1.5779373E12, 1101.15], [1.57793736E12, 4959.583333333333], [1.57793742E12, 2358.85]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.5779373E12, 0.0], [1.57793736E12, 0.0], [1.57793742E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793742E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 6086.597633136095, "minX": 1.5779373E12, "maxY": 44274.414634146335, "series": [{"data": [[1.57793736E12, 6086.597633136095]], "isOverall": false, "label": "Modify User Info", "isController": false}, {"data": [[1.57793736E12, 6086.597633136096]], "isOverall": false, "label": "Modify User Infomation", "isController": true}, {"data": [[1.5779373E12, 8402.93902439024], [1.57793736E12, 16306.93525179856], [1.57793742E12, 17626.283783783787]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.57793736E12, 37743.63313609466], [1.57793742E12, 44274.414634146335]], "isOverall": false, "label": "Modify Password", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793742E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 6086.2544378698185, "minX": 1.5779373E12, "maxY": 44274.2926829268, "series": [{"data": [[1.57793736E12, 6086.2544378698185]], "isOverall": false, "label": "Modify User Info", "isController": false}, {"data": [[1.57793736E12, 6086.25443786982]], "isOverall": false, "label": "Modify User Infomation", "isController": true}, {"data": [[1.5779373E12, 8402.69512195122], [1.57793736E12, 16257.388489208637], [1.57793742E12, 17586.033783783787]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.57793736E12, 37742.94674556209], [1.57793742E12, 44274.2926829268]], "isOverall": false, "label": "Modify Password", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793742E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 45.98224852071006, "minX": 1.5779373E12, "maxY": 80.35971223021586, "series": [{"data": [[1.57793736E12, 45.98224852071006]], "isOverall": false, "label": "Modify User Info", "isController": false}, {"data": [[1.57793736E12, 45.982248520710066]], "isOverall": false, "label": "Modify User Infomation", "isController": true}, {"data": [[1.5779373E12, 67.01219512195122], [1.57793736E12, 80.35971223021586], [1.57793742E12, 49.70945945945946]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.57793736E12, 56.02366863905328], [1.57793742E12, 54.24390243902438]], "isOverall": false, "label": "Modify Password", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793742E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 77.0, "minX": 1.5779373E12, "maxY": 74447.0, "series": [{"data": [[1.5779373E12, 11875.0], [1.57793736E12, 52041.0], [1.57793742E12, 74447.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.5779373E12, 2342.0], [1.57793736E12, 77.0], [1.57793742E12, 7384.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.5779373E12, 10939.5], [1.57793736E12, 42982.8], [1.57793742E12, 50103.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.5779373E12, 11875.0], [1.57793736E12, 49258.33999999998], [1.57793742E12, 63683.89999999993]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.5779373E12, 11336.05], [1.57793736E12, 45411.299999999996], [1.57793742E12, 55801.5]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793742E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 7577.0, "minX": 1.0, "maxY": 36466.0, "series": [{"data": [[2.0, 23894.5], [8.0, 36466.0], [33.0, 17818.0], [32.0, 18393.5], [9.0, 15411.0], [10.0, 11518.0], [11.0, 15256.5], [3.0, 27865.5], [12.0, 11031.5], [13.0, 23334.0], [14.0, 10385.5], [58.0, 18101.0], [15.0, 13414.5], [4.0, 18073.5], [1.0, 26677.0], [16.0, 19238.5], [5.0, 10216.0], [6.0, 8896.5], [24.0, 18520.5], [109.0, 7577.0], [7.0, 14962.5], [28.0, 11586.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 109.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 7576.0, "minX": 1.0, "maxY": 36458.5, "series": [{"data": [[2.0, 23331.0], [8.0, 36458.5], [33.0, 17818.0], [32.0, 18244.0], [9.0, 15411.0], [10.0, 11517.5], [11.0, 15256.0], [3.0, 27865.5], [12.0, 11031.5], [13.0, 23333.5], [14.0, 10385.5], [58.0, 18100.5], [15.0, 13414.5], [4.0, 18073.0], [1.0, 26677.0], [16.0, 19238.0], [5.0, 10216.0], [6.0, 8896.5], [24.0, 18520.0], [109.0, 7576.0], [7.0, 14734.0], [28.0, 11586.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 109.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 4.7, "minX": 1.5779373E12, "maxY": 7.766666666666667, "series": [{"data": [[1.5779373E12, 4.7], [1.57793736E12, 7.766666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793736E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.3666666666666667, "minX": 1.5779373E12, "maxY": 7.95, "series": [{"data": [[1.5779373E12, 1.3666666666666667], [1.57793736E12, 7.95], [1.57793742E12, 3.15]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793742E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.3666666666666667, "minX": 1.5779373E12, "maxY": 5.633333333333334, "series": [{"data": [[1.57793736E12, 5.633333333333334], [1.57793742E12, 1.3666666666666667]], "isOverall": false, "label": "Modify Password-success", "isController": false}, {"data": [[1.57793736E12, 2.816666666666667]], "isOverall": false, "label": "Modify User Infomation-success", "isController": true}, {"data": [[1.5779373E12, 2.7333333333333334], [1.57793736E12, 4.633333333333334], [1.57793742E12, 4.933333333333334]], "isOverall": false, "label": "Login-success", "isController": false}, {"data": [[1.57793736E12, 2.816666666666667]], "isOverall": false, "label": "Modify User Info-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793742E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 2.7333333333333334, "minX": 1.5779373E12, "maxY": 15.9, "series": [{"data": [[1.5779373E12, 2.7333333333333334], [1.57793736E12, 15.9], [1.57793742E12, 6.3]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793742E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

