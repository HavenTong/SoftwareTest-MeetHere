/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 39.0, "minX": 0.0, "maxY": 2160.0, "series": [{"data": [[0.0, 39.0], [0.1, 39.0], [0.2, 39.0], [0.3, 39.0], [0.4, 39.0], [0.5, 44.0], [0.6, 44.0], [0.7, 44.0], [0.8, 44.0], [0.9, 45.0], [1.0, 45.0], [1.1, 45.0], [1.2, 45.0], [1.3, 46.0], [1.4, 46.0], [1.5, 46.0], [1.6, 46.0], [1.7, 46.0], [1.8, 46.0], [1.9, 46.0], [2.0, 46.0], [2.1, 46.0], [2.2, 46.0], [2.3, 46.0], [2.4, 46.0], [2.5, 46.0], [2.6, 47.0], [2.7, 47.0], [2.8, 47.0], [2.9, 47.0], [3.0, 47.0], [3.1, 48.0], [3.2, 48.0], [3.3, 48.0], [3.4, 48.0], [3.5, 48.0], [3.6, 48.0], [3.7, 48.0], [3.8, 48.0], [3.9, 49.0], [4.0, 49.0], [4.1, 49.0], [4.2, 49.0], [4.3, 53.0], [4.4, 53.0], [4.5, 53.0], [4.6, 53.0], [4.7, 53.0], [4.8, 61.0], [4.9, 61.0], [5.0, 61.0], [5.1, 61.0], [5.2, 68.0], [5.3, 68.0], [5.4, 68.0], [5.5, 68.0], [5.6, 70.0], [5.7, 70.0], [5.8, 70.0], [5.9, 70.0], [6.0, 70.0], [6.1, 71.0], [6.2, 71.0], [6.3, 71.0], [6.4, 71.0], [6.5, 74.0], [6.6, 74.0], [6.7, 74.0], [6.8, 74.0], [6.9, 74.0], [7.0, 74.0], [7.1, 74.0], [7.2, 74.0], [7.3, 75.0], [7.4, 75.0], [7.5, 75.0], [7.6, 75.0], [7.7, 75.0], [7.8, 75.0], [7.9, 75.0], [8.0, 75.0], [8.1, 75.0], [8.2, 76.0], [8.3, 76.0], [8.4, 76.0], [8.5, 76.0], [8.6, 76.0], [8.7, 76.0], [8.8, 76.0], [8.9, 76.0], [9.0, 76.0], [9.1, 77.0], [9.2, 77.0], [9.3, 77.0], [9.4, 77.0], [9.5, 78.0], [9.6, 78.0], [9.7, 78.0], [9.8, 78.0], [9.9, 78.0], [10.0, 78.0], [10.1, 78.0], [10.2, 78.0], [10.3, 78.0], [10.4, 79.0], [10.5, 79.0], [10.6, 79.0], [10.7, 79.0], [10.8, 80.0], [10.9, 80.0], [11.0, 80.0], [11.1, 80.0], [11.2, 80.0], [11.3, 80.0], [11.4, 80.0], [11.5, 80.0], [11.6, 80.0], [11.7, 80.0], [11.8, 80.0], [11.9, 80.0], [12.0, 80.0], [12.1, 80.0], [12.2, 80.0], [12.3, 80.0], [12.4, 80.0], [12.5, 80.0], [12.6, 80.0], [12.7, 80.0], [12.8, 80.0], [12.9, 81.0], [13.0, 81.0], [13.1, 81.0], [13.2, 81.0], [13.3, 81.0], [13.4, 82.0], [13.5, 82.0], [13.6, 82.0], [13.7, 82.0], [13.8, 82.0], [13.9, 82.0], [14.0, 82.0], [14.1, 82.0], [14.2, 82.0], [14.3, 82.0], [14.4, 82.0], [14.5, 82.0], [14.6, 83.0], [14.7, 83.0], [14.8, 83.0], [14.9, 83.0], [15.0, 83.0], [15.1, 83.0], [15.2, 83.0], [15.3, 83.0], [15.4, 83.0], [15.5, 84.0], [15.6, 84.0], [15.7, 84.0], [15.8, 84.0], [15.9, 84.0], [16.0, 84.0], [16.1, 84.0], [16.2, 84.0], [16.3, 84.0], [16.4, 84.0], [16.5, 84.0], [16.6, 84.0], [16.7, 84.0], [16.8, 85.0], [16.9, 85.0], [17.0, 85.0], [17.1, 85.0], [17.2, 85.0], [17.3, 85.0], [17.4, 85.0], [17.5, 85.0], [17.6, 85.0], [17.7, 85.0], [17.8, 85.0], [17.9, 85.0], [18.0, 85.0], [18.1, 85.0], [18.2, 85.0], [18.3, 85.0], [18.4, 85.0], [18.5, 86.0], [18.6, 86.0], [18.7, 86.0], [18.8, 86.0], [18.9, 87.0], [19.0, 87.0], [19.1, 87.0], [19.2, 87.0], [19.3, 87.0], [19.4, 87.0], [19.5, 87.0], [19.6, 87.0], [19.7, 87.0], [19.8, 87.0], [19.9, 87.0], [20.0, 87.0], [20.1, 87.0], [20.2, 88.0], [20.3, 88.0], [20.4, 88.0], [20.5, 88.0], [20.6, 88.0], [20.7, 88.0], [20.8, 88.0], [20.9, 88.0], [21.0, 88.0], [21.1, 88.0], [21.2, 88.0], [21.3, 88.0], [21.4, 88.0], [21.5, 88.0], [21.6, 88.0], [21.7, 88.0], [21.8, 88.0], [21.9, 89.0], [22.0, 89.0], [22.1, 89.0], [22.2, 89.0], [22.3, 89.0], [22.4, 89.0], [22.5, 89.0], [22.6, 89.0], [22.7, 89.0], [22.8, 89.0], [22.9, 89.0], [23.0, 89.0], [23.1, 89.0], [23.2, 89.0], [23.3, 89.0], [23.4, 89.0], [23.5, 89.0], [23.6, 89.0], [23.7, 90.0], [23.8, 90.0], [23.9, 90.0], [24.0, 90.0], [24.1, 90.0], [24.2, 90.0], [24.3, 90.0], [24.4, 90.0], [24.5, 91.0], [24.6, 91.0], [24.7, 91.0], [24.8, 91.0], [24.9, 91.0], [25.0, 91.0], [25.1, 91.0], [25.2, 91.0], [25.3, 91.0], [25.4, 91.0], [25.5, 91.0], [25.6, 91.0], [25.7, 91.0], [25.8, 92.0], [25.9, 92.0], [26.0, 92.0], [26.1, 92.0], [26.2, 92.0], [26.3, 92.0], [26.4, 92.0], [26.5, 92.0], [26.6, 92.0], [26.7, 92.0], [26.8, 92.0], [26.9, 92.0], [27.0, 92.0], [27.1, 93.0], [27.2, 93.0], [27.3, 93.0], [27.4, 93.0], [27.5, 93.0], [27.6, 93.0], [27.7, 93.0], [27.8, 93.0], [27.9, 93.0], [28.0, 93.0], [28.1, 93.0], [28.2, 93.0], [28.3, 93.0], [28.4, 94.0], [28.5, 94.0], [28.6, 94.0], [28.7, 94.0], [28.8, 94.0], [28.9, 94.0], [29.0, 94.0], [29.1, 94.0], [29.2, 94.0], [29.3, 94.0], [29.4, 94.0], [29.5, 94.0], [29.6, 94.0], [29.7, 94.0], [29.8, 94.0], [29.9, 94.0], [30.0, 94.0], [30.1, 94.0], [30.2, 94.0], [30.3, 94.0], [30.4, 94.0], [30.5, 95.0], [30.6, 95.0], [30.7, 95.0], [30.8, 95.0], [30.9, 95.0], [31.0, 95.0], [31.1, 95.0], [31.2, 95.0], [31.3, 95.0], [31.4, 95.0], [31.5, 95.0], [31.6, 95.0], [31.7, 95.0], [31.8, 95.0], [31.9, 95.0], [32.0, 95.0], [32.1, 95.0], [32.2, 95.0], [32.3, 95.0], [32.4, 95.0], [32.5, 95.0], [32.6, 95.0], [32.7, 95.0], [32.8, 95.0], [32.9, 95.0], [33.0, 95.0], [33.1, 95.0], [33.2, 95.0], [33.3, 95.0], [33.4, 95.0], [33.5, 95.0], [33.6, 95.0], [33.7, 95.0], [33.8, 95.0], [33.9, 95.0], [34.0, 96.0], [34.1, 96.0], [34.2, 96.0], [34.3, 96.0], [34.4, 96.0], [34.5, 96.0], [34.6, 96.0], [34.7, 96.0], [34.8, 96.0], [34.9, 96.0], [35.0, 96.0], [35.1, 96.0], [35.2, 96.0], [35.3, 96.0], [35.4, 96.0], [35.5, 96.0], [35.6, 96.0], [35.7, 96.0], [35.8, 96.0], [35.9, 96.0], [36.0, 96.0], [36.1, 97.0], [36.2, 97.0], [36.3, 97.0], [36.4, 97.0], [36.5, 97.0], [36.6, 97.0], [36.7, 97.0], [36.8, 97.0], [36.9, 97.0], [37.0, 97.0], [37.1, 97.0], [37.2, 97.0], [37.3, 97.0], [37.4, 98.0], [37.5, 98.0], [37.6, 98.0], [37.7, 98.0], [37.8, 98.0], [37.9, 98.0], [38.0, 98.0], [38.1, 98.0], [38.2, 98.0], [38.3, 98.0], [38.4, 98.0], [38.5, 98.0], [38.6, 98.0], [38.7, 98.0], [38.8, 98.0], [38.9, 98.0], [39.0, 98.0], [39.1, 98.0], [39.2, 98.0], [39.3, 98.0], [39.4, 98.0], [39.5, 99.0], [39.6, 99.0], [39.7, 99.0], [39.8, 99.0], [39.9, 99.0], [40.0, 99.0], [40.1, 99.0], [40.2, 99.0], [40.3, 99.0], [40.4, 99.0], [40.5, 99.0], [40.6, 99.0], [40.7, 99.0], [40.8, 100.0], [40.9, 100.0], [41.0, 100.0], [41.1, 100.0], [41.2, 100.0], [41.3, 100.0], [41.4, 100.0], [41.5, 100.0], [41.6, 100.0], [41.7, 100.0], [41.8, 100.0], [41.9, 100.0], [42.0, 100.0], [42.1, 100.0], [42.2, 100.0], [42.3, 100.0], [42.4, 100.0], [42.5, 101.0], [42.6, 101.0], [42.7, 101.0], [42.8, 101.0], [42.9, 101.0], [43.0, 101.0], [43.1, 101.0], [43.2, 101.0], [43.3, 101.0], [43.4, 101.0], [43.5, 101.0], [43.6, 101.0], [43.7, 101.0], [43.8, 101.0], [43.9, 101.0], [44.0, 101.0], [44.1, 101.0], [44.2, 101.0], [44.3, 101.0], [44.4, 101.0], [44.5, 101.0], [44.6, 101.0], [44.7, 102.0], [44.8, 102.0], [44.9, 102.0], [45.0, 102.0], [45.1, 102.0], [45.2, 102.0], [45.3, 102.0], [45.4, 102.0], [45.5, 102.0], [45.6, 102.0], [45.7, 102.0], [45.8, 102.0], [45.9, 102.0], [46.0, 103.0], [46.1, 103.0], [46.2, 103.0], [46.3, 103.0], [46.4, 103.0], [46.5, 103.0], [46.6, 103.0], [46.7, 103.0], [46.8, 103.0], [46.9, 103.0], [47.0, 103.0], [47.1, 103.0], [47.2, 103.0], [47.3, 103.0], [47.4, 103.0], [47.5, 103.0], [47.6, 103.0], [47.7, 104.0], [47.8, 104.0], [47.9, 104.0], [48.0, 104.0], [48.1, 104.0], [48.2, 104.0], [48.3, 104.0], [48.4, 104.0], [48.5, 104.0], [48.6, 104.0], [48.7, 104.0], [48.8, 104.0], [48.9, 104.0], [49.0, 104.0], [49.1, 104.0], [49.2, 104.0], [49.3, 104.0], [49.4, 104.0], [49.5, 104.0], [49.6, 104.0], [49.7, 104.0], [49.8, 104.0], [49.9, 104.0], [50.0, 104.0], [50.1, 104.0], [50.2, 104.0], [50.3, 104.0], [50.4, 104.0], [50.5, 104.0], [50.6, 104.0], [50.7, 105.0], [50.8, 105.0], [50.9, 105.0], [51.0, 105.0], [51.1, 105.0], [51.2, 105.0], [51.3, 105.0], [51.4, 105.0], [51.5, 105.0], [51.6, 105.0], [51.7, 105.0], [51.8, 105.0], [51.9, 105.0], [52.0, 105.0], [52.1, 105.0], [52.2, 105.0], [52.3, 105.0], [52.4, 105.0], [52.5, 105.0], [52.6, 105.0], [52.7, 105.0], [52.8, 106.0], [52.9, 106.0], [53.0, 106.0], [53.1, 106.0], [53.2, 106.0], [53.3, 106.0], [53.4, 106.0], [53.5, 106.0], [53.6, 106.0], [53.7, 107.0], [53.8, 107.0], [53.9, 107.0], [54.0, 107.0], [54.1, 107.0], [54.2, 107.0], [54.3, 107.0], [54.4, 107.0], [54.5, 107.0], [54.6, 109.0], [54.7, 109.0], [54.8, 109.0], [54.9, 109.0], [55.0, 109.0], [55.1, 109.0], [55.2, 109.0], [55.3, 109.0], [55.4, 109.0], [55.5, 109.0], [55.6, 109.0], [55.7, 109.0], [55.8, 110.0], [55.9, 110.0], [56.0, 110.0], [56.1, 110.0], [56.2, 110.0], [56.3, 110.0], [56.4, 110.0], [56.5, 110.0], [56.6, 110.0], [56.7, 111.0], [56.8, 111.0], [56.9, 111.0], [57.0, 111.0], [57.1, 111.0], [57.2, 111.0], [57.3, 111.0], [57.4, 111.0], [57.5, 111.0], [57.6, 111.0], [57.7, 111.0], [57.8, 111.0], [57.9, 111.0], [58.0, 112.0], [58.1, 112.0], [58.2, 112.0], [58.3, 112.0], [58.4, 113.0], [58.5, 113.0], [58.6, 113.0], [58.7, 113.0], [58.8, 113.0], [58.9, 113.0], [59.0, 113.0], [59.1, 113.0], [59.2, 113.0], [59.3, 114.0], [59.4, 114.0], [59.5, 114.0], [59.6, 114.0], [59.7, 114.0], [59.8, 114.0], [59.9, 114.0], [60.0, 114.0], [60.1, 114.0], [60.2, 114.0], [60.3, 114.0], [60.4, 114.0], [60.5, 114.0], [60.6, 114.0], [60.7, 114.0], [60.8, 114.0], [60.9, 114.0], [61.0, 115.0], [61.1, 115.0], [61.2, 115.0], [61.3, 115.0], [61.4, 115.0], [61.5, 115.0], [61.6, 115.0], [61.7, 115.0], [61.8, 115.0], [61.9, 116.0], [62.0, 116.0], [62.1, 116.0], [62.2, 116.0], [62.3, 116.0], [62.4, 116.0], [62.5, 116.0], [62.6, 116.0], [62.7, 117.0], [62.8, 117.0], [62.9, 117.0], [63.0, 117.0], [63.1, 117.0], [63.2, 117.0], [63.3, 117.0], [63.4, 117.0], [63.5, 117.0], [63.6, 117.0], [63.7, 117.0], [63.8, 117.0], [63.9, 117.0], [64.0, 117.0], [64.1, 117.0], [64.2, 117.0], [64.3, 117.0], [64.4, 118.0], [64.5, 118.0], [64.6, 118.0], [64.7, 118.0], [64.8, 118.0], [64.9, 118.0], [65.0, 118.0], [65.1, 118.0], [65.2, 118.0], [65.3, 118.0], [65.4, 118.0], [65.5, 118.0], [65.6, 118.0], [65.7, 118.0], [65.8, 118.0], [65.9, 118.0], [66.0, 118.0], [66.1, 118.0], [66.2, 118.0], [66.3, 118.0], [66.4, 118.0], [66.5, 118.0], [66.6, 118.0], [66.7, 118.0], [66.8, 118.0], [66.9, 118.0], [67.0, 118.0], [67.1, 118.0], [67.2, 118.0], [67.3, 118.0], [67.4, 119.0], [67.5, 119.0], [67.6, 119.0], [67.7, 119.0], [67.8, 119.0], [67.9, 119.0], [68.0, 119.0], [68.1, 119.0], [68.2, 119.0], [68.3, 119.0], [68.4, 119.0], [68.5, 119.0], [68.6, 119.0], [68.7, 119.0], [68.8, 119.0], [68.9, 119.0], [69.0, 119.0], [69.1, 119.0], [69.2, 119.0], [69.3, 119.0], [69.4, 119.0], [69.5, 119.0], [69.6, 120.0], [69.7, 120.0], [69.8, 120.0], [69.9, 120.0], [70.0, 120.0], [70.1, 120.0], [70.2, 120.0], [70.3, 120.0], [70.4, 120.0], [70.5, 120.0], [70.6, 120.0], [70.7, 120.0], [70.8, 120.0], [70.9, 120.0], [71.0, 120.0], [71.1, 120.0], [71.2, 120.0], [71.3, 121.0], [71.4, 121.0], [71.5, 121.0], [71.6, 121.0], [71.7, 121.0], [71.8, 121.0], [71.9, 121.0], [72.0, 121.0], [72.1, 121.0], [72.2, 122.0], [72.3, 122.0], [72.4, 122.0], [72.5, 122.0], [72.6, 123.0], [72.7, 123.0], [72.8, 123.0], [72.9, 123.0], [73.0, 123.0], [73.1, 123.0], [73.2, 123.0], [73.3, 123.0], [73.4, 123.0], [73.5, 123.0], [73.6, 123.0], [73.7, 123.0], [73.8, 123.0], [73.9, 124.0], [74.0, 124.0], [74.1, 124.0], [74.2, 124.0], [74.3, 124.0], [74.4, 124.0], [74.5, 124.0], [74.6, 124.0], [74.7, 125.0], [74.8, 125.0], [74.9, 125.0], [75.0, 125.0], [75.1, 125.0], [75.2, 125.0], [75.3, 125.0], [75.4, 125.0], [75.5, 125.0], [75.6, 126.0], [75.7, 126.0], [75.8, 126.0], [75.9, 126.0], [76.0, 126.0], [76.1, 126.0], [76.2, 126.0], [76.3, 126.0], [76.4, 127.0], [76.5, 127.0], [76.6, 127.0], [76.7, 127.0], [76.8, 127.0], [76.9, 127.0], [77.0, 127.0], [77.1, 127.0], [77.2, 127.0], [77.3, 127.0], [77.4, 127.0], [77.5, 127.0], [77.6, 127.0], [77.7, 128.0], [77.8, 128.0], [77.9, 128.0], [78.0, 128.0], [78.1, 128.0], [78.2, 128.0], [78.3, 128.0], [78.4, 128.0], [78.5, 128.0], [78.6, 129.0], [78.7, 129.0], [78.8, 129.0], [78.9, 129.0], [79.0, 129.0], [79.1, 129.0], [79.2, 129.0], [79.3, 129.0], [79.4, 130.0], [79.5, 130.0], [79.6, 130.0], [79.7, 130.0], [79.8, 130.0], [79.9, 130.0], [80.0, 130.0], [80.1, 130.0], [80.2, 130.0], [80.3, 131.0], [80.4, 131.0], [80.5, 131.0], [80.6, 131.0], [80.7, 131.0], [80.8, 131.0], [80.9, 131.0], [81.0, 131.0], [81.1, 131.0], [81.2, 132.0], [81.3, 132.0], [81.4, 132.0], [81.5, 132.0], [81.6, 132.0], [81.7, 132.0], [81.8, 132.0], [81.9, 132.0], [82.0, 134.0], [82.1, 134.0], [82.2, 134.0], [82.3, 134.0], [82.4, 134.0], [82.5, 134.0], [82.6, 134.0], [82.7, 134.0], [82.8, 134.0], [82.9, 136.0], [83.0, 136.0], [83.1, 136.0], [83.2, 136.0], [83.3, 137.0], [83.4, 137.0], [83.5, 137.0], [83.6, 137.0], [83.7, 137.0], [83.8, 137.0], [83.9, 137.0], [84.0, 137.0], [84.1, 137.0], [84.2, 138.0], [84.3, 138.0], [84.4, 138.0], [84.5, 138.0], [84.6, 138.0], [84.7, 138.0], [84.8, 138.0], [84.9, 138.0], [85.0, 139.0], [85.1, 139.0], [85.2, 139.0], [85.3, 139.0], [85.4, 139.0], [85.5, 139.0], [85.6, 139.0], [85.7, 139.0], [85.8, 139.0], [85.9, 139.0], [86.0, 139.0], [86.1, 139.0], [86.2, 139.0], [86.3, 145.0], [86.4, 145.0], [86.5, 145.0], [86.6, 145.0], [86.7, 146.0], [86.8, 146.0], [86.9, 146.0], [87.0, 146.0], [87.1, 146.0], [87.2, 150.0], [87.3, 150.0], [87.4, 150.0], [87.5, 150.0], [87.6, 151.0], [87.7, 151.0], [87.8, 151.0], [87.9, 151.0], [88.0, 151.0], [88.1, 151.0], [88.2, 151.0], [88.3, 151.0], [88.4, 151.0], [88.5, 153.0], [88.6, 153.0], [88.7, 153.0], [88.8, 153.0], [88.9, 153.0], [89.0, 153.0], [89.1, 153.0], [89.2, 153.0], [89.3, 159.0], [89.4, 159.0], [89.5, 159.0], [89.6, 159.0], [89.7, 159.0], [89.8, 159.0], [89.9, 159.0], [90.0, 159.0], [90.1, 159.0], [90.2, 163.0], [90.3, 163.0], [90.4, 163.0], [90.5, 163.0], [90.6, 164.0], [90.7, 164.0], [90.8, 164.0], [90.9, 164.0], [91.0, 165.0], [91.1, 165.0], [91.2, 165.0], [91.3, 165.0], [91.4, 165.0], [91.5, 165.0], [91.6, 165.0], [91.7, 165.0], [91.8, 165.0], [91.9, 165.0], [92.0, 165.0], [92.1, 165.0], [92.2, 165.0], [92.3, 165.0], [92.4, 165.0], [92.5, 165.0], [92.6, 165.0], [92.7, 165.0], [92.8, 166.0], [92.9, 166.0], [93.0, 166.0], [93.1, 166.0], [93.2, 166.0], [93.3, 166.0], [93.4, 166.0], [93.5, 166.0], [93.6, 173.0], [93.7, 173.0], [93.8, 173.0], [93.9, 173.0], [94.0, 173.0], [94.1, 173.0], [94.2, 173.0], [94.3, 173.0], [94.4, 173.0], [94.5, 186.0], [94.6, 186.0], [94.7, 186.0], [94.8, 186.0], [94.9, 230.0], [95.0, 230.0], [95.1, 230.0], [95.2, 230.0], [95.3, 275.0], [95.4, 275.0], [95.5, 275.0], [95.6, 275.0], [95.7, 275.0], [95.8, 294.0], [95.9, 294.0], [96.0, 294.0], [96.1, 294.0], [96.2, 313.0], [96.3, 313.0], [96.4, 313.0], [96.5, 313.0], [96.6, 321.0], [96.7, 321.0], [96.8, 321.0], [96.9, 321.0], [97.0, 324.0], [97.1, 324.0], [97.2, 324.0], [97.3, 324.0], [97.4, 324.0], [97.5, 329.0], [97.6, 329.0], [97.7, 329.0], [97.8, 329.0], [97.9, 340.0], [98.0, 340.0], [98.1, 340.0], [98.2, 340.0], [98.3, 341.0], [98.4, 341.0], [98.5, 341.0], [98.6, 341.0], [98.7, 341.0], [98.8, 343.0], [98.9, 343.0], [99.0, 343.0], [99.1, 343.0], [99.2, 350.0], [99.3, 350.0], [99.4, 350.0], [99.5, 350.0], [99.6, 358.0], [99.7, 358.0], [99.8, 358.0], [99.9, 358.0]], "isOverall": false, "label": "Modify User Info", "isController": false}, {"data": [[0.0, 39.0], [0.1, 39.0], [0.2, 39.0], [0.3, 39.0], [0.4, 39.0], [0.5, 44.0], [0.6, 44.0], [0.7, 44.0], [0.8, 44.0], [0.9, 45.0], [1.0, 45.0], [1.1, 45.0], [1.2, 45.0], [1.3, 46.0], [1.4, 46.0], [1.5, 46.0], [1.6, 46.0], [1.7, 46.0], [1.8, 46.0], [1.9, 46.0], [2.0, 46.0], [2.1, 46.0], [2.2, 46.0], [2.3, 46.0], [2.4, 46.0], [2.5, 46.0], [2.6, 47.0], [2.7, 47.0], [2.8, 47.0], [2.9, 47.0], [3.0, 47.0], [3.1, 48.0], [3.2, 48.0], [3.3, 48.0], [3.4, 48.0], [3.5, 48.0], [3.6, 48.0], [3.7, 48.0], [3.8, 48.0], [3.9, 49.0], [4.0, 49.0], [4.1, 49.0], [4.2, 49.0], [4.3, 53.0], [4.4, 53.0], [4.5, 53.0], [4.6, 53.0], [4.7, 53.0], [4.8, 61.0], [4.9, 61.0], [5.0, 61.0], [5.1, 61.0], [5.2, 68.0], [5.3, 68.0], [5.4, 68.0], [5.5, 68.0], [5.6, 70.0], [5.7, 70.0], [5.8, 70.0], [5.9, 70.0], [6.0, 70.0], [6.1, 71.0], [6.2, 71.0], [6.3, 71.0], [6.4, 71.0], [6.5, 74.0], [6.6, 74.0], [6.7, 74.0], [6.8, 74.0], [6.9, 74.0], [7.0, 74.0], [7.1, 74.0], [7.2, 74.0], [7.3, 75.0], [7.4, 75.0], [7.5, 75.0], [7.6, 75.0], [7.7, 75.0], [7.8, 75.0], [7.9, 75.0], [8.0, 75.0], [8.1, 75.0], [8.2, 76.0], [8.3, 76.0], [8.4, 76.0], [8.5, 76.0], [8.6, 76.0], [8.7, 76.0], [8.8, 76.0], [8.9, 76.0], [9.0, 76.0], [9.1, 77.0], [9.2, 77.0], [9.3, 77.0], [9.4, 77.0], [9.5, 78.0], [9.6, 78.0], [9.7, 78.0], [9.8, 78.0], [9.9, 78.0], [10.0, 78.0], [10.1, 78.0], [10.2, 78.0], [10.3, 78.0], [10.4, 79.0], [10.5, 79.0], [10.6, 79.0], [10.7, 79.0], [10.8, 80.0], [10.9, 80.0], [11.0, 80.0], [11.1, 80.0], [11.2, 80.0], [11.3, 80.0], [11.4, 80.0], [11.5, 80.0], [11.6, 80.0], [11.7, 80.0], [11.8, 80.0], [11.9, 80.0], [12.0, 80.0], [12.1, 80.0], [12.2, 80.0], [12.3, 80.0], [12.4, 80.0], [12.5, 80.0], [12.6, 80.0], [12.7, 80.0], [12.8, 80.0], [12.9, 81.0], [13.0, 81.0], [13.1, 81.0], [13.2, 81.0], [13.3, 81.0], [13.4, 82.0], [13.5, 82.0], [13.6, 82.0], [13.7, 82.0], [13.8, 82.0], [13.9, 82.0], [14.0, 82.0], [14.1, 82.0], [14.2, 82.0], [14.3, 82.0], [14.4, 82.0], [14.5, 82.0], [14.6, 83.0], [14.7, 83.0], [14.8, 83.0], [14.9, 83.0], [15.0, 83.0], [15.1, 83.0], [15.2, 83.0], [15.3, 83.0], [15.4, 83.0], [15.5, 84.0], [15.6, 84.0], [15.7, 84.0], [15.8, 84.0], [15.9, 84.0], [16.0, 84.0], [16.1, 84.0], [16.2, 84.0], [16.3, 84.0], [16.4, 84.0], [16.5, 84.0], [16.6, 84.0], [16.7, 84.0], [16.8, 85.0], [16.9, 85.0], [17.0, 85.0], [17.1, 85.0], [17.2, 85.0], [17.3, 85.0], [17.4, 85.0], [17.5, 85.0], [17.6, 85.0], [17.7, 85.0], [17.8, 85.0], [17.9, 85.0], [18.0, 85.0], [18.1, 85.0], [18.2, 85.0], [18.3, 85.0], [18.4, 85.0], [18.5, 86.0], [18.6, 86.0], [18.7, 86.0], [18.8, 86.0], [18.9, 87.0], [19.0, 87.0], [19.1, 87.0], [19.2, 87.0], [19.3, 87.0], [19.4, 87.0], [19.5, 87.0], [19.6, 87.0], [19.7, 87.0], [19.8, 87.0], [19.9, 87.0], [20.0, 87.0], [20.1, 87.0], [20.2, 88.0], [20.3, 88.0], [20.4, 88.0], [20.5, 88.0], [20.6, 88.0], [20.7, 88.0], [20.8, 88.0], [20.9, 88.0], [21.0, 88.0], [21.1, 88.0], [21.2, 88.0], [21.3, 88.0], [21.4, 88.0], [21.5, 88.0], [21.6, 88.0], [21.7, 88.0], [21.8, 88.0], [21.9, 89.0], [22.0, 89.0], [22.1, 89.0], [22.2, 89.0], [22.3, 89.0], [22.4, 89.0], [22.5, 89.0], [22.6, 89.0], [22.7, 89.0], [22.8, 89.0], [22.9, 89.0], [23.0, 89.0], [23.1, 89.0], [23.2, 89.0], [23.3, 89.0], [23.4, 89.0], [23.5, 89.0], [23.6, 89.0], [23.7, 90.0], [23.8, 90.0], [23.9, 90.0], [24.0, 90.0], [24.1, 90.0], [24.2, 90.0], [24.3, 90.0], [24.4, 90.0], [24.5, 91.0], [24.6, 91.0], [24.7, 91.0], [24.8, 91.0], [24.9, 91.0], [25.0, 91.0], [25.1, 91.0], [25.2, 91.0], [25.3, 91.0], [25.4, 91.0], [25.5, 91.0], [25.6, 91.0], [25.7, 91.0], [25.8, 92.0], [25.9, 92.0], [26.0, 92.0], [26.1, 92.0], [26.2, 92.0], [26.3, 92.0], [26.4, 92.0], [26.5, 92.0], [26.6, 92.0], [26.7, 92.0], [26.8, 92.0], [26.9, 92.0], [27.0, 92.0], [27.1, 93.0], [27.2, 93.0], [27.3, 93.0], [27.4, 93.0], [27.5, 93.0], [27.6, 93.0], [27.7, 93.0], [27.8, 93.0], [27.9, 93.0], [28.0, 93.0], [28.1, 93.0], [28.2, 93.0], [28.3, 93.0], [28.4, 94.0], [28.5, 94.0], [28.6, 94.0], [28.7, 94.0], [28.8, 94.0], [28.9, 94.0], [29.0, 94.0], [29.1, 94.0], [29.2, 94.0], [29.3, 94.0], [29.4, 94.0], [29.5, 94.0], [29.6, 94.0], [29.7, 94.0], [29.8, 94.0], [29.9, 94.0], [30.0, 94.0], [30.1, 94.0], [30.2, 94.0], [30.3, 94.0], [30.4, 94.0], [30.5, 95.0], [30.6, 95.0], [30.7, 95.0], [30.8, 95.0], [30.9, 95.0], [31.0, 95.0], [31.1, 95.0], [31.2, 95.0], [31.3, 95.0], [31.4, 95.0], [31.5, 95.0], [31.6, 95.0], [31.7, 95.0], [31.8, 95.0], [31.9, 95.0], [32.0, 95.0], [32.1, 95.0], [32.2, 95.0], [32.3, 95.0], [32.4, 95.0], [32.5, 95.0], [32.6, 95.0], [32.7, 95.0], [32.8, 95.0], [32.9, 95.0], [33.0, 95.0], [33.1, 95.0], [33.2, 95.0], [33.3, 95.0], [33.4, 95.0], [33.5, 95.0], [33.6, 95.0], [33.7, 95.0], [33.8, 95.0], [33.9, 95.0], [34.0, 96.0], [34.1, 96.0], [34.2, 96.0], [34.3, 96.0], [34.4, 96.0], [34.5, 96.0], [34.6, 96.0], [34.7, 96.0], [34.8, 96.0], [34.9, 96.0], [35.0, 96.0], [35.1, 96.0], [35.2, 96.0], [35.3, 96.0], [35.4, 96.0], [35.5, 96.0], [35.6, 96.0], [35.7, 96.0], [35.8, 96.0], [35.9, 96.0], [36.0, 96.0], [36.1, 97.0], [36.2, 97.0], [36.3, 97.0], [36.4, 97.0], [36.5, 97.0], [36.6, 97.0], [36.7, 97.0], [36.8, 97.0], [36.9, 97.0], [37.0, 97.0], [37.1, 97.0], [37.2, 97.0], [37.3, 97.0], [37.4, 98.0], [37.5, 98.0], [37.6, 98.0], [37.7, 98.0], [37.8, 98.0], [37.9, 98.0], [38.0, 98.0], [38.1, 98.0], [38.2, 98.0], [38.3, 98.0], [38.4, 98.0], [38.5, 98.0], [38.6, 98.0], [38.7, 98.0], [38.8, 98.0], [38.9, 98.0], [39.0, 98.0], [39.1, 98.0], [39.2, 98.0], [39.3, 98.0], [39.4, 98.0], [39.5, 99.0], [39.6, 99.0], [39.7, 99.0], [39.8, 99.0], [39.9, 99.0], [40.0, 99.0], [40.1, 99.0], [40.2, 99.0], [40.3, 99.0], [40.4, 99.0], [40.5, 99.0], [40.6, 99.0], [40.7, 99.0], [40.8, 100.0], [40.9, 100.0], [41.0, 100.0], [41.1, 100.0], [41.2, 100.0], [41.3, 100.0], [41.4, 100.0], [41.5, 100.0], [41.6, 100.0], [41.7, 100.0], [41.8, 100.0], [41.9, 100.0], [42.0, 100.0], [42.1, 100.0], [42.2, 100.0], [42.3, 100.0], [42.4, 100.0], [42.5, 101.0], [42.6, 101.0], [42.7, 101.0], [42.8, 101.0], [42.9, 101.0], [43.0, 101.0], [43.1, 101.0], [43.2, 101.0], [43.3, 101.0], [43.4, 101.0], [43.5, 101.0], [43.6, 101.0], [43.7, 101.0], [43.8, 101.0], [43.9, 101.0], [44.0, 101.0], [44.1, 101.0], [44.2, 101.0], [44.3, 101.0], [44.4, 101.0], [44.5, 101.0], [44.6, 101.0], [44.7, 102.0], [44.8, 102.0], [44.9, 102.0], [45.0, 102.0], [45.1, 102.0], [45.2, 102.0], [45.3, 102.0], [45.4, 102.0], [45.5, 102.0], [45.6, 102.0], [45.7, 102.0], [45.8, 102.0], [45.9, 102.0], [46.0, 103.0], [46.1, 103.0], [46.2, 103.0], [46.3, 103.0], [46.4, 103.0], [46.5, 103.0], [46.6, 103.0], [46.7, 103.0], [46.8, 103.0], [46.9, 103.0], [47.0, 103.0], [47.1, 103.0], [47.2, 103.0], [47.3, 103.0], [47.4, 103.0], [47.5, 103.0], [47.6, 103.0], [47.7, 104.0], [47.8, 104.0], [47.9, 104.0], [48.0, 104.0], [48.1, 104.0], [48.2, 104.0], [48.3, 104.0], [48.4, 104.0], [48.5, 104.0], [48.6, 104.0], [48.7, 104.0], [48.8, 104.0], [48.9, 104.0], [49.0, 104.0], [49.1, 104.0], [49.2, 104.0], [49.3, 104.0], [49.4, 104.0], [49.5, 104.0], [49.6, 104.0], [49.7, 104.0], [49.8, 104.0], [49.9, 104.0], [50.0, 104.0], [50.1, 104.0], [50.2, 104.0], [50.3, 104.0], [50.4, 104.0], [50.5, 104.0], [50.6, 104.0], [50.7, 105.0], [50.8, 105.0], [50.9, 105.0], [51.0, 105.0], [51.1, 105.0], [51.2, 105.0], [51.3, 105.0], [51.4, 105.0], [51.5, 105.0], [51.6, 105.0], [51.7, 105.0], [51.8, 105.0], [51.9, 105.0], [52.0, 105.0], [52.1, 105.0], [52.2, 105.0], [52.3, 105.0], [52.4, 105.0], [52.5, 105.0], [52.6, 105.0], [52.7, 105.0], [52.8, 106.0], [52.9, 106.0], [53.0, 106.0], [53.1, 106.0], [53.2, 106.0], [53.3, 106.0], [53.4, 106.0], [53.5, 106.0], [53.6, 106.0], [53.7, 107.0], [53.8, 107.0], [53.9, 107.0], [54.0, 107.0], [54.1, 107.0], [54.2, 107.0], [54.3, 107.0], [54.4, 107.0], [54.5, 107.0], [54.6, 109.0], [54.7, 109.0], [54.8, 109.0], [54.9, 109.0], [55.0, 109.0], [55.1, 109.0], [55.2, 109.0], [55.3, 109.0], [55.4, 109.0], [55.5, 109.0], [55.6, 109.0], [55.7, 109.0], [55.8, 110.0], [55.9, 110.0], [56.0, 110.0], [56.1, 110.0], [56.2, 110.0], [56.3, 110.0], [56.4, 110.0], [56.5, 110.0], [56.6, 110.0], [56.7, 111.0], [56.8, 111.0], [56.9, 111.0], [57.0, 111.0], [57.1, 111.0], [57.2, 111.0], [57.3, 111.0], [57.4, 111.0], [57.5, 111.0], [57.6, 111.0], [57.7, 111.0], [57.8, 111.0], [57.9, 111.0], [58.0, 112.0], [58.1, 112.0], [58.2, 112.0], [58.3, 112.0], [58.4, 113.0], [58.5, 113.0], [58.6, 113.0], [58.7, 113.0], [58.8, 113.0], [58.9, 113.0], [59.0, 113.0], [59.1, 113.0], [59.2, 113.0], [59.3, 114.0], [59.4, 114.0], [59.5, 114.0], [59.6, 114.0], [59.7, 114.0], [59.8, 114.0], [59.9, 114.0], [60.0, 114.0], [60.1, 114.0], [60.2, 114.0], [60.3, 114.0], [60.4, 114.0], [60.5, 114.0], [60.6, 114.0], [60.7, 114.0], [60.8, 114.0], [60.9, 114.0], [61.0, 115.0], [61.1, 115.0], [61.2, 115.0], [61.3, 115.0], [61.4, 115.0], [61.5, 115.0], [61.6, 115.0], [61.7, 115.0], [61.8, 115.0], [61.9, 116.0], [62.0, 116.0], [62.1, 116.0], [62.2, 116.0], [62.3, 116.0], [62.4, 116.0], [62.5, 116.0], [62.6, 116.0], [62.7, 117.0], [62.8, 117.0], [62.9, 117.0], [63.0, 117.0], [63.1, 117.0], [63.2, 117.0], [63.3, 117.0], [63.4, 117.0], [63.5, 117.0], [63.6, 117.0], [63.7, 117.0], [63.8, 117.0], [63.9, 117.0], [64.0, 117.0], [64.1, 117.0], [64.2, 117.0], [64.3, 117.0], [64.4, 118.0], [64.5, 118.0], [64.6, 118.0], [64.7, 118.0], [64.8, 118.0], [64.9, 118.0], [65.0, 118.0], [65.1, 118.0], [65.2, 118.0], [65.3, 118.0], [65.4, 118.0], [65.5, 118.0], [65.6, 118.0], [65.7, 118.0], [65.8, 118.0], [65.9, 118.0], [66.0, 118.0], [66.1, 118.0], [66.2, 118.0], [66.3, 118.0], [66.4, 118.0], [66.5, 118.0], [66.6, 118.0], [66.7, 118.0], [66.8, 118.0], [66.9, 118.0], [67.0, 118.0], [67.1, 118.0], [67.2, 118.0], [67.3, 118.0], [67.4, 119.0], [67.5, 119.0], [67.6, 119.0], [67.7, 119.0], [67.8, 119.0], [67.9, 119.0], [68.0, 119.0], [68.1, 119.0], [68.2, 119.0], [68.3, 119.0], [68.4, 119.0], [68.5, 119.0], [68.6, 119.0], [68.7, 119.0], [68.8, 119.0], [68.9, 119.0], [69.0, 119.0], [69.1, 119.0], [69.2, 119.0], [69.3, 119.0], [69.4, 119.0], [69.5, 119.0], [69.6, 120.0], [69.7, 120.0], [69.8, 120.0], [69.9, 120.0], [70.0, 120.0], [70.1, 120.0], [70.2, 120.0], [70.3, 120.0], [70.4, 120.0], [70.5, 120.0], [70.6, 120.0], [70.7, 120.0], [70.8, 120.0], [70.9, 120.0], [71.0, 120.0], [71.1, 120.0], [71.2, 120.0], [71.3, 121.0], [71.4, 121.0], [71.5, 121.0], [71.6, 121.0], [71.7, 121.0], [71.8, 121.0], [71.9, 121.0], [72.0, 121.0], [72.1, 121.0], [72.2, 122.0], [72.3, 122.0], [72.4, 122.0], [72.5, 122.0], [72.6, 123.0], [72.7, 123.0], [72.8, 123.0], [72.9, 123.0], [73.0, 123.0], [73.1, 123.0], [73.2, 123.0], [73.3, 123.0], [73.4, 123.0], [73.5, 123.0], [73.6, 123.0], [73.7, 123.0], [73.8, 123.0], [73.9, 124.0], [74.0, 124.0], [74.1, 124.0], [74.2, 124.0], [74.3, 124.0], [74.4, 124.0], [74.5, 124.0], [74.6, 124.0], [74.7, 125.0], [74.8, 125.0], [74.9, 125.0], [75.0, 125.0], [75.1, 125.0], [75.2, 125.0], [75.3, 125.0], [75.4, 125.0], [75.5, 125.0], [75.6, 126.0], [75.7, 126.0], [75.8, 126.0], [75.9, 126.0], [76.0, 126.0], [76.1, 126.0], [76.2, 126.0], [76.3, 126.0], [76.4, 127.0], [76.5, 127.0], [76.6, 127.0], [76.7, 127.0], [76.8, 127.0], [76.9, 127.0], [77.0, 127.0], [77.1, 127.0], [77.2, 127.0], [77.3, 127.0], [77.4, 127.0], [77.5, 127.0], [77.6, 127.0], [77.7, 128.0], [77.8, 128.0], [77.9, 128.0], [78.0, 128.0], [78.1, 128.0], [78.2, 128.0], [78.3, 128.0], [78.4, 128.0], [78.5, 128.0], [78.6, 129.0], [78.7, 129.0], [78.8, 129.0], [78.9, 129.0], [79.0, 129.0], [79.1, 129.0], [79.2, 129.0], [79.3, 129.0], [79.4, 130.0], [79.5, 130.0], [79.6, 130.0], [79.7, 130.0], [79.8, 130.0], [79.9, 130.0], [80.0, 130.0], [80.1, 130.0], [80.2, 130.0], [80.3, 131.0], [80.4, 131.0], [80.5, 131.0], [80.6, 131.0], [80.7, 131.0], [80.8, 131.0], [80.9, 131.0], [81.0, 131.0], [81.1, 131.0], [81.2, 132.0], [81.3, 132.0], [81.4, 132.0], [81.5, 132.0], [81.6, 132.0], [81.7, 132.0], [81.8, 132.0], [81.9, 132.0], [82.0, 134.0], [82.1, 134.0], [82.2, 134.0], [82.3, 134.0], [82.4, 134.0], [82.5, 134.0], [82.6, 134.0], [82.7, 134.0], [82.8, 134.0], [82.9, 136.0], [83.0, 136.0], [83.1, 136.0], [83.2, 136.0], [83.3, 137.0], [83.4, 137.0], [83.5, 137.0], [83.6, 137.0], [83.7, 137.0], [83.8, 137.0], [83.9, 137.0], [84.0, 137.0], [84.1, 137.0], [84.2, 138.0], [84.3, 138.0], [84.4, 138.0], [84.5, 138.0], [84.6, 138.0], [84.7, 138.0], [84.8, 138.0], [84.9, 138.0], [85.0, 139.0], [85.1, 139.0], [85.2, 139.0], [85.3, 139.0], [85.4, 139.0], [85.5, 139.0], [85.6, 139.0], [85.7, 139.0], [85.8, 139.0], [85.9, 139.0], [86.0, 139.0], [86.1, 139.0], [86.2, 139.0], [86.3, 145.0], [86.4, 145.0], [86.5, 145.0], [86.6, 145.0], [86.7, 146.0], [86.8, 146.0], [86.9, 146.0], [87.0, 146.0], [87.1, 146.0], [87.2, 150.0], [87.3, 150.0], [87.4, 150.0], [87.5, 150.0], [87.6, 151.0], [87.7, 151.0], [87.8, 151.0], [87.9, 151.0], [88.0, 151.0], [88.1, 151.0], [88.2, 151.0], [88.3, 151.0], [88.4, 151.0], [88.5, 153.0], [88.6, 153.0], [88.7, 153.0], [88.8, 153.0], [88.9, 153.0], [89.0, 153.0], [89.1, 153.0], [89.2, 153.0], [89.3, 159.0], [89.4, 159.0], [89.5, 159.0], [89.6, 159.0], [89.7, 159.0], [89.8, 159.0], [89.9, 159.0], [90.0, 159.0], [90.1, 159.0], [90.2, 163.0], [90.3, 163.0], [90.4, 163.0], [90.5, 163.0], [90.6, 164.0], [90.7, 164.0], [90.8, 164.0], [90.9, 164.0], [91.0, 165.0], [91.1, 165.0], [91.2, 165.0], [91.3, 165.0], [91.4, 165.0], [91.5, 165.0], [91.6, 165.0], [91.7, 165.0], [91.8, 165.0], [91.9, 165.0], [92.0, 165.0], [92.1, 165.0], [92.2, 165.0], [92.3, 165.0], [92.4, 165.0], [92.5, 165.0], [92.6, 165.0], [92.7, 165.0], [92.8, 166.0], [92.9, 166.0], [93.0, 166.0], [93.1, 166.0], [93.2, 166.0], [93.3, 166.0], [93.4, 166.0], [93.5, 166.0], [93.6, 173.0], [93.7, 173.0], [93.8, 173.0], [93.9, 173.0], [94.0, 173.0], [94.1, 173.0], [94.2, 173.0], [94.3, 173.0], [94.4, 173.0], [94.5, 186.0], [94.6, 186.0], [94.7, 186.0], [94.8, 186.0], [94.9, 230.0], [95.0, 230.0], [95.1, 230.0], [95.2, 230.0], [95.3, 275.0], [95.4, 275.0], [95.5, 275.0], [95.6, 275.0], [95.7, 275.0], [95.8, 294.0], [95.9, 294.0], [96.0, 294.0], [96.1, 294.0], [96.2, 313.0], [96.3, 313.0], [96.4, 313.0], [96.5, 313.0], [96.6, 321.0], [96.7, 321.0], [96.8, 321.0], [96.9, 321.0], [97.0, 324.0], [97.1, 324.0], [97.2, 324.0], [97.3, 324.0], [97.4, 324.0], [97.5, 329.0], [97.6, 329.0], [97.7, 329.0], [97.8, 329.0], [97.9, 340.0], [98.0, 340.0], [98.1, 340.0], [98.2, 340.0], [98.3, 341.0], [98.4, 341.0], [98.5, 341.0], [98.6, 341.0], [98.7, 341.0], [98.8, 343.0], [98.9, 343.0], [99.0, 343.0], [99.1, 343.0], [99.2, 350.0], [99.3, 350.0], [99.4, 350.0], [99.5, 350.0], [99.6, 358.0], [99.7, 358.0], [99.8, 358.0], [99.9, 358.0]], "isOverall": false, "label": "Modify User Infomation", "isController": true}, {"data": [[0.0, 173.0], [0.1, 173.0], [0.2, 173.0], [0.3, 173.0], [0.4, 173.0], [0.5, 238.0], [0.6, 238.0], [0.7, 238.0], [0.8, 238.0], [0.9, 258.0], [1.0, 258.0], [1.1, 258.0], [1.2, 258.0], [1.3, 260.0], [1.4, 260.0], [1.5, 260.0], [1.6, 260.0], [1.7, 289.0], [1.8, 289.0], [1.9, 289.0], [2.0, 289.0], [2.1, 303.0], [2.2, 303.0], [2.3, 303.0], [2.4, 303.0], [2.5, 354.0], [2.6, 354.0], [2.7, 354.0], [2.8, 354.0], [2.9, 355.0], [3.0, 355.0], [3.1, 355.0], [3.2, 355.0], [3.3, 366.0], [3.4, 366.0], [3.5, 366.0], [3.6, 366.0], [3.7, 366.0], [3.8, 375.0], [3.9, 375.0], [4.0, 375.0], [4.1, 375.0], [4.2, 378.0], [4.3, 378.0], [4.4, 378.0], [4.5, 378.0], [4.6, 388.0], [4.7, 388.0], [4.8, 388.0], [4.9, 388.0], [5.0, 396.0], [5.1, 396.0], [5.2, 396.0], [5.3, 396.0], [5.4, 398.0], [5.5, 398.0], [5.6, 398.0], [5.7, 398.0], [5.8, 425.0], [5.9, 425.0], [6.0, 425.0], [6.1, 425.0], [6.2, 428.0], [6.3, 428.0], [6.4, 428.0], [6.5, 428.0], [6.6, 436.0], [6.7, 436.0], [6.8, 436.0], [6.9, 436.0], [7.0, 443.0], [7.1, 443.0], [7.2, 443.0], [7.3, 443.0], [7.4, 443.0], [7.5, 443.0], [7.6, 443.0], [7.7, 443.0], [7.8, 443.0], [7.9, 451.0], [8.0, 451.0], [8.1, 451.0], [8.2, 451.0], [8.3, 477.0], [8.4, 477.0], [8.5, 477.0], [8.6, 477.0], [8.7, 536.0], [8.8, 536.0], [8.9, 536.0], [9.0, 536.0], [9.1, 543.0], [9.2, 543.0], [9.3, 543.0], [9.4, 543.0], [9.5, 597.0], [9.6, 597.0], [9.7, 597.0], [9.8, 597.0], [9.9, 617.0], [10.0, 617.0], [10.1, 617.0], [10.2, 617.0], [10.3, 620.0], [10.4, 620.0], [10.5, 620.0], [10.6, 620.0], [10.7, 625.0], [10.8, 625.0], [10.9, 625.0], [11.0, 625.0], [11.1, 625.0], [11.2, 626.0], [11.3, 626.0], [11.4, 626.0], [11.5, 626.0], [11.6, 628.0], [11.7, 628.0], [11.8, 628.0], [11.9, 628.0], [12.0, 629.0], [12.1, 629.0], [12.2, 629.0], [12.3, 629.0], [12.4, 639.0], [12.5, 639.0], [12.6, 639.0], [12.7, 639.0], [12.8, 647.0], [12.9, 647.0], [13.0, 647.0], [13.1, 647.0], [13.2, 657.0], [13.3, 657.0], [13.4, 657.0], [13.5, 657.0], [13.6, 663.0], [13.7, 663.0], [13.8, 663.0], [13.9, 663.0], [14.0, 669.0], [14.1, 669.0], [14.2, 669.0], [14.3, 669.0], [14.4, 669.0], [14.5, 672.0], [14.6, 672.0], [14.7, 672.0], [14.8, 672.0], [14.9, 672.0], [15.0, 672.0], [15.1, 672.0], [15.2, 672.0], [15.3, 678.0], [15.4, 678.0], [15.5, 678.0], [15.6, 678.0], [15.7, 687.0], [15.8, 687.0], [15.9, 687.0], [16.0, 687.0], [16.1, 701.0], [16.2, 701.0], [16.3, 701.0], [16.4, 701.0], [16.5, 708.0], [16.6, 708.0], [16.7, 708.0], [16.8, 708.0], [16.9, 716.0], [17.0, 716.0], [17.1, 716.0], [17.2, 716.0], [17.3, 725.0], [17.4, 725.0], [17.5, 725.0], [17.6, 725.0], [17.7, 759.0], [17.8, 759.0], [17.9, 759.0], [18.0, 759.0], [18.1, 759.0], [18.2, 759.0], [18.3, 759.0], [18.4, 759.0], [18.5, 759.0], [18.6, 761.0], [18.7, 761.0], [18.8, 761.0], [18.9, 761.0], [19.0, 761.0], [19.1, 761.0], [19.2, 761.0], [19.3, 761.0], [19.4, 764.0], [19.5, 764.0], [19.6, 764.0], [19.7, 764.0], [19.8, 765.0], [19.9, 765.0], [20.0, 765.0], [20.1, 765.0], [20.2, 776.0], [20.3, 776.0], [20.4, 776.0], [20.5, 776.0], [20.6, 796.0], [20.7, 796.0], [20.8, 796.0], [20.9, 796.0], [21.0, 819.0], [21.1, 819.0], [21.2, 819.0], [21.3, 819.0], [21.4, 819.0], [21.5, 819.0], [21.6, 819.0], [21.7, 819.0], [21.8, 819.0], [21.9, 828.0], [22.0, 828.0], [22.1, 828.0], [22.2, 828.0], [22.3, 831.0], [22.4, 831.0], [22.5, 831.0], [22.6, 831.0], [22.7, 831.0], [22.8, 831.0], [22.9, 831.0], [23.0, 831.0], [23.1, 832.0], [23.2, 832.0], [23.3, 832.0], [23.4, 832.0], [23.5, 861.0], [23.6, 861.0], [23.7, 861.0], [23.8, 861.0], [23.9, 862.0], [24.0, 862.0], [24.1, 862.0], [24.2, 862.0], [24.3, 862.0], [24.4, 862.0], [24.5, 862.0], [24.6, 862.0], [24.7, 868.0], [24.8, 868.0], [24.9, 868.0], [25.0, 868.0], [25.1, 868.0], [25.2, 870.0], [25.3, 870.0], [25.4, 870.0], [25.5, 870.0], [25.6, 885.0], [25.7, 885.0], [25.8, 885.0], [25.9, 885.0], [26.0, 892.0], [26.1, 892.0], [26.2, 892.0], [26.3, 892.0], [26.4, 893.0], [26.5, 893.0], [26.6, 893.0], [26.7, 893.0], [26.8, 907.0], [26.9, 907.0], [27.0, 907.0], [27.1, 907.0], [27.2, 915.0], [27.3, 915.0], [27.4, 915.0], [27.5, 915.0], [27.6, 917.0], [27.7, 917.0], [27.8, 917.0], [27.9, 917.0], [28.0, 918.0], [28.1, 918.0], [28.2, 918.0], [28.3, 918.0], [28.4, 922.0], [28.5, 922.0], [28.6, 922.0], [28.7, 922.0], [28.8, 922.0], [28.9, 925.0], [29.0, 925.0], [29.1, 925.0], [29.2, 925.0], [29.3, 925.0], [29.4, 925.0], [29.5, 925.0], [29.6, 925.0], [29.7, 926.0], [29.8, 926.0], [29.9, 926.0], [30.0, 926.0], [30.1, 932.0], [30.2, 932.0], [30.3, 932.0], [30.4, 932.0], [30.5, 932.0], [30.6, 932.0], [30.7, 932.0], [30.8, 932.0], [30.9, 932.0], [31.0, 932.0], [31.1, 932.0], [31.2, 932.0], [31.3, 934.0], [31.4, 934.0], [31.5, 934.0], [31.6, 934.0], [31.7, 935.0], [31.8, 935.0], [31.9, 935.0], [32.0, 935.0], [32.1, 935.0], [32.2, 935.0], [32.3, 935.0], [32.4, 935.0], [32.5, 935.0], [32.6, 936.0], [32.7, 936.0], [32.8, 936.0], [32.9, 936.0], [33.0, 938.0], [33.1, 938.0], [33.2, 938.0], [33.3, 938.0], [33.4, 938.0], [33.5, 938.0], [33.6, 938.0], [33.7, 938.0], [33.8, 938.0], [33.9, 938.0], [34.0, 938.0], [34.1, 938.0], [34.2, 940.0], [34.3, 940.0], [34.4, 940.0], [34.5, 940.0], [34.6, 943.0], [34.7, 943.0], [34.8, 943.0], [34.9, 943.0], [35.0, 943.0], [35.1, 943.0], [35.2, 943.0], [35.3, 943.0], [35.4, 944.0], [35.5, 944.0], [35.6, 944.0], [35.7, 944.0], [35.8, 944.0], [35.9, 946.0], [36.0, 946.0], [36.1, 946.0], [36.2, 946.0], [36.3, 948.0], [36.4, 948.0], [36.5, 948.0], [36.6, 948.0], [36.7, 948.0], [36.8, 948.0], [36.9, 948.0], [37.0, 948.0], [37.1, 952.0], [37.2, 952.0], [37.3, 952.0], [37.4, 952.0], [37.5, 953.0], [37.6, 953.0], [37.7, 953.0], [37.8, 953.0], [37.9, 954.0], [38.0, 954.0], [38.1, 954.0], [38.2, 954.0], [38.3, 955.0], [38.4, 955.0], [38.5, 955.0], [38.6, 955.0], [38.7, 956.0], [38.8, 956.0], [38.9, 956.0], [39.0, 956.0], [39.1, 959.0], [39.2, 959.0], [39.3, 959.0], [39.4, 959.0], [39.5, 959.0], [39.6, 959.0], [39.7, 959.0], [39.8, 959.0], [39.9, 959.0], [40.0, 960.0], [40.1, 960.0], [40.2, 960.0], [40.3, 960.0], [40.4, 961.0], [40.5, 961.0], [40.6, 961.0], [40.7, 961.0], [40.8, 961.0], [40.9, 961.0], [41.0, 961.0], [41.1, 961.0], [41.2, 963.0], [41.3, 963.0], [41.4, 963.0], [41.5, 963.0], [41.6, 963.0], [41.7, 963.0], [41.8, 963.0], [41.9, 963.0], [42.0, 964.0], [42.1, 964.0], [42.2, 964.0], [42.3, 964.0], [42.4, 964.0], [42.5, 964.0], [42.6, 964.0], [42.7, 964.0], [42.8, 965.0], [42.9, 965.0], [43.0, 965.0], [43.1, 965.0], [43.2, 965.0], [43.3, 965.0], [43.4, 965.0], [43.5, 965.0], [43.6, 965.0], [43.7, 966.0], [43.8, 966.0], [43.9, 966.0], [44.0, 966.0], [44.1, 966.0], [44.2, 966.0], [44.3, 966.0], [44.4, 966.0], [44.5, 967.0], [44.6, 967.0], [44.7, 967.0], [44.8, 967.0], [44.9, 968.0], [45.0, 968.0], [45.1, 968.0], [45.2, 968.0], [45.3, 969.0], [45.4, 969.0], [45.5, 969.0], [45.6, 969.0], [45.7, 969.0], [45.8, 969.0], [45.9, 969.0], [46.0, 969.0], [46.1, 970.0], [46.2, 970.0], [46.3, 970.0], [46.4, 970.0], [46.5, 970.0], [46.6, 970.0], [46.7, 970.0], [46.8, 970.0], [46.9, 970.0], [47.0, 971.0], [47.1, 971.0], [47.2, 971.0], [47.3, 971.0], [47.4, 972.0], [47.5, 972.0], [47.6, 972.0], [47.7, 972.0], [47.8, 972.0], [47.9, 972.0], [48.0, 972.0], [48.1, 972.0], [48.2, 972.0], [48.3, 972.0], [48.4, 972.0], [48.5, 972.0], [48.6, 972.0], [48.7, 972.0], [48.8, 972.0], [48.9, 972.0], [49.0, 973.0], [49.1, 973.0], [49.2, 973.0], [49.3, 973.0], [49.4, 974.0], [49.5, 974.0], [49.6, 974.0], [49.7, 974.0], [49.8, 975.0], [49.9, 975.0], [50.0, 975.0], [50.1, 975.0], [50.2, 975.0], [50.3, 975.0], [50.4, 975.0], [50.5, 975.0], [50.6, 975.0], [50.7, 975.0], [50.8, 975.0], [50.9, 975.0], [51.0, 975.0], [51.1, 976.0], [51.2, 976.0], [51.3, 976.0], [51.4, 976.0], [51.5, 977.0], [51.6, 977.0], [51.7, 977.0], [51.8, 977.0], [51.9, 978.0], [52.0, 978.0], [52.1, 978.0], [52.2, 978.0], [52.3, 978.0], [52.4, 978.0], [52.5, 978.0], [52.6, 978.0], [52.7, 980.0], [52.8, 980.0], [52.9, 980.0], [53.0, 980.0], [53.1, 980.0], [53.2, 980.0], [53.3, 980.0], [53.4, 980.0], [53.5, 981.0], [53.6, 981.0], [53.7, 981.0], [53.8, 981.0], [53.9, 981.0], [54.0, 982.0], [54.1, 982.0], [54.2, 982.0], [54.3, 982.0], [54.4, 982.0], [54.5, 982.0], [54.6, 982.0], [54.7, 982.0], [54.8, 982.0], [54.9, 982.0], [55.0, 982.0], [55.1, 982.0], [55.2, 982.0], [55.3, 982.0], [55.4, 982.0], [55.5, 982.0], [55.6, 982.0], [55.7, 982.0], [55.8, 982.0], [55.9, 982.0], [56.0, 982.0], [56.1, 982.0], [56.2, 983.0], [56.3, 983.0], [56.4, 983.0], [56.5, 983.0], [56.6, 983.0], [56.7, 983.0], [56.8, 983.0], [56.9, 983.0], [57.0, 983.0], [57.1, 983.0], [57.2, 983.0], [57.3, 983.0], [57.4, 983.0], [57.5, 983.0], [57.6, 983.0], [57.7, 984.0], [57.8, 984.0], [57.9, 984.0], [58.0, 984.0], [58.1, 985.0], [58.2, 985.0], [58.3, 985.0], [58.4, 985.0], [58.5, 985.0], [58.6, 985.0], [58.7, 985.0], [58.8, 985.0], [58.9, 985.0], [59.0, 985.0], [59.1, 985.0], [59.2, 985.0], [59.3, 986.0], [59.4, 986.0], [59.5, 986.0], [59.6, 986.0], [59.7, 986.0], [59.8, 986.0], [59.9, 986.0], [60.0, 986.0], [60.1, 986.0], [60.2, 986.0], [60.3, 986.0], [60.4, 986.0], [60.5, 987.0], [60.6, 987.0], [60.7, 987.0], [60.8, 987.0], [60.9, 987.0], [61.0, 987.0], [61.1, 987.0], [61.2, 987.0], [61.3, 987.0], [61.4, 988.0], [61.5, 988.0], [61.6, 988.0], [61.7, 988.0], [61.8, 988.0], [61.9, 988.0], [62.0, 988.0], [62.1, 988.0], [62.2, 988.0], [62.3, 988.0], [62.4, 988.0], [62.5, 988.0], [62.6, 989.0], [62.7, 989.0], [62.8, 989.0], [62.9, 989.0], [63.0, 989.0], [63.1, 989.0], [63.2, 989.0], [63.3, 989.0], [63.4, 990.0], [63.5, 990.0], [63.6, 990.0], [63.7, 990.0], [63.8, 990.0], [63.9, 990.0], [64.0, 990.0], [64.1, 990.0], [64.2, 991.0], [64.3, 991.0], [64.4, 991.0], [64.5, 991.0], [64.6, 991.0], [64.7, 992.0], [64.8, 992.0], [64.9, 992.0], [65.0, 992.0], [65.1, 992.0], [65.2, 992.0], [65.3, 992.0], [65.4, 992.0], [65.5, 992.0], [65.6, 992.0], [65.7, 992.0], [65.8, 992.0], [65.9, 993.0], [66.0, 993.0], [66.1, 993.0], [66.2, 993.0], [66.3, 993.0], [66.4, 993.0], [66.5, 993.0], [66.6, 993.0], [66.7, 994.0], [66.8, 994.0], [66.9, 994.0], [67.0, 994.0], [67.1, 994.0], [67.2, 994.0], [67.3, 994.0], [67.4, 994.0], [67.5, 995.0], [67.6, 995.0], [67.7, 995.0], [67.8, 995.0], [67.9, 995.0], [68.0, 995.0], [68.1, 995.0], [68.2, 995.0], [68.3, 995.0], [68.4, 995.0], [68.5, 995.0], [68.6, 995.0], [68.7, 995.0], [68.8, 995.0], [68.9, 995.0], [69.0, 995.0], [69.1, 995.0], [69.2, 995.0], [69.3, 995.0], [69.4, 995.0], [69.5, 995.0], [69.6, 996.0], [69.7, 996.0], [69.8, 996.0], [69.9, 996.0], [70.0, 996.0], [70.1, 996.0], [70.2, 996.0], [70.3, 996.0], [70.4, 996.0], [70.5, 996.0], [70.6, 996.0], [70.7, 996.0], [70.8, 996.0], [70.9, 996.0], [71.0, 996.0], [71.1, 996.0], [71.2, 997.0], [71.3, 997.0], [71.4, 997.0], [71.5, 997.0], [71.6, 997.0], [71.7, 997.0], [71.8, 997.0], [71.9, 997.0], [72.0, 997.0], [72.1, 997.0], [72.2, 997.0], [72.3, 997.0], [72.4, 997.0], [72.5, 998.0], [72.6, 998.0], [72.7, 998.0], [72.8, 998.0], [72.9, 999.0], [73.0, 999.0], [73.1, 999.0], [73.2, 999.0], [73.3, 1000.0], [73.4, 1000.0], [73.5, 1000.0], [73.6, 1000.0], [73.7, 1000.0], [73.8, 1000.0], [73.9, 1000.0], [74.0, 1000.0], [74.1, 1003.0], [74.2, 1003.0], [74.3, 1003.0], [74.4, 1003.0], [74.5, 1003.0], [74.6, 1003.0], [74.7, 1003.0], [74.8, 1003.0], [74.9, 1003.0], [75.0, 1003.0], [75.1, 1003.0], [75.2, 1003.0], [75.3, 1003.0], [75.4, 1003.0], [75.5, 1003.0], [75.6, 1003.0], [75.7, 1003.0], [75.8, 1003.0], [75.9, 1003.0], [76.0, 1003.0], [76.1, 1003.0], [76.2, 1003.0], [76.3, 1003.0], [76.4, 1003.0], [76.5, 1003.0], [76.6, 1004.0], [76.7, 1004.0], [76.8, 1004.0], [76.9, 1004.0], [77.0, 1005.0], [77.1, 1005.0], [77.2, 1005.0], [77.3, 1005.0], [77.4, 1005.0], [77.5, 1005.0], [77.6, 1005.0], [77.7, 1005.0], [77.8, 1005.0], [77.9, 1005.0], [78.0, 1005.0], [78.1, 1005.0], [78.2, 1005.0], [78.3, 1005.0], [78.4, 1005.0], [78.5, 1005.0], [78.6, 1005.0], [78.7, 1006.0], [78.8, 1006.0], [78.9, 1006.0], [79.0, 1006.0], [79.1, 1006.0], [79.2, 1006.0], [79.3, 1006.0], [79.4, 1006.0], [79.5, 1008.0], [79.6, 1008.0], [79.7, 1008.0], [79.8, 1008.0], [79.9, 1010.0], [80.0, 1010.0], [80.1, 1010.0], [80.2, 1010.0], [80.3, 1011.0], [80.4, 1011.0], [80.5, 1011.0], [80.6, 1011.0], [80.7, 1012.0], [80.8, 1012.0], [80.9, 1012.0], [81.0, 1012.0], [81.1, 1013.0], [81.2, 1013.0], [81.3, 1013.0], [81.4, 1013.0], [81.5, 1013.0], [81.6, 1013.0], [81.7, 1013.0], [81.8, 1013.0], [81.9, 1013.0], [82.0, 1013.0], [82.1, 1013.0], [82.2, 1013.0], [82.3, 1013.0], [82.4, 1015.0], [82.5, 1015.0], [82.6, 1015.0], [82.7, 1015.0], [82.8, 1017.0], [82.9, 1017.0], [83.0, 1017.0], [83.1, 1017.0], [83.2, 1018.0], [83.3, 1018.0], [83.4, 1018.0], [83.5, 1018.0], [83.6, 1021.0], [83.7, 1021.0], [83.8, 1021.0], [83.9, 1021.0], [84.0, 1021.0], [84.1, 1021.0], [84.2, 1021.0], [84.3, 1021.0], [84.4, 1022.0], [84.5, 1022.0], [84.6, 1022.0], [84.7, 1022.0], [84.8, 1025.0], [84.9, 1025.0], [85.0, 1025.0], [85.1, 1025.0], [85.2, 1025.0], [85.3, 1025.0], [85.4, 1025.0], [85.5, 1025.0], [85.6, 1026.0], [85.7, 1026.0], [85.8, 1026.0], [85.9, 1026.0], [86.0, 1026.0], [86.1, 1030.0], [86.2, 1030.0], [86.3, 1030.0], [86.4, 1030.0], [86.5, 1036.0], [86.6, 1036.0], [86.7, 1036.0], [86.8, 1036.0], [86.9, 1037.0], [87.0, 1037.0], [87.1, 1037.0], [87.2, 1037.0], [87.3, 1039.0], [87.4, 1039.0], [87.5, 1039.0], [87.6, 1039.0], [87.7, 1046.0], [87.8, 1046.0], [87.9, 1046.0], [88.0, 1046.0], [88.1, 1049.0], [88.2, 1049.0], [88.3, 1049.0], [88.4, 1049.0], [88.5, 1049.0], [88.6, 1049.0], [88.7, 1049.0], [88.8, 1049.0], [88.9, 1050.0], [89.0, 1050.0], [89.1, 1050.0], [89.2, 1050.0], [89.3, 1050.0], [89.4, 1052.0], [89.5, 1052.0], [89.6, 1052.0], [89.7, 1052.0], [89.8, 1055.0], [89.9, 1055.0], [90.0, 1055.0], [90.1, 1055.0], [90.2, 1055.0], [90.3, 1055.0], [90.4, 1055.0], [90.5, 1055.0], [90.6, 1060.0], [90.7, 1060.0], [90.8, 1060.0], [90.9, 1060.0], [91.0, 1063.0], [91.1, 1063.0], [91.2, 1063.0], [91.3, 1063.0], [91.4, 1064.0], [91.5, 1064.0], [91.6, 1064.0], [91.7, 1064.0], [91.8, 1065.0], [91.9, 1065.0], [92.0, 1065.0], [92.1, 1065.0], [92.2, 1065.0], [92.3, 1065.0], [92.4, 1065.0], [92.5, 1065.0], [92.6, 1065.0], [92.7, 1065.0], [92.8, 1065.0], [92.9, 1065.0], [93.0, 1065.0], [93.1, 1067.0], [93.2, 1067.0], [93.3, 1067.0], [93.4, 1067.0], [93.5, 1071.0], [93.6, 1071.0], [93.7, 1071.0], [93.8, 1071.0], [93.9, 1074.0], [94.0, 1074.0], [94.1, 1074.0], [94.2, 1074.0], [94.3, 1081.0], [94.4, 1081.0], [94.5, 1081.0], [94.6, 1081.0], [94.7, 1099.0], [94.8, 1099.0], [94.9, 1099.0], [95.0, 1099.0], [95.1, 1110.0], [95.2, 1110.0], [95.3, 1110.0], [95.4, 1110.0], [95.5, 1123.0], [95.6, 1123.0], [95.7, 1123.0], [95.8, 1123.0], [95.9, 1123.0], [96.0, 1123.0], [96.1, 1123.0], [96.2, 1123.0], [96.3, 1124.0], [96.4, 1124.0], [96.5, 1124.0], [96.6, 1124.0], [96.7, 1124.0], [96.8, 1127.0], [96.9, 1127.0], [97.0, 1127.0], [97.1, 1127.0], [97.2, 1129.0], [97.3, 1129.0], [97.4, 1129.0], [97.5, 1129.0], [97.6, 1131.0], [97.7, 1131.0], [97.8, 1131.0], [97.9, 1131.0], [98.0, 1136.0], [98.1, 1136.0], [98.2, 1136.0], [98.3, 1136.0], [98.4, 1137.0], [98.5, 1137.0], [98.6, 1137.0], [98.7, 1137.0], [98.8, 1151.0], [98.9, 1151.0], [99.0, 1151.0], [99.1, 1151.0], [99.2, 1156.0], [99.3, 1156.0], [99.4, 1156.0], [99.5, 1156.0], [99.6, 1158.0], [99.7, 1158.0], [99.8, 1158.0], [99.9, 1158.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 253.0], [0.1, 253.0], [0.2, 253.0], [0.3, 253.0], [0.4, 253.0], [0.5, 331.0], [0.6, 331.0], [0.7, 331.0], [0.8, 331.0], [0.9, 352.0], [1.0, 352.0], [1.1, 352.0], [1.2, 352.0], [1.3, 359.0], [1.4, 359.0], [1.5, 359.0], [1.6, 359.0], [1.7, 390.0], [1.8, 390.0], [1.9, 390.0], [2.0, 390.0], [2.1, 447.0], [2.2, 447.0], [2.3, 447.0], [2.4, 447.0], [2.5, 451.0], [2.6, 451.0], [2.7, 451.0], [2.8, 451.0], [2.9, 451.0], [3.0, 559.0], [3.1, 559.0], [3.2, 559.0], [3.3, 559.0], [3.4, 604.0], [3.5, 604.0], [3.6, 604.0], [3.7, 604.0], [3.8, 604.0], [3.9, 604.0], [4.0, 604.0], [4.1, 604.0], [4.2, 605.0], [4.3, 605.0], [4.4, 605.0], [4.5, 605.0], [4.6, 772.0], [4.7, 772.0], [4.8, 772.0], [4.9, 772.0], [5.0, 781.0], [5.1, 781.0], [5.2, 781.0], [5.3, 781.0], [5.4, 781.0], [5.5, 791.0], [5.6, 791.0], [5.7, 791.0], [5.8, 791.0], [5.9, 815.0], [6.0, 815.0], [6.1, 815.0], [6.2, 815.0], [6.3, 847.0], [6.4, 847.0], [6.5, 847.0], [6.6, 847.0], [6.7, 909.0], [6.8, 909.0], [6.9, 909.0], [7.0, 909.0], [7.1, 914.0], [7.2, 914.0], [7.3, 914.0], [7.4, 914.0], [7.5, 914.0], [7.6, 1012.0], [7.7, 1012.0], [7.8, 1012.0], [7.9, 1012.0], [8.0, 1012.0], [8.1, 1012.0], [8.2, 1012.0], [8.3, 1012.0], [8.4, 1017.0], [8.5, 1017.0], [8.6, 1017.0], [8.7, 1017.0], [8.8, 1017.0], [8.9, 1017.0], [9.0, 1017.0], [9.1, 1017.0], [9.2, 1018.0], [9.3, 1018.0], [9.4, 1018.0], [9.5, 1018.0], [9.6, 1022.0], [9.7, 1022.0], [9.8, 1022.0], [9.9, 1022.0], [10.0, 1022.0], [10.1, 1024.0], [10.2, 1024.0], [10.3, 1024.0], [10.4, 1024.0], [10.5, 1048.0], [10.6, 1048.0], [10.7, 1048.0], [10.8, 1048.0], [10.9, 1048.0], [11.0, 1048.0], [11.1, 1048.0], [11.2, 1048.0], [11.3, 1057.0], [11.4, 1057.0], [11.5, 1057.0], [11.6, 1057.0], [11.7, 1057.0], [11.8, 1057.0], [11.9, 1057.0], [12.0, 1057.0], [12.1, 1087.0], [12.2, 1087.0], [12.3, 1087.0], [12.4, 1087.0], [12.5, 1087.0], [12.6, 1159.0], [12.7, 1159.0], [12.8, 1159.0], [12.9, 1159.0], [13.0, 1192.0], [13.1, 1192.0], [13.2, 1192.0], [13.3, 1192.0], [13.4, 1218.0], [13.5, 1218.0], [13.6, 1218.0], [13.7, 1218.0], [13.8, 1218.0], [13.9, 1218.0], [14.0, 1218.0], [14.1, 1218.0], [14.2, 1218.0], [14.3, 1218.0], [14.4, 1218.0], [14.5, 1218.0], [14.6, 1245.0], [14.7, 1245.0], [14.8, 1245.0], [14.9, 1245.0], [15.0, 1433.0], [15.1, 1433.0], [15.2, 1433.0], [15.3, 1433.0], [15.4, 1433.0], [15.5, 1464.0], [15.6, 1464.0], [15.7, 1464.0], [15.8, 1464.0], [15.9, 1495.0], [16.0, 1495.0], [16.1, 1495.0], [16.2, 1495.0], [16.3, 1546.0], [16.4, 1546.0], [16.5, 1546.0], [16.6, 1546.0], [16.7, 1569.0], [16.8, 1569.0], [16.9, 1569.0], [17.0, 1569.0], [17.1, 1570.0], [17.2, 1570.0], [17.3, 1570.0], [17.4, 1570.0], [17.5, 1570.0], [17.6, 1577.0], [17.7, 1577.0], [17.8, 1577.0], [17.9, 1577.0], [18.0, 1583.0], [18.1, 1583.0], [18.2, 1583.0], [18.3, 1583.0], [18.4, 1584.0], [18.5, 1584.0], [18.6, 1584.0], [18.7, 1584.0], [18.8, 1585.0], [18.9, 1585.0], [19.0, 1585.0], [19.1, 1585.0], [19.2, 1607.0], [19.3, 1607.0], [19.4, 1607.0], [19.5, 1607.0], [19.6, 1608.0], [19.7, 1608.0], [19.8, 1608.0], [19.9, 1608.0], [20.0, 1608.0], [20.1, 1608.0], [20.2, 1608.0], [20.3, 1608.0], [20.4, 1608.0], [20.5, 1616.0], [20.6, 1616.0], [20.7, 1616.0], [20.8, 1616.0], [20.9, 1653.0], [21.0, 1653.0], [21.1, 1653.0], [21.2, 1653.0], [21.3, 1670.0], [21.4, 1670.0], [21.5, 1670.0], [21.6, 1670.0], [21.7, 1679.0], [21.8, 1679.0], [21.9, 1679.0], [22.0, 1679.0], [22.1, 1685.0], [22.2, 1685.0], [22.3, 1685.0], [22.4, 1685.0], [22.5, 1685.0], [22.6, 1689.0], [22.7, 1689.0], [22.8, 1689.0], [22.9, 1689.0], [23.0, 1692.0], [23.1, 1692.0], [23.2, 1692.0], [23.3, 1692.0], [23.4, 1712.0], [23.5, 1712.0], [23.6, 1712.0], [23.7, 1712.0], [23.8, 1719.0], [23.9, 1719.0], [24.0, 1719.0], [24.1, 1719.0], [24.2, 1727.0], [24.3, 1727.0], [24.4, 1727.0], [24.5, 1727.0], [24.6, 1747.0], [24.7, 1747.0], [24.8, 1747.0], [24.9, 1747.0], [25.0, 1747.0], [25.1, 1748.0], [25.2, 1748.0], [25.3, 1748.0], [25.4, 1748.0], [25.5, 1757.0], [25.6, 1757.0], [25.7, 1757.0], [25.8, 1757.0], [25.9, 1763.0], [26.0, 1763.0], [26.1, 1763.0], [26.2, 1763.0], [26.3, 1767.0], [26.4, 1767.0], [26.5, 1767.0], [26.6, 1767.0], [26.7, 1775.0], [26.8, 1775.0], [26.9, 1775.0], [27.0, 1775.0], [27.1, 1826.0], [27.2, 1826.0], [27.3, 1826.0], [27.4, 1826.0], [27.5, 1826.0], [27.6, 1842.0], [27.7, 1842.0], [27.8, 1842.0], [27.9, 1842.0], [28.0, 1854.0], [28.1, 1854.0], [28.2, 1854.0], [28.3, 1854.0], [28.4, 1855.0], [28.5, 1855.0], [28.6, 1855.0], [28.7, 1855.0], [28.8, 1875.0], [28.9, 1875.0], [29.0, 1875.0], [29.1, 1875.0], [29.2, 1908.0], [29.3, 1908.0], [29.4, 1908.0], [29.5, 1908.0], [29.6, 1915.0], [29.7, 1915.0], [29.8, 1915.0], [29.9, 1915.0], [30.0, 1915.0], [30.1, 1916.0], [30.2, 1916.0], [30.3, 1916.0], [30.4, 1916.0], [30.5, 1916.0], [30.6, 1916.0], [30.7, 1916.0], [30.8, 1916.0], [30.9, 1917.0], [31.0, 1917.0], [31.1, 1917.0], [31.2, 1917.0], [31.3, 1924.0], [31.4, 1924.0], [31.5, 1924.0], [31.6, 1924.0], [31.7, 1927.0], [31.8, 1927.0], [31.9, 1927.0], [32.0, 1927.0], [32.1, 1933.0], [32.2, 1933.0], [32.3, 1933.0], [32.4, 1933.0], [32.5, 1933.0], [32.6, 1934.0], [32.7, 1934.0], [32.8, 1934.0], [32.9, 1934.0], [33.0, 1937.0], [33.1, 1937.0], [33.2, 1937.0], [33.3, 1937.0], [33.4, 1937.0], [33.5, 1937.0], [33.6, 1937.0], [33.7, 1937.0], [33.8, 1940.0], [33.9, 1940.0], [34.0, 1940.0], [34.1, 1940.0], [34.2, 1940.0], [34.3, 1940.0], [34.4, 1940.0], [34.5, 1940.0], [34.6, 1941.0], [34.7, 1941.0], [34.8, 1941.0], [34.9, 1941.0], [35.0, 1941.0], [35.1, 1943.0], [35.2, 1943.0], [35.3, 1943.0], [35.4, 1943.0], [35.5, 1943.0], [35.6, 1943.0], [35.7, 1943.0], [35.8, 1943.0], [35.9, 1946.0], [36.0, 1946.0], [36.1, 1946.0], [36.2, 1946.0], [36.3, 1951.0], [36.4, 1951.0], [36.5, 1951.0], [36.6, 1951.0], [36.7, 1961.0], [36.8, 1961.0], [36.9, 1961.0], [37.0, 1961.0], [37.1, 1962.0], [37.2, 1962.0], [37.3, 1962.0], [37.4, 1962.0], [37.5, 1962.0], [37.6, 1964.0], [37.7, 1964.0], [37.8, 1964.0], [37.9, 1964.0], [38.0, 1966.0], [38.1, 1966.0], [38.2, 1966.0], [38.3, 1966.0], [38.4, 1971.0], [38.5, 1971.0], [38.6, 1971.0], [38.7, 1971.0], [38.8, 1972.0], [38.9, 1972.0], [39.0, 1972.0], [39.1, 1972.0], [39.2, 1974.0], [39.3, 1974.0], [39.4, 1974.0], [39.5, 1974.0], [39.6, 1976.0], [39.7, 1976.0], [39.8, 1976.0], [39.9, 1976.0], [40.0, 1976.0], [40.1, 1976.0], [40.2, 1976.0], [40.3, 1976.0], [40.4, 1976.0], [40.5, 1978.0], [40.6, 1978.0], [40.7, 1978.0], [40.8, 1978.0], [40.9, 1978.0], [41.0, 1978.0], [41.1, 1978.0], [41.2, 1978.0], [41.3, 1981.0], [41.4, 1981.0], [41.5, 1981.0], [41.6, 1981.0], [41.7, 1983.0], [41.8, 1983.0], [41.9, 1983.0], [42.0, 1983.0], [42.1, 1983.0], [42.2, 1983.0], [42.3, 1983.0], [42.4, 1983.0], [42.5, 1983.0], [42.6, 1983.0], [42.7, 1983.0], [42.8, 1983.0], [42.9, 1983.0], [43.0, 1985.0], [43.1, 1985.0], [43.2, 1985.0], [43.3, 1985.0], [43.4, 1986.0], [43.5, 1986.0], [43.6, 1986.0], [43.7, 1986.0], [43.8, 1994.0], [43.9, 1994.0], [44.0, 1994.0], [44.1, 1994.0], [44.2, 1995.0], [44.3, 1995.0], [44.4, 1995.0], [44.5, 1995.0], [44.6, 1996.0], [44.7, 1996.0], [44.8, 1996.0], [44.9, 1996.0], [45.0, 1996.0], [45.1, 1997.0], [45.2, 1997.0], [45.3, 1997.0], [45.4, 1997.0], [45.5, 2000.0], [45.6, 2000.0], [45.7, 2000.0], [45.8, 2000.0], [45.9, 2000.0], [46.0, 2000.0], [46.1, 2000.0], [46.2, 2000.0], [46.3, 2000.0], [46.4, 2000.0], [46.5, 2000.0], [46.6, 2000.0], [46.7, 2001.0], [46.8, 2001.0], [46.9, 2001.0], [47.0, 2001.0], [47.1, 2001.0], [47.2, 2001.0], [47.3, 2001.0], [47.4, 2001.0], [47.5, 2001.0], [47.6, 2001.0], [47.7, 2001.0], [47.8, 2001.0], [47.9, 2001.0], [48.0, 2001.0], [48.1, 2001.0], [48.2, 2001.0], [48.3, 2001.0], [48.4, 2002.0], [48.5, 2002.0], [48.6, 2002.0], [48.7, 2002.0], [48.8, 2003.0], [48.9, 2003.0], [49.0, 2003.0], [49.1, 2003.0], [49.2, 2004.0], [49.3, 2004.0], [49.4, 2004.0], [49.5, 2004.0], [49.6, 2004.0], [49.7, 2004.0], [49.8, 2004.0], [49.9, 2004.0], [50.0, 2005.0], [50.1, 2005.0], [50.2, 2005.0], [50.3, 2005.0], [50.4, 2005.0], [50.5, 2006.0], [50.6, 2006.0], [50.7, 2006.0], [50.8, 2006.0], [50.9, 2009.0], [51.0, 2009.0], [51.1, 2009.0], [51.2, 2009.0], [51.3, 2010.0], [51.4, 2010.0], [51.5, 2010.0], [51.6, 2010.0], [51.7, 2010.0], [51.8, 2010.0], [51.9, 2010.0], [52.0, 2010.0], [52.1, 2011.0], [52.2, 2011.0], [52.3, 2011.0], [52.4, 2011.0], [52.5, 2012.0], [52.6, 2012.0], [52.7, 2012.0], [52.8, 2012.0], [52.9, 2012.0], [53.0, 2013.0], [53.1, 2013.0], [53.2, 2013.0], [53.3, 2013.0], [53.4, 2014.0], [53.5, 2014.0], [53.6, 2014.0], [53.7, 2014.0], [53.8, 2016.0], [53.9, 2016.0], [54.0, 2016.0], [54.1, 2016.0], [54.2, 2018.0], [54.3, 2018.0], [54.4, 2018.0], [54.5, 2018.0], [54.6, 2018.0], [54.7, 2018.0], [54.8, 2018.0], [54.9, 2018.0], [55.0, 2019.0], [55.1, 2019.0], [55.2, 2019.0], [55.3, 2019.0], [55.4, 2019.0], [55.5, 2019.0], [55.6, 2019.0], [55.7, 2019.0], [55.8, 2019.0], [55.9, 2021.0], [56.0, 2021.0], [56.1, 2021.0], [56.2, 2021.0], [56.3, 2021.0], [56.4, 2021.0], [56.5, 2021.0], [56.6, 2021.0], [56.7, 2022.0], [56.8, 2022.0], [56.9, 2022.0], [57.0, 2022.0], [57.1, 2022.0], [57.2, 2022.0], [57.3, 2022.0], [57.4, 2022.0], [57.5, 2022.0], [57.6, 2022.0], [57.7, 2022.0], [57.8, 2022.0], [57.9, 2022.0], [58.0, 2023.0], [58.1, 2023.0], [58.2, 2023.0], [58.3, 2023.0], [58.4, 2023.0], [58.5, 2023.0], [58.6, 2023.0], [58.7, 2023.0], [58.8, 2025.0], [58.9, 2025.0], [59.0, 2025.0], [59.1, 2025.0], [59.2, 2026.0], [59.3, 2026.0], [59.4, 2026.0], [59.5, 2026.0], [59.6, 2026.0], [59.7, 2026.0], [59.8, 2026.0], [59.9, 2026.0], [60.0, 2026.0], [60.1, 2026.0], [60.2, 2026.0], [60.3, 2026.0], [60.4, 2026.0], [60.5, 2027.0], [60.6, 2027.0], [60.7, 2027.0], [60.8, 2027.0], [60.9, 2027.0], [61.0, 2027.0], [61.1, 2027.0], [61.2, 2027.0], [61.3, 2027.0], [61.4, 2027.0], [61.5, 2027.0], [61.6, 2027.0], [61.7, 2028.0], [61.8, 2028.0], [61.9, 2028.0], [62.0, 2028.0], [62.1, 2028.0], [62.2, 2028.0], [62.3, 2028.0], [62.4, 2028.0], [62.5, 2030.0], [62.6, 2030.0], [62.7, 2030.0], [62.8, 2030.0], [62.9, 2030.0], [63.0, 2030.0], [63.1, 2030.0], [63.2, 2030.0], [63.3, 2030.0], [63.4, 2031.0], [63.5, 2031.0], [63.6, 2031.0], [63.7, 2031.0], [63.8, 2032.0], [63.9, 2032.0], [64.0, 2032.0], [64.1, 2032.0], [64.2, 2032.0], [64.3, 2032.0], [64.4, 2032.0], [64.5, 2032.0], [64.6, 2034.0], [64.7, 2034.0], [64.8, 2034.0], [64.9, 2034.0], [65.0, 2035.0], [65.1, 2035.0], [65.2, 2035.0], [65.3, 2035.0], [65.4, 2035.0], [65.5, 2035.0], [65.6, 2035.0], [65.7, 2035.0], [65.8, 2035.0], [65.9, 2036.0], [66.0, 2036.0], [66.1, 2036.0], [66.2, 2036.0], [66.3, 2038.0], [66.4, 2038.0], [66.5, 2038.0], [66.6, 2038.0], [66.7, 2038.0], [66.8, 2038.0], [66.9, 2038.0], [67.0, 2038.0], [67.1, 2038.0], [67.2, 2038.0], [67.3, 2038.0], [67.4, 2038.0], [67.5, 2039.0], [67.6, 2039.0], [67.7, 2039.0], [67.8, 2039.0], [67.9, 2039.0], [68.0, 2040.0], [68.1, 2040.0], [68.2, 2040.0], [68.3, 2040.0], [68.4, 2040.0], [68.5, 2040.0], [68.6, 2040.0], [68.7, 2040.0], [68.8, 2042.0], [68.9, 2042.0], [69.0, 2042.0], [69.1, 2042.0], [69.2, 2042.0], [69.3, 2042.0], [69.4, 2042.0], [69.5, 2042.0], [69.6, 2043.0], [69.7, 2043.0], [69.8, 2043.0], [69.9, 2043.0], [70.0, 2044.0], [70.1, 2044.0], [70.2, 2044.0], [70.3, 2044.0], [70.4, 2044.0], [70.5, 2044.0], [70.6, 2044.0], [70.7, 2044.0], [70.8, 2044.0], [70.9, 2045.0], [71.0, 2045.0], [71.1, 2045.0], [71.2, 2045.0], [71.3, 2045.0], [71.4, 2045.0], [71.5, 2045.0], [71.6, 2045.0], [71.7, 2045.0], [71.8, 2045.0], [71.9, 2045.0], [72.0, 2045.0], [72.1, 2045.0], [72.2, 2045.0], [72.3, 2045.0], [72.4, 2045.0], [72.5, 2046.0], [72.6, 2046.0], [72.7, 2046.0], [72.8, 2046.0], [72.9, 2046.0], [73.0, 2048.0], [73.1, 2048.0], [73.2, 2048.0], [73.3, 2048.0], [73.4, 2049.0], [73.5, 2049.0], [73.6, 2049.0], [73.7, 2049.0], [73.8, 2052.0], [73.9, 2052.0], [74.0, 2052.0], [74.1, 2052.0], [74.2, 2052.0], [74.3, 2052.0], [74.4, 2052.0], [74.5, 2052.0], [74.6, 2052.0], [74.7, 2052.0], [74.8, 2052.0], [74.9, 2052.0], [75.0, 2052.0], [75.1, 2054.0], [75.2, 2054.0], [75.3, 2054.0], [75.4, 2054.0], [75.5, 2055.0], [75.6, 2055.0], [75.7, 2055.0], [75.8, 2055.0], [75.9, 2056.0], [76.0, 2056.0], [76.1, 2056.0], [76.2, 2056.0], [76.3, 2057.0], [76.4, 2057.0], [76.5, 2057.0], [76.6, 2057.0], [76.7, 2058.0], [76.8, 2058.0], [76.9, 2058.0], [77.0, 2058.0], [77.1, 2059.0], [77.2, 2059.0], [77.3, 2059.0], [77.4, 2059.0], [77.5, 2059.0], [77.6, 2059.0], [77.7, 2059.0], [77.8, 2059.0], [77.9, 2059.0], [78.0, 2060.0], [78.1, 2060.0], [78.2, 2060.0], [78.3, 2060.0], [78.4, 2061.0], [78.5, 2061.0], [78.6, 2061.0], [78.7, 2061.0], [78.8, 2063.0], [78.9, 2063.0], [79.0, 2063.0], [79.1, 2063.0], [79.2, 2066.0], [79.3, 2066.0], [79.4, 2066.0], [79.5, 2066.0], [79.6, 2067.0], [79.7, 2067.0], [79.8, 2067.0], [79.9, 2067.0], [80.0, 2067.0], [80.1, 2067.0], [80.2, 2067.0], [80.3, 2067.0], [80.4, 2067.0], [80.5, 2067.0], [80.6, 2067.0], [80.7, 2067.0], [80.8, 2067.0], [80.9, 2067.0], [81.0, 2067.0], [81.1, 2067.0], [81.2, 2067.0], [81.3, 2068.0], [81.4, 2068.0], [81.5, 2068.0], [81.6, 2068.0], [81.7, 2068.0], [81.8, 2068.0], [81.9, 2068.0], [82.0, 2068.0], [82.1, 2069.0], [82.2, 2069.0], [82.3, 2069.0], [82.4, 2069.0], [82.5, 2069.0], [82.6, 2069.0], [82.7, 2069.0], [82.8, 2069.0], [82.9, 2069.0], [83.0, 2070.0], [83.1, 2070.0], [83.2, 2070.0], [83.3, 2070.0], [83.4, 2070.0], [83.5, 2070.0], [83.6, 2070.0], [83.7, 2070.0], [83.8, 2070.0], [83.9, 2070.0], [84.0, 2070.0], [84.1, 2070.0], [84.2, 2070.0], [84.3, 2070.0], [84.4, 2070.0], [84.5, 2070.0], [84.6, 2070.0], [84.7, 2070.0], [84.8, 2070.0], [84.9, 2070.0], [85.0, 2070.0], [85.1, 2073.0], [85.2, 2073.0], [85.3, 2073.0], [85.4, 2073.0], [85.5, 2073.0], [85.6, 2073.0], [85.7, 2073.0], [85.8, 2073.0], [85.9, 2075.0], [86.0, 2075.0], [86.1, 2075.0], [86.2, 2075.0], [86.3, 2076.0], [86.4, 2076.0], [86.5, 2076.0], [86.6, 2076.0], [86.7, 2077.0], [86.8, 2077.0], [86.9, 2077.0], [87.0, 2077.0], [87.1, 2078.0], [87.2, 2078.0], [87.3, 2078.0], [87.4, 2078.0], [87.5, 2078.0], [87.6, 2078.0], [87.7, 2078.0], [87.8, 2078.0], [87.9, 2078.0], [88.0, 2079.0], [88.1, 2079.0], [88.2, 2079.0], [88.3, 2079.0], [88.4, 2082.0], [88.5, 2082.0], [88.6, 2082.0], [88.7, 2082.0], [88.8, 2082.0], [88.9, 2082.0], [89.0, 2082.0], [89.1, 2082.0], [89.2, 2082.0], [89.3, 2082.0], [89.4, 2082.0], [89.5, 2082.0], [89.6, 2083.0], [89.7, 2083.0], [89.8, 2083.0], [89.9, 2083.0], [90.0, 2083.0], [90.1, 2084.0], [90.2, 2084.0], [90.3, 2084.0], [90.4, 2084.0], [90.5, 2084.0], [90.6, 2084.0], [90.7, 2084.0], [90.8, 2084.0], [90.9, 2086.0], [91.0, 2086.0], [91.1, 2086.0], [91.2, 2086.0], [91.3, 2089.0], [91.4, 2089.0], [91.5, 2089.0], [91.6, 2089.0], [91.7, 2091.0], [91.8, 2091.0], [91.9, 2091.0], [92.0, 2091.0], [92.1, 2091.0], [92.2, 2091.0], [92.3, 2091.0], [92.4, 2091.0], [92.5, 2091.0], [92.6, 2091.0], [92.7, 2091.0], [92.8, 2091.0], [92.9, 2091.0], [93.0, 2094.0], [93.1, 2094.0], [93.2, 2094.0], [93.3, 2094.0], [93.4, 2095.0], [93.5, 2095.0], [93.6, 2095.0], [93.7, 2095.0], [93.8, 2095.0], [93.9, 2095.0], [94.0, 2095.0], [94.1, 2095.0], [94.2, 2096.0], [94.3, 2096.0], [94.4, 2096.0], [94.5, 2096.0], [94.6, 2099.0], [94.7, 2099.0], [94.8, 2099.0], [94.9, 2099.0], [95.0, 2099.0], [95.1, 2102.0], [95.2, 2102.0], [95.3, 2102.0], [95.4, 2102.0], [95.5, 2105.0], [95.6, 2105.0], [95.7, 2105.0], [95.8, 2105.0], [95.9, 2110.0], [96.0, 2110.0], [96.1, 2110.0], [96.2, 2110.0], [96.3, 2113.0], [96.4, 2113.0], [96.5, 2113.0], [96.6, 2113.0], [96.7, 2123.0], [96.8, 2123.0], [96.9, 2123.0], [97.0, 2123.0], [97.1, 2150.0], [97.2, 2150.0], [97.3, 2150.0], [97.4, 2150.0], [97.5, 2150.0], [97.6, 2151.0], [97.7, 2151.0], [97.8, 2151.0], [97.9, 2151.0], [98.0, 2157.0], [98.1, 2157.0], [98.2, 2157.0], [98.3, 2157.0], [98.4, 2159.0], [98.5, 2159.0], [98.6, 2159.0], [98.7, 2159.0], [98.8, 2160.0], [98.9, 2160.0], [99.0, 2160.0], [99.1, 2160.0], [99.2, 2160.0], [99.3, 2160.0], [99.4, 2160.0], [99.5, 2160.0], [99.6, 2160.0], [99.7, 2160.0], [99.8, 2160.0], [99.9, 2160.0], [100.0, 2160.0]], "isOverall": false, "label": "Modify Password", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 238.0, "series": [{"data": [[0.0, 95.0], [300.0, 9.0], [200.0, 3.0], [100.0, 126.0]], "isOverall": false, "label": "Modify User Info", "isController": false}, {"data": [[0.0, 95.0], [300.0, 9.0], [200.0, 3.0], [100.0, 126.0]], "isOverall": false, "label": "Modify User Infomation", "isController": true}, {"data": [[1100.0, 24.0], [300.0, 18.0], [600.0, 30.0], [700.0, 24.0], [200.0, 8.0], [400.0, 14.0], [800.0, 28.0], [100.0, 2.0], [900.0, 226.0], [500.0, 6.0], [1000.0, 106.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[2100.0, 24.0], [600.0, 6.0], [700.0, 6.0], [200.0, 2.0], [800.0, 4.0], [900.0, 4.0], [1000.0, 24.0], [1100.0, 4.0], [300.0, 8.0], [1200.0, 8.0], [1400.0, 6.0], [1500.0, 14.0], [1600.0, 20.0], [400.0, 4.0], [1700.0, 18.0], [1800.0, 10.0], [1900.0, 78.0], [500.0, 2.0], [2000.0, 238.0]], "isOverall": false, "label": "Modify Password", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 201.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 261.0, "series": [{"data": [[0.0, 261.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 254.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 201.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 8.442396313364048, "minX": 1.57793682E12, "maxY": 9.69138276553106, "series": [{"data": [[1.57793682E12, 8.442396313364048], [1.57793688E12, 9.69138276553106]], "isOverall": false, "label": "User Infomation Manage Thread Group(\u4E2A\u4EBA\u4FE1\u606F\u7BA1\u7406)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793688E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 45.5, "minX": 1.0, "maxY": 1939.6698564593316, "series": [{"data": [[1.0, 45.5], [2.0, 64.0], [4.0, 48.5], [8.0, 275.3333333333333], [9.0, 105.25], [5.0, 80.75], [10.0, 118.18090452261306], [3.0, 101.4], [6.0, 125.00000000000001], [7.0, 86.5]], "isOverall": false, "label": "Modify User Info", "isController": false}, {"data": [[9.334763948497857, 116.98283261802581]], "isOverall": false, "label": "Modify User Info-Aggregated", "isController": false}, {"data": [[1.0, 45.5], [2.0, 64.0], [4.0, 48.5], [8.0, 275.3333333333333], [9.0, 105.25], [5.0, 80.75], [10.0, 118.18090452261306], [3.0, 101.4], [6.0, 125.00000000000001], [7.0, 86.5]], "isOverall": false, "label": "Modify User Infomation", "isController": true}, {"data": [[9.334763948497857, 116.98283261802581]], "isOverall": false, "label": "Modify User Infomation-Aggregated", "isController": true}, {"data": [[1.0, 254.99999999999997], [2.0, 335.25], [4.0, 439.5], [8.0, 779.0], [9.0, 943.6666666666666], [5.0, 373.0], [10.0, 958.7132352941176], [3.0, 371.0], [6.0, 654.5833333333334], [7.0, 672.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[9.230452674897132, 895.8991769547317]], "isOverall": false, "label": "Login-Aggregated", "isController": false}, {"data": [[1.0, 352.0], [2.0, 381.75], [8.0, 559.0], [9.0, 1598.2499999999998], [5.0, 913.2499999999999], [10.0, 1939.6698564593316], [3.0, 707.5], [6.0, 566.5], [7.0, 1142.5]], "isOverall": false, "label": "Modify Password", "isController": false}, {"data": [[9.375000000000009, 1802.9083333333324]], "isOverall": false, "label": "Modify Password-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 10.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.57793682E12, "maxY": 5291.75, "series": [{"data": [[1.57793682E12, 2307.733333333333], [1.57793688E12, 5291.75]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.57793682E12, 0.0], [1.57793688E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793688E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 105.77439024390249, "minX": 1.57793682E12, "maxY": 1936.4764705882353, "series": [{"data": [[1.57793682E12, 143.6231884057971], [1.57793688E12, 105.77439024390249]], "isOverall": false, "label": "Modify User Info", "isController": false}, {"data": [[1.57793682E12, 143.6231884057971], [1.57793688E12, 105.77439024390249]], "isOverall": false, "label": "Modify User Infomation", "isController": true}, {"data": [[1.57793682E12, 767.5192307692307], [1.57793688E12, 956.5878787878789]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.57793682E12, 1478.5285714285717], [1.57793688E12, 1936.4764705882353]], "isOverall": false, "label": "Modify Password", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793688E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 105.06707317073169, "minX": 1.57793682E12, "maxY": 1936.1058823529413, "series": [{"data": [[1.57793682E12, 143.2463768115942], [1.57793688E12, 105.06707317073169]], "isOverall": false, "label": "Modify User Info", "isController": false}, {"data": [[1.57793682E12, 143.2463768115942], [1.57793688E12, 105.06707317073169]], "isOverall": false, "label": "Modify User Infomation", "isController": true}, {"data": [[1.57793682E12, 766.2564102564103], [1.57793688E12, 954.9636363636365]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.57793682E12, 1478.0857142857142], [1.57793688E12, 1936.1058823529413]], "isOverall": false, "label": "Modify Password", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793688E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.57793682E12, "maxY": 53.64102564102563, "series": [{"data": [[1.57793682E12, 40.04347826086958], [1.57793688E12, 45.02439024390244]], "isOverall": false, "label": "Modify User Info", "isController": false}, {"data": [[1.57793682E12, 40.04347826086958], [1.57793688E12, 45.02439024390243]], "isOverall": false, "label": "Modify User Infomation", "isController": true}, {"data": [[1.57793682E12, 53.64102564102563], [1.57793688E12, 40.29090909090913]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.57793682E12, 0.0], [1.57793688E12, 0.0]], "isOverall": false, "label": "Modify Password", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793688E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 39.0, "minX": 1.57793682E12, "maxY": 2160.0, "series": [{"data": [[1.57793682E12, 2096.0], [1.57793688E12, 2160.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.57793682E12, 39.0], [1.57793688E12, 44.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.57793682E12, 1768.6000000000001], [1.57793688E12, 2057.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.57793682E12, 2095.0], [1.57793688E12, 2157.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.57793682E12, 2010.8], [1.57793688E12, 2078.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793688E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 391.0, "minX": 1.0, "maxY": 1853.0, "series": [{"data": [[8.0, 770.0], [2.0, 1082.0], [9.0, 928.5], [10.0, 995.5], [11.0, 967.0], [12.0, 1853.0], [13.0, 844.5], [14.0, 708.0], [15.0, 819.0], [4.0, 391.0], [1.0, 1110.5], [19.0, 477.0], [5.0, 896.5], [20.0, 728.5], [21.0, 628.0], [6.0, 911.0], [7.0, 396.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 21.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 390.5, "minX": 1.0, "maxY": 1853.0, "series": [{"data": [[8.0, 770.0], [2.0, 1082.0], [9.0, 928.0], [10.0, 995.0], [11.0, 964.0], [12.0, 1853.0], [13.0, 844.5], [14.0, 708.0], [15.0, 819.0], [4.0, 390.5], [1.0, 1110.5], [19.0, 477.0], [5.0, 895.5], [20.0, 728.0], [21.0, 628.0], [6.0, 896.5], [7.0, 395.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 21.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 3.783333333333333, "minX": 1.57793682E12, "maxY": 8.15, "series": [{"data": [[1.57793682E12, 3.783333333333333], [1.57793688E12, 8.15]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793688E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 3.6166666666666667, "minX": 1.57793682E12, "maxY": 8.316666666666666, "series": [{"data": [[1.57793682E12, 3.6166666666666667], [1.57793688E12, 8.316666666666666]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793688E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.15, "minX": 1.57793682E12, "maxY": 5.666666666666667, "series": [{"data": [[1.57793682E12, 2.3333333333333335], [1.57793688E12, 5.666666666666667]], "isOverall": false, "label": "Modify Password-success", "isController": false}, {"data": [[1.57793682E12, 1.15], [1.57793688E12, 2.7333333333333334]], "isOverall": false, "label": "Modify User Infomation-success", "isController": true}, {"data": [[1.57793682E12, 2.6], [1.57793688E12, 5.5]], "isOverall": false, "label": "Login-success", "isController": false}, {"data": [[1.57793682E12, 1.15], [1.57793688E12, 2.7333333333333334]], "isOverall": false, "label": "Modify User Info-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793688E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 7.233333333333333, "minX": 1.57793682E12, "maxY": 16.633333333333333, "series": [{"data": [[1.57793682E12, 7.233333333333333], [1.57793688E12, 16.633333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57793688E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

