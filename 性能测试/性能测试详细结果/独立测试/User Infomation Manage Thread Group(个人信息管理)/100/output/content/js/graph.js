/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 69.0, "minX": 0.0, "maxY": 23319.0, "series": [{"data": [[0.0, 69.0], [0.1, 69.0], [0.2, 69.0], [0.3, 69.0], [0.4, 69.0], [0.5, 78.0], [0.6, 78.0], [0.7, 78.0], [0.8, 78.0], [0.9, 78.0], [1.0, 83.0], [1.1, 83.0], [1.2, 83.0], [1.3, 83.0], [1.4, 83.0], [1.5, 102.0], [1.6, 102.0], [1.7, 102.0], [1.8, 102.0], [1.9, 102.0], [2.0, 104.0], [2.1, 104.0], [2.2, 104.0], [2.3, 104.0], [2.4, 104.0], [2.5, 106.0], [2.6, 106.0], [2.7, 106.0], [2.8, 106.0], [2.9, 106.0], [3.0, 106.0], [3.1, 106.0], [3.2, 106.0], [3.3, 106.0], [3.4, 110.0], [3.5, 110.0], [3.6, 110.0], [3.7, 110.0], [3.8, 110.0], [3.9, 111.0], [4.0, 111.0], [4.1, 111.0], [4.2, 111.0], [4.3, 111.0], [4.4, 111.0], [4.5, 111.0], [4.6, 111.0], [4.7, 111.0], [4.8, 111.0], [4.9, 112.0], [5.0, 112.0], [5.1, 112.0], [5.2, 112.0], [5.3, 112.0], [5.4, 112.0], [5.5, 112.0], [5.6, 112.0], [5.7, 112.0], [5.8, 112.0], [5.9, 112.0], [6.0, 112.0], [6.1, 112.0], [6.2, 112.0], [6.3, 112.0], [6.4, 113.0], [6.5, 113.0], [6.6, 113.0], [6.7, 113.0], [6.8, 116.0], [6.9, 116.0], [7.0, 116.0], [7.1, 116.0], [7.2, 116.0], [7.3, 117.0], [7.4, 117.0], [7.5, 117.0], [7.6, 117.0], [7.7, 117.0], [7.8, 118.0], [7.9, 118.0], [8.0, 118.0], [8.1, 118.0], [8.2, 118.0], [8.3, 121.0], [8.4, 121.0], [8.5, 121.0], [8.6, 121.0], [8.7, 121.0], [8.8, 126.0], [8.9, 126.0], [9.0, 126.0], [9.1, 126.0], [9.2, 126.0], [9.3, 128.0], [9.4, 128.0], [9.5, 128.0], [9.6, 128.0], [9.7, 128.0], [9.8, 128.0], [9.9, 128.0], [10.0, 128.0], [10.1, 128.0], [10.2, 128.0], [10.3, 128.0], [10.4, 128.0], [10.5, 128.0], [10.6, 128.0], [10.7, 131.0], [10.8, 131.0], [10.9, 131.0], [11.0, 131.0], [11.1, 131.0], [11.2, 131.0], [11.3, 131.0], [11.4, 131.0], [11.5, 131.0], [11.6, 131.0], [11.7, 132.0], [11.8, 132.0], [11.9, 132.0], [12.0, 132.0], [12.1, 132.0], [12.2, 132.0], [12.3, 132.0], [12.4, 132.0], [12.5, 132.0], [12.6, 132.0], [12.7, 134.0], [12.8, 134.0], [12.9, 134.0], [13.0, 134.0], [13.1, 134.0], [13.2, 134.0], [13.3, 134.0], [13.4, 134.0], [13.5, 134.0], [13.6, 137.0], [13.7, 137.0], [13.8, 137.0], [13.9, 137.0], [14.0, 137.0], [14.1, 138.0], [14.2, 138.0], [14.3, 138.0], [14.4, 138.0], [14.5, 138.0], [14.6, 139.0], [14.7, 139.0], [14.8, 139.0], [14.9, 139.0], [15.0, 139.0], [15.1, 142.0], [15.2, 142.0], [15.3, 142.0], [15.4, 142.0], [15.5, 142.0], [15.6, 142.0], [15.7, 142.0], [15.8, 142.0], [15.9, 142.0], [16.0, 142.0], [16.1, 143.0], [16.2, 143.0], [16.3, 143.0], [16.4, 143.0], [16.5, 143.0], [16.6, 143.0], [16.7, 143.0], [16.8, 143.0], [16.9, 143.0], [17.0, 148.0], [17.1, 148.0], [17.2, 148.0], [17.3, 148.0], [17.4, 148.0], [17.5, 152.0], [17.6, 152.0], [17.7, 152.0], [17.8, 152.0], [17.9, 152.0], [18.0, 153.0], [18.1, 153.0], [18.2, 153.0], [18.3, 153.0], [18.4, 153.0], [18.5, 153.0], [18.6, 153.0], [18.7, 153.0], [18.8, 153.0], [18.9, 153.0], [19.0, 154.0], [19.1, 154.0], [19.2, 154.0], [19.3, 154.0], [19.4, 154.0], [19.5, 154.0], [19.6, 154.0], [19.7, 154.0], [19.8, 154.0], [19.9, 154.0], [20.0, 160.0], [20.1, 160.0], [20.2, 160.0], [20.3, 160.0], [20.4, 165.0], [20.5, 165.0], [20.6, 165.0], [20.7, 165.0], [20.8, 165.0], [20.9, 165.0], [21.0, 165.0], [21.1, 165.0], [21.2, 165.0], [21.3, 165.0], [21.4, 166.0], [21.5, 166.0], [21.6, 166.0], [21.7, 166.0], [21.8, 166.0], [21.9, 169.0], [22.0, 169.0], [22.1, 169.0], [22.2, 169.0], [22.3, 169.0], [22.4, 169.0], [22.5, 169.0], [22.6, 169.0], [22.7, 169.0], [22.8, 169.0], [22.9, 171.0], [23.0, 171.0], [23.1, 171.0], [23.2, 171.0], [23.3, 171.0], [23.4, 177.0], [23.5, 177.0], [23.6, 177.0], [23.7, 177.0], [23.8, 179.0], [23.9, 179.0], [24.0, 179.0], [24.1, 179.0], [24.2, 179.0], [24.3, 181.0], [24.4, 181.0], [24.5, 181.0], [24.6, 181.0], [24.7, 181.0], [24.8, 193.0], [24.9, 193.0], [25.0, 193.0], [25.1, 193.0], [25.2, 193.0], [25.3, 199.0], [25.4, 199.0], [25.5, 199.0], [25.6, 199.0], [25.7, 199.0], [25.8, 218.0], [25.9, 218.0], [26.0, 218.0], [26.1, 218.0], [26.2, 218.0], [26.3, 227.0], [26.4, 227.0], [26.5, 227.0], [26.6, 227.0], [26.7, 238.0], [26.8, 238.0], [26.9, 238.0], [27.0, 238.0], [27.1, 238.0], [27.2, 242.0], [27.3, 242.0], [27.4, 242.0], [27.5, 242.0], [27.6, 242.0], [27.7, 252.0], [27.8, 252.0], [27.9, 252.0], [28.0, 252.0], [28.1, 252.0], [28.2, 260.0], [28.3, 260.0], [28.4, 260.0], [28.5, 260.0], [28.6, 260.0], [28.7, 291.0], [28.8, 291.0], [28.9, 291.0], [29.0, 291.0], [29.1, 291.0], [29.2, 310.0], [29.3, 310.0], [29.4, 310.0], [29.5, 310.0], [29.6, 310.0], [29.7, 314.0], [29.8, 314.0], [29.9, 314.0], [30.0, 314.0], [30.1, 315.0], [30.2, 315.0], [30.3, 315.0], [30.4, 315.0], [30.5, 315.0], [30.6, 316.0], [30.7, 316.0], [30.8, 316.0], [30.9, 316.0], [31.0, 316.0], [31.1, 326.0], [31.2, 326.0], [31.3, 326.0], [31.4, 326.0], [31.5, 326.0], [31.6, 326.0], [31.7, 326.0], [31.8, 326.0], [31.9, 326.0], [32.0, 326.0], [32.1, 356.0], [32.2, 356.0], [32.3, 356.0], [32.4, 356.0], [32.5, 356.0], [32.6, 356.0], [32.7, 356.0], [32.8, 356.0], [32.9, 356.0], [33.0, 356.0], [33.1, 360.0], [33.2, 360.0], [33.3, 360.0], [33.4, 360.0], [33.5, 361.0], [33.6, 361.0], [33.7, 361.0], [33.8, 361.0], [33.9, 361.0], [34.0, 371.0], [34.1, 371.0], [34.2, 371.0], [34.3, 371.0], [34.4, 371.0], [34.5, 371.0], [34.6, 371.0], [34.7, 371.0], [34.8, 371.0], [34.9, 371.0], [35.0, 387.0], [35.1, 387.0], [35.2, 387.0], [35.3, 387.0], [35.4, 387.0], [35.5, 389.0], [35.6, 389.0], [35.7, 389.0], [35.8, 389.0], [35.9, 389.0], [36.0, 430.0], [36.1, 430.0], [36.2, 430.0], [36.3, 430.0], [36.4, 430.0], [36.5, 435.0], [36.6, 435.0], [36.7, 435.0], [36.8, 435.0], [36.9, 436.0], [37.0, 436.0], [37.1, 436.0], [37.2, 436.0], [37.3, 436.0], [37.4, 443.0], [37.5, 443.0], [37.6, 443.0], [37.7, 443.0], [37.8, 443.0], [37.9, 443.0], [38.0, 443.0], [38.1, 443.0], [38.2, 443.0], [38.3, 443.0], [38.4, 462.0], [38.5, 462.0], [38.6, 462.0], [38.7, 462.0], [38.8, 462.0], [38.9, 465.0], [39.0, 465.0], [39.1, 465.0], [39.2, 465.0], [39.3, 465.0], [39.4, 466.0], [39.5, 466.0], [39.6, 466.0], [39.7, 466.0], [39.8, 466.0], [39.9, 468.0], [40.0, 468.0], [40.1, 468.0], [40.2, 468.0], [40.3, 479.0], [40.4, 479.0], [40.5, 479.0], [40.6, 479.0], [40.7, 479.0], [40.8, 481.0], [40.9, 481.0], [41.0, 481.0], [41.1, 481.0], [41.2, 481.0], [41.3, 486.0], [41.4, 486.0], [41.5, 486.0], [41.6, 486.0], [41.7, 486.0], [41.8, 501.0], [41.9, 501.0], [42.0, 501.0], [42.1, 501.0], [42.2, 501.0], [42.3, 536.0], [42.4, 536.0], [42.5, 536.0], [42.6, 536.0], [42.7, 536.0], [42.8, 562.0], [42.9, 562.0], [43.0, 562.0], [43.1, 562.0], [43.2, 562.0], [43.3, 573.0], [43.4, 573.0], [43.5, 573.0], [43.6, 573.0], [43.7, 600.0], [43.8, 600.0], [43.9, 600.0], [44.0, 600.0], [44.1, 600.0], [44.2, 601.0], [44.3, 601.0], [44.4, 601.0], [44.5, 601.0], [44.6, 601.0], [44.7, 601.0], [44.8, 601.0], [44.9, 601.0], [45.0, 601.0], [45.1, 601.0], [45.2, 611.0], [45.3, 611.0], [45.4, 611.0], [45.5, 611.0], [45.6, 611.0], [45.7, 613.0], [45.8, 613.0], [45.9, 613.0], [46.0, 613.0], [46.1, 613.0], [46.2, 613.0], [46.3, 613.0], [46.4, 613.0], [46.5, 613.0], [46.6, 613.0], [46.7, 614.0], [46.8, 614.0], [46.9, 614.0], [47.0, 614.0], [47.1, 614.0], [47.2, 614.0], [47.3, 614.0], [47.4, 614.0], [47.5, 614.0], [47.6, 614.0], [47.7, 614.0], [47.8, 614.0], [47.9, 614.0], [48.0, 614.0], [48.1, 614.0], [48.2, 614.0], [48.3, 614.0], [48.4, 614.0], [48.5, 614.0], [48.6, 614.0], [48.7, 614.0], [48.8, 614.0], [48.9, 614.0], [49.0, 614.0], [49.1, 614.0], [49.2, 614.0], [49.3, 614.0], [49.4, 614.0], [49.5, 614.0], [49.6, 615.0], [49.7, 615.0], [49.8, 615.0], [49.9, 615.0], [50.0, 616.0], [50.1, 616.0], [50.2, 616.0], [50.3, 616.0], [50.4, 616.0], [50.5, 618.0], [50.6, 618.0], [50.7, 618.0], [50.8, 618.0], [50.9, 618.0], [51.0, 620.0], [51.1, 620.0], [51.2, 620.0], [51.3, 620.0], [51.4, 620.0], [51.5, 623.0], [51.6, 623.0], [51.7, 623.0], [51.8, 623.0], [51.9, 623.0], [52.0, 624.0], [52.1, 624.0], [52.2, 624.0], [52.3, 624.0], [52.4, 624.0], [52.5, 644.0], [52.6, 644.0], [52.7, 644.0], [52.8, 644.0], [52.9, 644.0], [53.0, 654.0], [53.1, 654.0], [53.2, 654.0], [53.3, 654.0], [53.4, 654.0], [53.5, 654.0], [53.6, 654.0], [53.7, 654.0], [53.8, 654.0], [53.9, 658.0], [54.0, 658.0], [54.1, 658.0], [54.2, 658.0], [54.3, 658.0], [54.4, 660.0], [54.5, 660.0], [54.6, 660.0], [54.7, 660.0], [54.8, 660.0], [54.9, 678.0], [55.0, 678.0], [55.1, 678.0], [55.2, 678.0], [55.3, 678.0], [55.4, 708.0], [55.5, 708.0], [55.6, 708.0], [55.7, 708.0], [55.8, 708.0], [55.9, 783.0], [56.0, 783.0], [56.1, 783.0], [56.2, 783.0], [56.3, 783.0], [56.4, 784.0], [56.5, 784.0], [56.6, 784.0], [56.7, 784.0], [56.8, 786.0], [56.9, 786.0], [57.0, 786.0], [57.1, 786.0], [57.2, 786.0], [57.3, 787.0], [57.4, 787.0], [57.5, 787.0], [57.6, 787.0], [57.7, 787.0], [57.8, 792.0], [57.9, 792.0], [58.0, 792.0], [58.1, 792.0], [58.2, 792.0], [58.3, 794.0], [58.4, 794.0], [58.5, 794.0], [58.6, 794.0], [58.7, 794.0], [58.8, 808.0], [58.9, 808.0], [59.0, 808.0], [59.1, 808.0], [59.2, 808.0], [59.3, 811.0], [59.4, 811.0], [59.5, 811.0], [59.6, 811.0], [59.7, 811.0], [59.8, 819.0], [59.9, 819.0], [60.0, 819.0], [60.1, 819.0], [60.2, 901.0], [60.3, 901.0], [60.4, 901.0], [60.5, 901.0], [60.6, 901.0], [60.7, 917.0], [60.8, 917.0], [60.9, 917.0], [61.0, 917.0], [61.1, 917.0], [61.2, 921.0], [61.3, 921.0], [61.4, 921.0], [61.5, 921.0], [61.6, 921.0], [61.7, 923.0], [61.8, 923.0], [61.9, 923.0], [62.0, 923.0], [62.1, 923.0], [62.2, 962.0], [62.3, 962.0], [62.4, 962.0], [62.5, 962.0], [62.6, 962.0], [62.7, 963.0], [62.8, 963.0], [62.9, 963.0], [63.0, 963.0], [63.1, 963.0], [63.2, 967.0], [63.3, 967.0], [63.4, 967.0], [63.5, 967.0], [63.6, 968.0], [63.7, 968.0], [63.8, 968.0], [63.9, 968.0], [64.0, 968.0], [64.1, 969.0], [64.2, 969.0], [64.3, 969.0], [64.4, 969.0], [64.5, 969.0], [64.6, 972.0], [64.7, 972.0], [64.8, 972.0], [64.9, 972.0], [65.0, 972.0], [65.1, 974.0], [65.2, 974.0], [65.3, 974.0], [65.4, 974.0], [65.5, 974.0], [65.6, 984.0], [65.7, 984.0], [65.8, 984.0], [65.9, 984.0], [66.0, 984.0], [66.1, 985.0], [66.2, 985.0], [66.3, 985.0], [66.4, 985.0], [66.5, 985.0], [66.6, 994.0], [66.7, 994.0], [66.8, 994.0], [66.9, 994.0], [67.0, 1008.0], [67.1, 1008.0], [67.2, 1008.0], [67.3, 1008.0], [67.4, 1008.0], [67.5, 1010.0], [67.6, 1010.0], [67.7, 1010.0], [67.8, 1010.0], [67.9, 1010.0], [68.0, 1012.0], [68.1, 1012.0], [68.2, 1012.0], [68.3, 1012.0], [68.4, 1012.0], [68.5, 1019.0], [68.6, 1019.0], [68.7, 1019.0], [68.8, 1019.0], [68.9, 1019.0], [69.0, 1028.0], [69.1, 1028.0], [69.2, 1028.0], [69.3, 1028.0], [69.4, 1028.0], [69.5, 1038.0], [69.6, 1038.0], [69.7, 1038.0], [69.8, 1038.0], [69.9, 1038.0], [70.0, 1039.0], [70.1, 1039.0], [70.2, 1039.0], [70.3, 1039.0], [70.4, 1044.0], [70.5, 1044.0], [70.6, 1044.0], [70.7, 1044.0], [70.8, 1044.0], [70.9, 1045.0], [71.0, 1045.0], [71.1, 1045.0], [71.2, 1045.0], [71.3, 1045.0], [71.4, 1047.0], [71.5, 1047.0], [71.6, 1047.0], [71.7, 1047.0], [71.8, 1047.0], [71.9, 1052.0], [72.0, 1052.0], [72.1, 1052.0], [72.2, 1052.0], [72.3, 1052.0], [72.4, 1056.0], [72.5, 1056.0], [72.6, 1056.0], [72.7, 1056.0], [72.8, 1056.0], [72.9, 1059.0], [73.0, 1059.0], [73.1, 1059.0], [73.2, 1059.0], [73.3, 1059.0], [73.4, 1065.0], [73.5, 1065.0], [73.6, 1065.0], [73.7, 1065.0], [73.8, 1072.0], [73.9, 1072.0], [74.0, 1072.0], [74.1, 1072.0], [74.2, 1072.0], [74.3, 1075.0], [74.4, 1075.0], [74.5, 1075.0], [74.6, 1075.0], [74.7, 1075.0], [74.8, 1089.0], [74.9, 1089.0], [75.0, 1089.0], [75.1, 1089.0], [75.2, 1089.0], [75.3, 1091.0], [75.4, 1091.0], [75.5, 1091.0], [75.6, 1091.0], [75.7, 1091.0], [75.8, 1146.0], [75.9, 1146.0], [76.0, 1146.0], [76.1, 1146.0], [76.2, 1146.0], [76.3, 1167.0], [76.4, 1167.0], [76.5, 1167.0], [76.6, 1167.0], [76.7, 1172.0], [76.8, 1172.0], [76.9, 1172.0], [77.0, 1172.0], [77.1, 1172.0], [77.2, 1180.0], [77.3, 1180.0], [77.4, 1180.0], [77.5, 1180.0], [77.6, 1180.0], [77.7, 1183.0], [77.8, 1183.0], [77.9, 1183.0], [78.0, 1183.0], [78.1, 1183.0], [78.2, 1210.0], [78.3, 1210.0], [78.4, 1210.0], [78.5, 1210.0], [78.6, 1210.0], [78.7, 1220.0], [78.8, 1220.0], [78.9, 1220.0], [79.0, 1220.0], [79.1, 1220.0], [79.2, 1267.0], [79.3, 1267.0], [79.4, 1267.0], [79.5, 1267.0], [79.6, 1267.0], [79.7, 1268.0], [79.8, 1268.0], [79.9, 1268.0], [80.0, 1268.0], [80.1, 1270.0], [80.2, 1270.0], [80.3, 1270.0], [80.4, 1270.0], [80.5, 1270.0], [80.6, 1277.0], [80.7, 1277.0], [80.8, 1277.0], [80.9, 1277.0], [81.0, 1277.0], [81.1, 1278.0], [81.2, 1278.0], [81.3, 1278.0], [81.4, 1278.0], [81.5, 1278.0], [81.6, 1306.0], [81.7, 1306.0], [81.8, 1306.0], [81.9, 1306.0], [82.0, 1306.0], [82.1, 1320.0], [82.2, 1320.0], [82.3, 1320.0], [82.4, 1320.0], [82.5, 1320.0], [82.6, 1324.0], [82.7, 1324.0], [82.8, 1324.0], [82.9, 1324.0], [83.0, 1324.0], [83.1, 1324.0], [83.2, 1324.0], [83.3, 1324.0], [83.4, 1324.0], [83.5, 1398.0], [83.6, 1398.0], [83.7, 1398.0], [83.8, 1398.0], [83.9, 1398.0], [84.0, 1541.0], [84.1, 1541.0], [84.2, 1541.0], [84.3, 1541.0], [84.4, 1541.0], [84.5, 1551.0], [84.6, 1551.0], [84.7, 1551.0], [84.8, 1551.0], [84.9, 1551.0], [85.0, 1551.0], [85.1, 1551.0], [85.2, 1551.0], [85.3, 1551.0], [85.4, 1551.0], [85.5, 1607.0], [85.6, 1607.0], [85.7, 1607.0], [85.8, 1607.0], [85.9, 1607.0], [86.0, 1659.0], [86.1, 1659.0], [86.2, 1659.0], [86.3, 1659.0], [86.4, 1659.0], [86.5, 1723.0], [86.6, 1723.0], [86.7, 1723.0], [86.8, 1723.0], [86.9, 1728.0], [87.0, 1728.0], [87.1, 1728.0], [87.2, 1728.0], [87.3, 1728.0], [87.4, 1729.0], [87.5, 1729.0], [87.6, 1729.0], [87.7, 1729.0], [87.8, 1729.0], [87.9, 1733.0], [88.0, 1733.0], [88.1, 1733.0], [88.2, 1733.0], [88.3, 1733.0], [88.4, 1782.0], [88.5, 1782.0], [88.6, 1782.0], [88.7, 1782.0], [88.8, 1782.0], [88.9, 1827.0], [89.0, 1827.0], [89.1, 1827.0], [89.2, 1827.0], [89.3, 1827.0], [89.4, 1879.0], [89.5, 1879.0], [89.6, 1879.0], [89.7, 1879.0], [89.8, 1879.0], [89.9, 1927.0], [90.0, 1927.0], [90.1, 1927.0], [90.2, 1927.0], [90.3, 1931.0], [90.4, 1931.0], [90.5, 1931.0], [90.6, 1931.0], [90.7, 1931.0], [90.8, 1940.0], [90.9, 1940.0], [91.0, 1940.0], [91.1, 1940.0], [91.2, 1940.0], [91.3, 1941.0], [91.4, 1941.0], [91.5, 1941.0], [91.6, 1941.0], [91.7, 1941.0], [91.8, 2006.0], [91.9, 2006.0], [92.0, 2006.0], [92.1, 2006.0], [92.2, 2006.0], [92.3, 2026.0], [92.4, 2026.0], [92.5, 2026.0], [92.6, 2026.0], [92.7, 2026.0], [92.8, 2033.0], [92.9, 2033.0], [93.0, 2033.0], [93.1, 2033.0], [93.2, 2033.0], [93.3, 2040.0], [93.4, 2040.0], [93.5, 2040.0], [93.6, 2040.0], [93.7, 2051.0], [93.8, 2051.0], [93.9, 2051.0], [94.0, 2051.0], [94.1, 2051.0], [94.2, 2068.0], [94.3, 2068.0], [94.4, 2068.0], [94.5, 2068.0], [94.6, 2068.0], [94.7, 2096.0], [94.8, 2096.0], [94.9, 2096.0], [95.0, 2096.0], [95.1, 2096.0], [95.2, 2100.0], [95.3, 2100.0], [95.4, 2100.0], [95.5, 2100.0], [95.6, 2100.0], [95.7, 2100.0], [95.8, 2100.0], [95.9, 2100.0], [96.0, 2100.0], [96.1, 2100.0], [96.2, 2120.0], [96.3, 2120.0], [96.4, 2120.0], [96.5, 2120.0], [96.6, 2120.0], [96.7, 2127.0], [96.8, 2127.0], [96.9, 2127.0], [97.0, 2127.0], [97.1, 2135.0], [97.2, 2135.0], [97.3, 2135.0], [97.4, 2135.0], [97.5, 2135.0], [97.6, 2137.0], [97.7, 2137.0], [97.8, 2137.0], [97.9, 2137.0], [98.0, 2137.0], [98.1, 2189.0], [98.2, 2189.0], [98.3, 2189.0], [98.4, 2189.0], [98.5, 2189.0], [98.6, 3097.0], [98.7, 3097.0], [98.8, 3097.0], [98.9, 3097.0], [99.0, 3097.0], [99.1, 4193.0], [99.2, 4193.0], [99.3, 4193.0], [99.4, 4193.0], [99.5, 4193.0], [99.6, 4284.0], [99.7, 4284.0], [99.8, 4284.0], [99.9, 4284.0]], "isOverall": false, "label": "Modify User Info", "isController": false}, {"data": [[0.0, 69.0], [0.1, 69.0], [0.2, 69.0], [0.3, 69.0], [0.4, 69.0], [0.5, 78.0], [0.6, 78.0], [0.7, 78.0], [0.8, 78.0], [0.9, 78.0], [1.0, 83.0], [1.1, 83.0], [1.2, 83.0], [1.3, 83.0], [1.4, 83.0], [1.5, 102.0], [1.6, 102.0], [1.7, 102.0], [1.8, 102.0], [1.9, 102.0], [2.0, 104.0], [2.1, 104.0], [2.2, 104.0], [2.3, 104.0], [2.4, 104.0], [2.5, 106.0], [2.6, 106.0], [2.7, 106.0], [2.8, 106.0], [2.9, 106.0], [3.0, 106.0], [3.1, 106.0], [3.2, 106.0], [3.3, 106.0], [3.4, 110.0], [3.5, 110.0], [3.6, 110.0], [3.7, 110.0], [3.8, 110.0], [3.9, 111.0], [4.0, 111.0], [4.1, 111.0], [4.2, 111.0], [4.3, 111.0], [4.4, 111.0], [4.5, 111.0], [4.6, 111.0], [4.7, 111.0], [4.8, 111.0], [4.9, 112.0], [5.0, 112.0], [5.1, 112.0], [5.2, 112.0], [5.3, 112.0], [5.4, 112.0], [5.5, 112.0], [5.6, 112.0], [5.7, 112.0], [5.8, 112.0], [5.9, 112.0], [6.0, 112.0], [6.1, 112.0], [6.2, 112.0], [6.3, 112.0], [6.4, 113.0], [6.5, 113.0], [6.6, 113.0], [6.7, 113.0], [6.8, 116.0], [6.9, 116.0], [7.0, 116.0], [7.1, 116.0], [7.2, 116.0], [7.3, 117.0], [7.4, 117.0], [7.5, 117.0], [7.6, 117.0], [7.7, 117.0], [7.8, 118.0], [7.9, 118.0], [8.0, 118.0], [8.1, 118.0], [8.2, 118.0], [8.3, 121.0], [8.4, 121.0], [8.5, 121.0], [8.6, 121.0], [8.7, 121.0], [8.8, 126.0], [8.9, 126.0], [9.0, 126.0], [9.1, 126.0], [9.2, 126.0], [9.3, 128.0], [9.4, 128.0], [9.5, 128.0], [9.6, 128.0], [9.7, 128.0], [9.8, 128.0], [9.9, 128.0], [10.0, 128.0], [10.1, 128.0], [10.2, 128.0], [10.3, 128.0], [10.4, 128.0], [10.5, 128.0], [10.6, 128.0], [10.7, 131.0], [10.8, 131.0], [10.9, 131.0], [11.0, 131.0], [11.1, 131.0], [11.2, 131.0], [11.3, 131.0], [11.4, 131.0], [11.5, 131.0], [11.6, 131.0], [11.7, 132.0], [11.8, 132.0], [11.9, 132.0], [12.0, 132.0], [12.1, 132.0], [12.2, 132.0], [12.3, 132.0], [12.4, 132.0], [12.5, 132.0], [12.6, 132.0], [12.7, 134.0], [12.8, 134.0], [12.9, 134.0], [13.0, 134.0], [13.1, 134.0], [13.2, 134.0], [13.3, 134.0], [13.4, 134.0], [13.5, 134.0], [13.6, 137.0], [13.7, 137.0], [13.8, 137.0], [13.9, 137.0], [14.0, 137.0], [14.1, 138.0], [14.2, 138.0], [14.3, 138.0], [14.4, 138.0], [14.5, 138.0], [14.6, 139.0], [14.7, 139.0], [14.8, 139.0], [14.9, 139.0], [15.0, 139.0], [15.1, 142.0], [15.2, 142.0], [15.3, 142.0], [15.4, 142.0], [15.5, 142.0], [15.6, 142.0], [15.7, 142.0], [15.8, 142.0], [15.9, 142.0], [16.0, 142.0], [16.1, 143.0], [16.2, 143.0], [16.3, 143.0], [16.4, 143.0], [16.5, 143.0], [16.6, 143.0], [16.7, 143.0], [16.8, 143.0], [16.9, 143.0], [17.0, 148.0], [17.1, 148.0], [17.2, 148.0], [17.3, 148.0], [17.4, 148.0], [17.5, 152.0], [17.6, 152.0], [17.7, 152.0], [17.8, 152.0], [17.9, 152.0], [18.0, 153.0], [18.1, 153.0], [18.2, 153.0], [18.3, 153.0], [18.4, 153.0], [18.5, 153.0], [18.6, 153.0], [18.7, 153.0], [18.8, 153.0], [18.9, 153.0], [19.0, 154.0], [19.1, 154.0], [19.2, 154.0], [19.3, 154.0], [19.4, 154.0], [19.5, 154.0], [19.6, 154.0], [19.7, 154.0], [19.8, 154.0], [19.9, 154.0], [20.0, 160.0], [20.1, 160.0], [20.2, 160.0], [20.3, 160.0], [20.4, 165.0], [20.5, 165.0], [20.6, 165.0], [20.7, 165.0], [20.8, 165.0], [20.9, 165.0], [21.0, 165.0], [21.1, 165.0], [21.2, 165.0], [21.3, 165.0], [21.4, 166.0], [21.5, 166.0], [21.6, 166.0], [21.7, 166.0], [21.8, 166.0], [21.9, 169.0], [22.0, 169.0], [22.1, 169.0], [22.2, 169.0], [22.3, 169.0], [22.4, 169.0], [22.5, 169.0], [22.6, 169.0], [22.7, 169.0], [22.8, 169.0], [22.9, 171.0], [23.0, 171.0], [23.1, 171.0], [23.2, 171.0], [23.3, 171.0], [23.4, 177.0], [23.5, 177.0], [23.6, 177.0], [23.7, 177.0], [23.8, 179.0], [23.9, 179.0], [24.0, 179.0], [24.1, 179.0], [24.2, 179.0], [24.3, 181.0], [24.4, 181.0], [24.5, 181.0], [24.6, 181.0], [24.7, 181.0], [24.8, 193.0], [24.9, 193.0], [25.0, 193.0], [25.1, 193.0], [25.2, 193.0], [25.3, 199.0], [25.4, 199.0], [25.5, 199.0], [25.6, 199.0], [25.7, 199.0], [25.8, 218.0], [25.9, 218.0], [26.0, 218.0], [26.1, 218.0], [26.2, 218.0], [26.3, 227.0], [26.4, 227.0], [26.5, 227.0], [26.6, 227.0], [26.7, 238.0], [26.8, 238.0], [26.9, 238.0], [27.0, 238.0], [27.1, 238.0], [27.2, 242.0], [27.3, 242.0], [27.4, 242.0], [27.5, 242.0], [27.6, 242.0], [27.7, 252.0], [27.8, 252.0], [27.9, 252.0], [28.0, 252.0], [28.1, 252.0], [28.2, 260.0], [28.3, 260.0], [28.4, 260.0], [28.5, 260.0], [28.6, 260.0], [28.7, 291.0], [28.8, 291.0], [28.9, 291.0], [29.0, 291.0], [29.1, 291.0], [29.2, 310.0], [29.3, 310.0], [29.4, 310.0], [29.5, 310.0], [29.6, 310.0], [29.7, 314.0], [29.8, 314.0], [29.9, 314.0], [30.0, 314.0], [30.1, 315.0], [30.2, 315.0], [30.3, 315.0], [30.4, 315.0], [30.5, 315.0], [30.6, 316.0], [30.7, 316.0], [30.8, 316.0], [30.9, 316.0], [31.0, 316.0], [31.1, 326.0], [31.2, 326.0], [31.3, 326.0], [31.4, 326.0], [31.5, 326.0], [31.6, 326.0], [31.7, 326.0], [31.8, 326.0], [31.9, 326.0], [32.0, 326.0], [32.1, 356.0], [32.2, 356.0], [32.3, 356.0], [32.4, 356.0], [32.5, 356.0], [32.6, 356.0], [32.7, 356.0], [32.8, 356.0], [32.9, 356.0], [33.0, 356.0], [33.1, 360.0], [33.2, 360.0], [33.3, 360.0], [33.4, 360.0], [33.5, 361.0], [33.6, 361.0], [33.7, 361.0], [33.8, 361.0], [33.9, 361.0], [34.0, 371.0], [34.1, 371.0], [34.2, 371.0], [34.3, 371.0], [34.4, 371.0], [34.5, 371.0], [34.6, 371.0], [34.7, 371.0], [34.8, 371.0], [34.9, 371.0], [35.0, 387.0], [35.1, 387.0], [35.2, 387.0], [35.3, 387.0], [35.4, 387.0], [35.5, 389.0], [35.6, 389.0], [35.7, 389.0], [35.8, 389.0], [35.9, 389.0], [36.0, 430.0], [36.1, 430.0], [36.2, 430.0], [36.3, 430.0], [36.4, 430.0], [36.5, 435.0], [36.6, 435.0], [36.7, 435.0], [36.8, 435.0], [36.9, 436.0], [37.0, 436.0], [37.1, 436.0], [37.2, 436.0], [37.3, 436.0], [37.4, 443.0], [37.5, 443.0], [37.6, 443.0], [37.7, 443.0], [37.8, 443.0], [37.9, 443.0], [38.0, 443.0], [38.1, 443.0], [38.2, 443.0], [38.3, 443.0], [38.4, 462.0], [38.5, 462.0], [38.6, 462.0], [38.7, 462.0], [38.8, 462.0], [38.9, 465.0], [39.0, 465.0], [39.1, 465.0], [39.2, 465.0], [39.3, 465.0], [39.4, 466.0], [39.5, 466.0], [39.6, 466.0], [39.7, 466.0], [39.8, 466.0], [39.9, 468.0], [40.0, 468.0], [40.1, 468.0], [40.2, 468.0], [40.3, 479.0], [40.4, 479.0], [40.5, 479.0], [40.6, 479.0], [40.7, 479.0], [40.8, 481.0], [40.9, 481.0], [41.0, 481.0], [41.1, 481.0], [41.2, 481.0], [41.3, 486.0], [41.4, 486.0], [41.5, 486.0], [41.6, 486.0], [41.7, 486.0], [41.8, 501.0], [41.9, 501.0], [42.0, 501.0], [42.1, 501.0], [42.2, 501.0], [42.3, 536.0], [42.4, 536.0], [42.5, 536.0], [42.6, 536.0], [42.7, 536.0], [42.8, 562.0], [42.9, 562.0], [43.0, 562.0], [43.1, 562.0], [43.2, 562.0], [43.3, 573.0], [43.4, 573.0], [43.5, 573.0], [43.6, 573.0], [43.7, 600.0], [43.8, 600.0], [43.9, 600.0], [44.0, 600.0], [44.1, 600.0], [44.2, 601.0], [44.3, 601.0], [44.4, 601.0], [44.5, 601.0], [44.6, 601.0], [44.7, 601.0], [44.8, 601.0], [44.9, 601.0], [45.0, 601.0], [45.1, 601.0], [45.2, 611.0], [45.3, 611.0], [45.4, 611.0], [45.5, 611.0], [45.6, 611.0], [45.7, 613.0], [45.8, 613.0], [45.9, 613.0], [46.0, 613.0], [46.1, 613.0], [46.2, 613.0], [46.3, 613.0], [46.4, 613.0], [46.5, 613.0], [46.6, 613.0], [46.7, 614.0], [46.8, 614.0], [46.9, 614.0], [47.0, 614.0], [47.1, 614.0], [47.2, 614.0], [47.3, 614.0], [47.4, 614.0], [47.5, 614.0], [47.6, 614.0], [47.7, 614.0], [47.8, 614.0], [47.9, 614.0], [48.0, 614.0], [48.1, 614.0], [48.2, 614.0], [48.3, 614.0], [48.4, 614.0], [48.5, 614.0], [48.6, 614.0], [48.7, 614.0], [48.8, 614.0], [48.9, 614.0], [49.0, 614.0], [49.1, 614.0], [49.2, 614.0], [49.3, 614.0], [49.4, 614.0], [49.5, 614.0], [49.6, 615.0], [49.7, 615.0], [49.8, 615.0], [49.9, 615.0], [50.0, 616.0], [50.1, 616.0], [50.2, 616.0], [50.3, 616.0], [50.4, 616.0], [50.5, 618.0], [50.6, 618.0], [50.7, 618.0], [50.8, 618.0], [50.9, 618.0], [51.0, 620.0], [51.1, 620.0], [51.2, 620.0], [51.3, 620.0], [51.4, 620.0], [51.5, 623.0], [51.6, 623.0], [51.7, 623.0], [51.8, 623.0], [51.9, 623.0], [52.0, 624.0], [52.1, 624.0], [52.2, 624.0], [52.3, 624.0], [52.4, 624.0], [52.5, 644.0], [52.6, 644.0], [52.7, 644.0], [52.8, 644.0], [52.9, 644.0], [53.0, 654.0], [53.1, 654.0], [53.2, 654.0], [53.3, 654.0], [53.4, 654.0], [53.5, 654.0], [53.6, 654.0], [53.7, 654.0], [53.8, 654.0], [53.9, 658.0], [54.0, 658.0], [54.1, 658.0], [54.2, 658.0], [54.3, 658.0], [54.4, 660.0], [54.5, 660.0], [54.6, 660.0], [54.7, 660.0], [54.8, 660.0], [54.9, 678.0], [55.0, 678.0], [55.1, 678.0], [55.2, 678.0], [55.3, 678.0], [55.4, 708.0], [55.5, 708.0], [55.6, 708.0], [55.7, 708.0], [55.8, 708.0], [55.9, 783.0], [56.0, 783.0], [56.1, 783.0], [56.2, 783.0], [56.3, 783.0], [56.4, 784.0], [56.5, 784.0], [56.6, 784.0], [56.7, 784.0], [56.8, 786.0], [56.9, 786.0], [57.0, 786.0], [57.1, 786.0], [57.2, 786.0], [57.3, 787.0], [57.4, 787.0], [57.5, 787.0], [57.6, 787.0], [57.7, 787.0], [57.8, 792.0], [57.9, 792.0], [58.0, 792.0], [58.1, 792.0], [58.2, 792.0], [58.3, 794.0], [58.4, 794.0], [58.5, 794.0], [58.6, 794.0], [58.7, 794.0], [58.8, 808.0], [58.9, 808.0], [59.0, 808.0], [59.1, 808.0], [59.2, 808.0], [59.3, 811.0], [59.4, 811.0], [59.5, 811.0], [59.6, 811.0], [59.7, 811.0], [59.8, 819.0], [59.9, 819.0], [60.0, 819.0], [60.1, 819.0], [60.2, 901.0], [60.3, 901.0], [60.4, 901.0], [60.5, 901.0], [60.6, 901.0], [60.7, 917.0], [60.8, 917.0], [60.9, 917.0], [61.0, 917.0], [61.1, 917.0], [61.2, 921.0], [61.3, 921.0], [61.4, 921.0], [61.5, 921.0], [61.6, 921.0], [61.7, 923.0], [61.8, 923.0], [61.9, 923.0], [62.0, 923.0], [62.1, 923.0], [62.2, 962.0], [62.3, 962.0], [62.4, 962.0], [62.5, 962.0], [62.6, 962.0], [62.7, 963.0], [62.8, 963.0], [62.9, 963.0], [63.0, 963.0], [63.1, 963.0], [63.2, 967.0], [63.3, 967.0], [63.4, 967.0], [63.5, 967.0], [63.6, 968.0], [63.7, 968.0], [63.8, 968.0], [63.9, 968.0], [64.0, 968.0], [64.1, 969.0], [64.2, 969.0], [64.3, 969.0], [64.4, 969.0], [64.5, 969.0], [64.6, 972.0], [64.7, 972.0], [64.8, 972.0], [64.9, 972.0], [65.0, 972.0], [65.1, 974.0], [65.2, 974.0], [65.3, 974.0], [65.4, 974.0], [65.5, 974.0], [65.6, 984.0], [65.7, 984.0], [65.8, 984.0], [65.9, 984.0], [66.0, 984.0], [66.1, 985.0], [66.2, 985.0], [66.3, 985.0], [66.4, 985.0], [66.5, 985.0], [66.6, 994.0], [66.7, 994.0], [66.8, 994.0], [66.9, 994.0], [67.0, 1008.0], [67.1, 1008.0], [67.2, 1008.0], [67.3, 1008.0], [67.4, 1008.0], [67.5, 1010.0], [67.6, 1010.0], [67.7, 1010.0], [67.8, 1010.0], [67.9, 1010.0], [68.0, 1012.0], [68.1, 1012.0], [68.2, 1012.0], [68.3, 1012.0], [68.4, 1012.0], [68.5, 1019.0], [68.6, 1019.0], [68.7, 1019.0], [68.8, 1019.0], [68.9, 1019.0], [69.0, 1028.0], [69.1, 1028.0], [69.2, 1028.0], [69.3, 1028.0], [69.4, 1028.0], [69.5, 1038.0], [69.6, 1038.0], [69.7, 1038.0], [69.8, 1038.0], [69.9, 1038.0], [70.0, 1039.0], [70.1, 1039.0], [70.2, 1039.0], [70.3, 1039.0], [70.4, 1044.0], [70.5, 1044.0], [70.6, 1044.0], [70.7, 1044.0], [70.8, 1044.0], [70.9, 1045.0], [71.0, 1045.0], [71.1, 1045.0], [71.2, 1045.0], [71.3, 1045.0], [71.4, 1047.0], [71.5, 1047.0], [71.6, 1047.0], [71.7, 1047.0], [71.8, 1047.0], [71.9, 1052.0], [72.0, 1052.0], [72.1, 1052.0], [72.2, 1052.0], [72.3, 1052.0], [72.4, 1056.0], [72.5, 1056.0], [72.6, 1056.0], [72.7, 1056.0], [72.8, 1056.0], [72.9, 1059.0], [73.0, 1059.0], [73.1, 1059.0], [73.2, 1059.0], [73.3, 1059.0], [73.4, 1065.0], [73.5, 1065.0], [73.6, 1065.0], [73.7, 1065.0], [73.8, 1072.0], [73.9, 1072.0], [74.0, 1072.0], [74.1, 1072.0], [74.2, 1072.0], [74.3, 1075.0], [74.4, 1075.0], [74.5, 1075.0], [74.6, 1075.0], [74.7, 1075.0], [74.8, 1089.0], [74.9, 1089.0], [75.0, 1089.0], [75.1, 1089.0], [75.2, 1089.0], [75.3, 1091.0], [75.4, 1091.0], [75.5, 1091.0], [75.6, 1091.0], [75.7, 1091.0], [75.8, 1146.0], [75.9, 1146.0], [76.0, 1146.0], [76.1, 1146.0], [76.2, 1146.0], [76.3, 1167.0], [76.4, 1167.0], [76.5, 1167.0], [76.6, 1167.0], [76.7, 1172.0], [76.8, 1172.0], [76.9, 1172.0], [77.0, 1172.0], [77.1, 1172.0], [77.2, 1180.0], [77.3, 1180.0], [77.4, 1180.0], [77.5, 1180.0], [77.6, 1180.0], [77.7, 1183.0], [77.8, 1183.0], [77.9, 1183.0], [78.0, 1183.0], [78.1, 1183.0], [78.2, 1210.0], [78.3, 1210.0], [78.4, 1210.0], [78.5, 1210.0], [78.6, 1210.0], [78.7, 1220.0], [78.8, 1220.0], [78.9, 1220.0], [79.0, 1220.0], [79.1, 1220.0], [79.2, 1267.0], [79.3, 1267.0], [79.4, 1267.0], [79.5, 1267.0], [79.6, 1267.0], [79.7, 1268.0], [79.8, 1268.0], [79.9, 1268.0], [80.0, 1268.0], [80.1, 1270.0], [80.2, 1270.0], [80.3, 1270.0], [80.4, 1270.0], [80.5, 1270.0], [80.6, 1277.0], [80.7, 1277.0], [80.8, 1277.0], [80.9, 1277.0], [81.0, 1277.0], [81.1, 1278.0], [81.2, 1278.0], [81.3, 1278.0], [81.4, 1278.0], [81.5, 1278.0], [81.6, 1306.0], [81.7, 1306.0], [81.8, 1306.0], [81.9, 1306.0], [82.0, 1306.0], [82.1, 1320.0], [82.2, 1320.0], [82.3, 1320.0], [82.4, 1320.0], [82.5, 1320.0], [82.6, 1324.0], [82.7, 1324.0], [82.8, 1324.0], [82.9, 1324.0], [83.0, 1324.0], [83.1, 1324.0], [83.2, 1324.0], [83.3, 1324.0], [83.4, 1324.0], [83.5, 1398.0], [83.6, 1398.0], [83.7, 1398.0], [83.8, 1398.0], [83.9, 1398.0], [84.0, 1541.0], [84.1, 1541.0], [84.2, 1541.0], [84.3, 1541.0], [84.4, 1541.0], [84.5, 1551.0], [84.6, 1551.0], [84.7, 1551.0], [84.8, 1551.0], [84.9, 1551.0], [85.0, 1551.0], [85.1, 1551.0], [85.2, 1551.0], [85.3, 1551.0], [85.4, 1551.0], [85.5, 1607.0], [85.6, 1607.0], [85.7, 1607.0], [85.8, 1607.0], [85.9, 1607.0], [86.0, 1659.0], [86.1, 1659.0], [86.2, 1659.0], [86.3, 1659.0], [86.4, 1659.0], [86.5, 1723.0], [86.6, 1723.0], [86.7, 1723.0], [86.8, 1723.0], [86.9, 1728.0], [87.0, 1728.0], [87.1, 1728.0], [87.2, 1728.0], [87.3, 1728.0], [87.4, 1729.0], [87.5, 1729.0], [87.6, 1729.0], [87.7, 1729.0], [87.8, 1729.0], [87.9, 1733.0], [88.0, 1733.0], [88.1, 1733.0], [88.2, 1733.0], [88.3, 1733.0], [88.4, 1782.0], [88.5, 1782.0], [88.6, 1782.0], [88.7, 1782.0], [88.8, 1782.0], [88.9, 1827.0], [89.0, 1827.0], [89.1, 1827.0], [89.2, 1827.0], [89.3, 1827.0], [89.4, 1879.0], [89.5, 1879.0], [89.6, 1879.0], [89.7, 1879.0], [89.8, 1879.0], [89.9, 1927.0], [90.0, 1927.0], [90.1, 1927.0], [90.2, 1927.0], [90.3, 1931.0], [90.4, 1931.0], [90.5, 1931.0], [90.6, 1931.0], [90.7, 1931.0], [90.8, 1940.0], [90.9, 1940.0], [91.0, 1940.0], [91.1, 1940.0], [91.2, 1940.0], [91.3, 1941.0], [91.4, 1941.0], [91.5, 1941.0], [91.6, 1941.0], [91.7, 1941.0], [91.8, 2006.0], [91.9, 2006.0], [92.0, 2006.0], [92.1, 2006.0], [92.2, 2006.0], [92.3, 2026.0], [92.4, 2026.0], [92.5, 2026.0], [92.6, 2026.0], [92.7, 2026.0], [92.8, 2033.0], [92.9, 2033.0], [93.0, 2033.0], [93.1, 2033.0], [93.2, 2033.0], [93.3, 2040.0], [93.4, 2040.0], [93.5, 2040.0], [93.6, 2040.0], [93.7, 2051.0], [93.8, 2051.0], [93.9, 2051.0], [94.0, 2051.0], [94.1, 2051.0], [94.2, 2068.0], [94.3, 2068.0], [94.4, 2068.0], [94.5, 2068.0], [94.6, 2068.0], [94.7, 2096.0], [94.8, 2096.0], [94.9, 2096.0], [95.0, 2096.0], [95.1, 2096.0], [95.2, 2100.0], [95.3, 2100.0], [95.4, 2100.0], [95.5, 2100.0], [95.6, 2100.0], [95.7, 2100.0], [95.8, 2100.0], [95.9, 2100.0], [96.0, 2100.0], [96.1, 2100.0], [96.2, 2120.0], [96.3, 2120.0], [96.4, 2120.0], [96.5, 2120.0], [96.6, 2120.0], [96.7, 2127.0], [96.8, 2127.0], [96.9, 2127.0], [97.0, 2127.0], [97.1, 2135.0], [97.2, 2135.0], [97.3, 2135.0], [97.4, 2135.0], [97.5, 2135.0], [97.6, 2137.0], [97.7, 2137.0], [97.8, 2137.0], [97.9, 2137.0], [98.0, 2137.0], [98.1, 2189.0], [98.2, 2189.0], [98.3, 2189.0], [98.4, 2189.0], [98.5, 2189.0], [98.6, 3097.0], [98.7, 3097.0], [98.8, 3097.0], [98.9, 3097.0], [99.0, 3097.0], [99.1, 4193.0], [99.2, 4193.0], [99.3, 4193.0], [99.4, 4193.0], [99.5, 4193.0], [99.6, 4284.0], [99.7, 4284.0], [99.8, 4284.0], [99.9, 4284.0]], "isOverall": false, "label": "Modify User Infomation", "isController": true}, {"data": [[0.0, 363.0], [0.1, 363.0], [0.2, 363.0], [0.3, 363.0], [0.4, 462.0], [0.5, 462.0], [0.6, 462.0], [0.7, 550.0], [0.8, 550.0], [0.9, 550.0], [1.0, 556.0], [1.1, 556.0], [1.2, 556.0], [1.3, 556.0], [1.4, 561.0], [1.5, 561.0], [1.6, 561.0], [1.7, 1386.0], [1.8, 1386.0], [1.9, 1386.0], [2.0, 1485.0], [2.1, 1485.0], [2.2, 1485.0], [2.3, 1487.0], [2.4, 1487.0], [2.5, 1487.0], [2.6, 1487.0], [2.7, 1517.0], [2.8, 1517.0], [2.9, 1517.0], [3.0, 1585.0], [3.1, 1585.0], [3.2, 1585.0], [3.3, 1850.0], [3.4, 1850.0], [3.5, 1850.0], [3.6, 1915.0], [3.7, 1915.0], [3.8, 1915.0], [3.9, 1915.0], [4.0, 2037.0], [4.1, 2037.0], [4.2, 2037.0], [4.3, 2091.0], [4.4, 2091.0], [4.5, 2091.0], [4.6, 2489.0], [4.7, 2489.0], [4.8, 2489.0], [4.9, 2489.0], [5.0, 2634.0], [5.1, 2634.0], [5.2, 2634.0], [5.3, 3151.0], [5.4, 3151.0], [5.5, 3151.0], [5.6, 3267.0], [5.7, 3267.0], [5.8, 3267.0], [5.9, 3272.0], [6.0, 3272.0], [6.1, 3272.0], [6.2, 3272.0], [6.3, 3333.0], [6.4, 3333.0], [6.5, 3333.0], [6.6, 3343.0], [6.7, 3343.0], [6.8, 3343.0], [6.9, 3883.0], [7.0, 3883.0], [7.1, 3883.0], [7.2, 4129.0], [7.3, 4129.0], [7.4, 4129.0], [7.5, 4129.0], [7.6, 4136.0], [7.7, 4136.0], [7.8, 4136.0], [7.9, 4146.0], [8.0, 4146.0], [8.1, 4146.0], [8.2, 4238.0], [8.3, 4238.0], [8.4, 4238.0], [8.5, 4268.0], [8.6, 4268.0], [8.7, 4268.0], [8.8, 4268.0], [8.9, 4326.0], [9.0, 4326.0], [9.1, 4326.0], [9.2, 4346.0], [9.3, 4346.0], [9.4, 4346.0], [9.5, 4441.0], [9.6, 4441.0], [9.7, 4441.0], [9.8, 4441.0], [9.9, 4534.0], [10.0, 4534.0], [10.1, 4534.0], [10.2, 4567.0], [10.3, 4567.0], [10.4, 4567.0], [10.5, 4708.0], [10.6, 4708.0], [10.7, 4708.0], [10.8, 4744.0], [10.9, 4744.0], [11.0, 4744.0], [11.1, 4744.0], [11.2, 4811.0], [11.3, 4811.0], [11.4, 4811.0], [11.5, 4879.0], [11.6, 4879.0], [11.7, 4879.0], [11.8, 5070.0], [11.9, 5070.0], [12.0, 5070.0], [12.1, 5092.0], [12.2, 5092.0], [12.3, 5092.0], [12.4, 5092.0], [12.5, 5250.0], [12.6, 5250.0], [12.7, 5250.0], [12.8, 5264.0], [12.9, 5264.0], [13.0, 5264.0], [13.1, 5427.0], [13.2, 5427.0], [13.3, 5427.0], [13.4, 5503.0], [13.5, 5503.0], [13.6, 5503.0], [13.7, 5503.0], [13.8, 5595.0], [13.9, 5595.0], [14.0, 5595.0], [14.1, 5679.0], [14.2, 5679.0], [14.3, 5679.0], [14.4, 5734.0], [14.5, 5734.0], [14.6, 5734.0], [14.7, 5734.0], [14.8, 5756.0], [14.9, 5756.0], [15.0, 5756.0], [15.1, 5874.0], [15.2, 5874.0], [15.3, 5874.0], [15.4, 5888.0], [15.5, 5888.0], [15.6, 5888.0], [15.7, 6000.0], [15.8, 6000.0], [15.9, 6000.0], [16.0, 6000.0], [16.1, 6122.0], [16.2, 6122.0], [16.3, 6122.0], [16.4, 6323.0], [16.5, 6323.0], [16.6, 6323.0], [16.7, 6327.0], [16.8, 6327.0], [16.9, 6327.0], [17.0, 6369.0], [17.1, 6369.0], [17.2, 6369.0], [17.3, 6369.0], [17.4, 6564.0], [17.5, 6564.0], [17.6, 6564.0], [17.7, 6726.0], [17.8, 6726.0], [17.9, 6726.0], [18.0, 7029.0], [18.1, 7029.0], [18.2, 7029.0], [18.3, 7029.0], [18.4, 7054.0], [18.5, 7054.0], [18.6, 7054.0], [18.7, 7091.0], [18.8, 7091.0], [18.9, 7091.0], [19.0, 7115.0], [19.1, 7115.0], [19.2, 7115.0], [19.3, 7221.0], [19.4, 7221.0], [19.5, 7221.0], [19.6, 7221.0], [19.7, 7260.0], [19.8, 7260.0], [19.9, 7260.0], [20.0, 7276.0], [20.1, 7276.0], [20.2, 7276.0], [20.3, 7291.0], [20.4, 7291.0], [20.5, 7291.0], [20.6, 7312.0], [20.7, 7312.0], [20.8, 7312.0], [20.9, 7312.0], [21.0, 7313.0], [21.1, 7313.0], [21.2, 7313.0], [21.3, 7321.0], [21.4, 7321.0], [21.5, 7321.0], [21.6, 7344.0], [21.7, 7344.0], [21.8, 7344.0], [21.9, 7391.0], [22.0, 7391.0], [22.1, 7391.0], [22.2, 7391.0], [22.3, 7495.0], [22.4, 7495.0], [22.5, 7495.0], [22.6, 7533.0], [22.7, 7533.0], [22.8, 7533.0], [22.9, 7535.0], [23.0, 7535.0], [23.1, 7535.0], [23.2, 7535.0], [23.3, 7555.0], [23.4, 7555.0], [23.5, 7555.0], [23.6, 7567.0], [23.7, 7567.0], [23.8, 7567.0], [23.9, 7574.0], [24.0, 7574.0], [24.1, 7574.0], [24.2, 7575.0], [24.3, 7575.0], [24.4, 7575.0], [24.5, 7575.0], [24.6, 7577.0], [24.7, 7577.0], [24.8, 7577.0], [24.9, 7586.0], [25.0, 7586.0], [25.1, 7586.0], [25.2, 7591.0], [25.3, 7591.0], [25.4, 7591.0], [25.5, 7608.0], [25.6, 7608.0], [25.7, 7608.0], [25.8, 7608.0], [25.9, 7641.0], [26.0, 7641.0], [26.1, 7641.0], [26.2, 7645.0], [26.3, 7645.0], [26.4, 7645.0], [26.5, 7724.0], [26.6, 7724.0], [26.7, 7724.0], [26.8, 7733.0], [26.9, 7733.0], [27.0, 7733.0], [27.1, 7733.0], [27.2, 7733.0], [27.3, 7733.0], [27.4, 7733.0], [27.5, 7740.0], [27.6, 7740.0], [27.7, 7740.0], [27.8, 7772.0], [27.9, 7772.0], [28.0, 7772.0], [28.1, 7772.0], [28.2, 7802.0], [28.3, 7802.0], [28.4, 7802.0], [28.5, 7845.0], [28.6, 7845.0], [28.7, 7845.0], [28.8, 7849.0], [28.9, 7849.0], [29.0, 7849.0], [29.1, 7886.0], [29.2, 7886.0], [29.3, 7886.0], [29.4, 7886.0], [29.5, 7902.0], [29.6, 7902.0], [29.7, 7902.0], [29.8, 7907.0], [29.9, 7907.0], [30.0, 7907.0], [30.1, 7923.0], [30.2, 7923.0], [30.3, 7923.0], [30.4, 7962.0], [30.5, 7962.0], [30.6, 7962.0], [30.7, 7962.0], [30.8, 7995.0], [30.9, 7995.0], [31.0, 7995.0], [31.1, 7995.0], [31.2, 7995.0], [31.3, 7995.0], [31.4, 7998.0], [31.5, 7998.0], [31.6, 7998.0], [31.7, 8003.0], [31.8, 8003.0], [31.9, 8003.0], [32.0, 8003.0], [32.1, 8009.0], [32.2, 8009.0], [32.3, 8009.0], [32.4, 8018.0], [32.5, 8018.0], [32.6, 8018.0], [32.7, 8028.0], [32.8, 8028.0], [32.9, 8028.0], [33.0, 8028.0], [33.1, 8073.0], [33.2, 8073.0], [33.3, 8073.0], [33.4, 8087.0], [33.5, 8087.0], [33.6, 8087.0], [33.7, 8088.0], [33.8, 8088.0], [33.9, 8088.0], [34.0, 8099.0], [34.1, 8099.0], [34.2, 8099.0], [34.3, 8099.0], [34.4, 8121.0], [34.5, 8121.0], [34.6, 8121.0], [34.7, 8122.0], [34.8, 8122.0], [34.9, 8122.0], [35.0, 8125.0], [35.1, 8125.0], [35.2, 8125.0], [35.3, 8162.0], [35.4, 8162.0], [35.5, 8162.0], [35.6, 8162.0], [35.7, 8166.0], [35.8, 8166.0], [35.9, 8166.0], [36.0, 8169.0], [36.1, 8169.0], [36.2, 8169.0], [36.3, 8170.0], [36.4, 8170.0], [36.5, 8170.0], [36.6, 8170.0], [36.7, 8178.0], [36.8, 8178.0], [36.9, 8178.0], [37.0, 8197.0], [37.1, 8197.0], [37.2, 8197.0], [37.3, 8201.0], [37.4, 8201.0], [37.5, 8201.0], [37.6, 8221.0], [37.7, 8221.0], [37.8, 8221.0], [37.9, 8221.0], [38.0, 8231.0], [38.1, 8231.0], [38.2, 8231.0], [38.3, 8247.0], [38.4, 8247.0], [38.5, 8247.0], [38.6, 8265.0], [38.7, 8265.0], [38.8, 8265.0], [38.9, 8265.0], [39.0, 8265.0], [39.1, 8265.0], [39.2, 8265.0], [39.3, 8287.0], [39.4, 8287.0], [39.5, 8287.0], [39.6, 8287.0], [39.7, 8287.0], [39.8, 8287.0], [39.9, 8308.0], [40.0, 8308.0], [40.1, 8308.0], [40.2, 8327.0], [40.3, 8327.0], [40.4, 8327.0], [40.5, 8327.0], [40.6, 8340.0], [40.7, 8340.0], [40.8, 8340.0], [40.9, 8340.0], [41.0, 8340.0], [41.1, 8340.0], [41.2, 8346.0], [41.3, 8346.0], [41.4, 8346.0], [41.5, 8346.0], [41.6, 8355.0], [41.7, 8355.0], [41.8, 8355.0], [41.9, 8357.0], [42.0, 8357.0], [42.1, 8357.0], [42.2, 8365.0], [42.3, 8365.0], [42.4, 8365.0], [42.5, 8373.0], [42.6, 8373.0], [42.7, 8373.0], [42.8, 8373.0], [42.9, 8389.0], [43.0, 8389.0], [43.1, 8389.0], [43.2, 8389.0], [43.3, 8389.0], [43.4, 8389.0], [43.5, 8400.0], [43.6, 8400.0], [43.7, 8400.0], [43.8, 8417.0], [43.9, 8417.0], [44.0, 8417.0], [44.1, 8417.0], [44.2, 8442.0], [44.3, 8442.0], [44.4, 8442.0], [44.5, 8475.0], [44.6, 8475.0], [44.7, 8475.0], [44.8, 8481.0], [44.9, 8481.0], [45.0, 8481.0], [45.1, 8493.0], [45.2, 8493.0], [45.3, 8493.0], [45.4, 8493.0], [45.5, 8495.0], [45.6, 8495.0], [45.7, 8495.0], [45.8, 8520.0], [45.9, 8520.0], [46.0, 8520.0], [46.1, 8524.0], [46.2, 8524.0], [46.3, 8524.0], [46.4, 8524.0], [46.5, 8537.0], [46.6, 8537.0], [46.7, 8537.0], [46.8, 8557.0], [46.9, 8557.0], [47.0, 8557.0], [47.1, 8559.0], [47.2, 8559.0], [47.3, 8559.0], [47.4, 8560.0], [47.5, 8560.0], [47.6, 8560.0], [47.7, 8560.0], [47.8, 8566.0], [47.9, 8566.0], [48.0, 8566.0], [48.1, 8590.0], [48.2, 8590.0], [48.3, 8590.0], [48.4, 8621.0], [48.5, 8621.0], [48.6, 8621.0], [48.7, 8637.0], [48.8, 8637.0], [48.9, 8637.0], [49.0, 8637.0], [49.1, 8647.0], [49.2, 8647.0], [49.3, 8647.0], [49.4, 8649.0], [49.5, 8649.0], [49.6, 8649.0], [49.7, 8650.0], [49.8, 8650.0], [49.9, 8650.0], [50.0, 8651.0], [50.1, 8651.0], [50.2, 8651.0], [50.3, 8651.0], [50.4, 8651.0], [50.5, 8651.0], [50.6, 8651.0], [50.7, 8674.0], [50.8, 8674.0], [50.9, 8674.0], [51.0, 8680.0], [51.1, 8680.0], [51.2, 8680.0], [51.3, 8680.0], [51.4, 8688.0], [51.5, 8688.0], [51.6, 8688.0], [51.7, 8688.0], [51.8, 8688.0], [51.9, 8688.0], [52.0, 8691.0], [52.1, 8691.0], [52.2, 8691.0], [52.3, 8697.0], [52.4, 8697.0], [52.5, 8697.0], [52.6, 8697.0], [52.7, 8706.0], [52.8, 8706.0], [52.9, 8706.0], [53.0, 8709.0], [53.1, 8709.0], [53.2, 8709.0], [53.3, 8715.0], [53.4, 8715.0], [53.5, 8715.0], [53.6, 8721.0], [53.7, 8721.0], [53.8, 8721.0], [53.9, 8721.0], [54.0, 8721.0], [54.1, 8721.0], [54.2, 8721.0], [54.3, 8726.0], [54.4, 8726.0], [54.5, 8726.0], [54.6, 8727.0], [54.7, 8727.0], [54.8, 8727.0], [54.9, 8727.0], [55.0, 8740.0], [55.1, 8740.0], [55.2, 8740.0], [55.3, 8740.0], [55.4, 8740.0], [55.5, 8740.0], [55.6, 8742.0], [55.7, 8742.0], [55.8, 8742.0], [55.9, 8752.0], [56.0, 8752.0], [56.1, 8752.0], [56.2, 8752.0], [56.3, 8757.0], [56.4, 8757.0], [56.5, 8757.0], [56.6, 8767.0], [56.7, 8767.0], [56.8, 8767.0], [56.9, 8770.0], [57.0, 8770.0], [57.1, 8770.0], [57.2, 8780.0], [57.3, 8780.0], [57.4, 8780.0], [57.5, 8780.0], [57.6, 8782.0], [57.7, 8782.0], [57.8, 8782.0], [57.9, 8790.0], [58.0, 8790.0], [58.1, 8790.0], [58.2, 8793.0], [58.3, 8793.0], [58.4, 8793.0], [58.5, 8805.0], [58.6, 8805.0], [58.7, 8805.0], [58.8, 8805.0], [58.9, 8806.0], [59.0, 8806.0], [59.1, 8806.0], [59.2, 8814.0], [59.3, 8814.0], [59.4, 8814.0], [59.5, 8817.0], [59.6, 8817.0], [59.7, 8817.0], [59.8, 8817.0], [59.9, 8818.0], [60.0, 8818.0], [60.1, 8818.0], [60.2, 8819.0], [60.3, 8819.0], [60.4, 8819.0], [60.5, 8831.0], [60.6, 8831.0], [60.7, 8831.0], [60.8, 8840.0], [60.9, 8840.0], [61.0, 8840.0], [61.1, 8840.0], [61.2, 8872.0], [61.3, 8872.0], [61.4, 8872.0], [61.5, 8883.0], [61.6, 8883.0], [61.7, 8883.0], [61.8, 8884.0], [61.9, 8884.0], [62.0, 8884.0], [62.1, 8884.0], [62.2, 8884.0], [62.3, 8884.0], [62.4, 8884.0], [62.5, 8898.0], [62.6, 8898.0], [62.7, 8898.0], [62.8, 8902.0], [62.9, 8902.0], [63.0, 8902.0], [63.1, 8906.0], [63.2, 8906.0], [63.3, 8906.0], [63.4, 8916.0], [63.5, 8916.0], [63.6, 8916.0], [63.7, 8916.0], [63.8, 8916.0], [63.9, 8916.0], [64.0, 8916.0], [64.1, 8948.0], [64.2, 8948.0], [64.3, 8948.0], [64.4, 8964.0], [64.5, 8964.0], [64.6, 8964.0], [64.7, 8964.0], [64.8, 8968.0], [64.9, 8968.0], [65.0, 8968.0], [65.1, 9000.0], [65.2, 9000.0], [65.3, 9000.0], [65.4, 9011.0], [65.5, 9011.0], [65.6, 9011.0], [65.7, 9021.0], [65.8, 9021.0], [65.9, 9021.0], [66.0, 9021.0], [66.1, 9028.0], [66.2, 9028.0], [66.3, 9028.0], [66.4, 9059.0], [66.5, 9059.0], [66.6, 9059.0], [66.7, 9075.0], [66.8, 9075.0], [66.9, 9075.0], [67.0, 9076.0], [67.1, 9076.0], [67.2, 9076.0], [67.3, 9076.0], [67.4, 9083.0], [67.5, 9083.0], [67.6, 9083.0], [67.7, 9097.0], [67.8, 9097.0], [67.9, 9097.0], [68.0, 9119.0], [68.1, 9119.0], [68.2, 9119.0], [68.3, 9119.0], [68.4, 9119.0], [68.5, 9119.0], [68.6, 9119.0], [68.7, 9127.0], [68.8, 9127.0], [68.9, 9127.0], [69.0, 9151.0], [69.1, 9151.0], [69.2, 9151.0], [69.3, 9164.0], [69.4, 9164.0], [69.5, 9164.0], [69.6, 9164.0], [69.7, 9167.0], [69.8, 9167.0], [69.9, 9167.0], [70.0, 9175.0], [70.1, 9175.0], [70.2, 9175.0], [70.3, 9189.0], [70.4, 9189.0], [70.5, 9189.0], [70.6, 9192.0], [70.7, 9192.0], [70.8, 9192.0], [70.9, 9192.0], [71.0, 9198.0], [71.1, 9198.0], [71.2, 9198.0], [71.3, 9213.0], [71.4, 9213.0], [71.5, 9213.0], [71.6, 9214.0], [71.7, 9214.0], [71.8, 9214.0], [71.9, 9230.0], [72.0, 9230.0], [72.1, 9230.0], [72.2, 9230.0], [72.3, 9247.0], [72.4, 9247.0], [72.5, 9247.0], [72.6, 9248.0], [72.7, 9248.0], [72.8, 9248.0], [72.9, 9305.0], [73.0, 9305.0], [73.1, 9305.0], [73.2, 9305.0], [73.3, 9328.0], [73.4, 9328.0], [73.5, 9328.0], [73.6, 9342.0], [73.7, 9342.0], [73.8, 9342.0], [73.9, 9356.0], [74.0, 9356.0], [74.1, 9356.0], [74.2, 9388.0], [74.3, 9388.0], [74.4, 9388.0], [74.5, 9388.0], [74.6, 9392.0], [74.7, 9392.0], [74.8, 9392.0], [74.9, 9419.0], [75.0, 9419.0], [75.1, 9419.0], [75.2, 9422.0], [75.3, 9422.0], [75.4, 9422.0], [75.5, 9424.0], [75.6, 9424.0], [75.7, 9424.0], [75.8, 9424.0], [75.9, 9425.0], [76.0, 9425.0], [76.1, 9425.0], [76.2, 9425.0], [76.3, 9425.0], [76.4, 9425.0], [76.5, 9427.0], [76.6, 9427.0], [76.7, 9427.0], [76.8, 9433.0], [76.9, 9433.0], [77.0, 9433.0], [77.1, 9433.0], [77.2, 9434.0], [77.3, 9434.0], [77.4, 9434.0], [77.5, 9435.0], [77.6, 9435.0], [77.7, 9435.0], [77.8, 9444.0], [77.9, 9444.0], [78.0, 9444.0], [78.1, 9444.0], [78.2, 9454.0], [78.3, 9454.0], [78.4, 9454.0], [78.5, 9461.0], [78.6, 9461.0], [78.7, 9461.0], [78.8, 9466.0], [78.9, 9466.0], [79.0, 9466.0], [79.1, 9513.0], [79.2, 9513.0], [79.3, 9513.0], [79.4, 9513.0], [79.5, 9530.0], [79.6, 9530.0], [79.7, 9530.0], [79.8, 9571.0], [79.9, 9571.0], [80.0, 9571.0], [80.1, 9571.0], [80.2, 9571.0], [80.3, 9571.0], [80.4, 9573.0], [80.5, 9573.0], [80.6, 9573.0], [80.7, 9573.0], [80.8, 9591.0], [80.9, 9591.0], [81.0, 9591.0], [81.1, 9593.0], [81.2, 9593.0], [81.3, 9593.0], [81.4, 9623.0], [81.5, 9623.0], [81.6, 9623.0], [81.7, 9633.0], [81.8, 9633.0], [81.9, 9633.0], [82.0, 9633.0], [82.1, 9634.0], [82.2, 9634.0], [82.3, 9634.0], [82.4, 9635.0], [82.5, 9635.0], [82.6, 9635.0], [82.7, 9640.0], [82.8, 9640.0], [82.9, 9640.0], [83.0, 9640.0], [83.1, 9661.0], [83.2, 9661.0], [83.3, 9661.0], [83.4, 9667.0], [83.5, 9667.0], [83.6, 9667.0], [83.7, 9693.0], [83.8, 9693.0], [83.9, 9693.0], [84.0, 9707.0], [84.1, 9707.0], [84.2, 9707.0], [84.3, 9707.0], [84.4, 9710.0], [84.5, 9710.0], [84.6, 9710.0], [84.7, 9716.0], [84.8, 9716.0], [84.9, 9716.0], [85.0, 9729.0], [85.1, 9729.0], [85.2, 9729.0], [85.3, 9742.0], [85.4, 9742.0], [85.5, 9742.0], [85.6, 9742.0], [85.7, 9742.0], [85.8, 9742.0], [85.9, 9742.0], [86.0, 9748.0], [86.1, 9748.0], [86.2, 9748.0], [86.3, 9771.0], [86.4, 9771.0], [86.5, 9771.0], [86.6, 9771.0], [86.7, 9772.0], [86.8, 9772.0], [86.9, 9772.0], [87.0, 9790.0], [87.1, 9790.0], [87.2, 9790.0], [87.3, 9807.0], [87.4, 9807.0], [87.5, 9807.0], [87.6, 9832.0], [87.7, 9832.0], [87.8, 9832.0], [87.9, 9832.0], [88.0, 9834.0], [88.1, 9834.0], [88.2, 9834.0], [88.3, 9847.0], [88.4, 9847.0], [88.5, 9847.0], [88.6, 9853.0], [88.7, 9853.0], [88.8, 9853.0], [88.9, 9875.0], [89.0, 9875.0], [89.1, 9875.0], [89.2, 9875.0], [89.3, 9888.0], [89.4, 9888.0], [89.5, 9888.0], [89.6, 9908.0], [89.7, 9908.0], [89.8, 9908.0], [89.9, 9923.0], [90.0, 9923.0], [90.1, 9923.0], [90.2, 9958.0], [90.3, 9958.0], [90.4, 9958.0], [90.5, 9958.0], [90.6, 9976.0], [90.7, 9976.0], [90.8, 9976.0], [90.9, 9981.0], [91.0, 9981.0], [91.1, 9981.0], [91.2, 10012.0], [91.3, 10012.0], [91.4, 10012.0], [91.5, 10012.0], [91.6, 10098.0], [91.7, 10098.0], [91.8, 10098.0], [91.9, 10109.0], [92.0, 10109.0], [92.1, 10109.0], [92.2, 10121.0], [92.3, 10121.0], [92.4, 10121.0], [92.5, 10144.0], [92.6, 10144.0], [92.7, 10144.0], [92.8, 10144.0], [92.9, 10189.0], [93.0, 10189.0], [93.1, 10189.0], [93.2, 10214.0], [93.3, 10214.0], [93.4, 10214.0], [93.5, 10249.0], [93.6, 10249.0], [93.7, 10249.0], [93.8, 10348.0], [93.9, 10348.0], [94.0, 10348.0], [94.1, 10348.0], [94.2, 10377.0], [94.3, 10377.0], [94.4, 10377.0], [94.5, 10380.0], [94.6, 10380.0], [94.7, 10380.0], [94.8, 10391.0], [94.9, 10391.0], [95.0, 10391.0], [95.1, 10473.0], [95.2, 10473.0], [95.3, 10473.0], [95.4, 10473.0], [95.5, 10476.0], [95.6, 10476.0], [95.7, 10476.0], [95.8, 10635.0], [95.9, 10635.0], [96.0, 10635.0], [96.1, 10694.0], [96.2, 10694.0], [96.3, 10694.0], [96.4, 10694.0], [96.5, 10768.0], [96.6, 10768.0], [96.7, 10768.0], [96.8, 10822.0], [96.9, 10822.0], [97.0, 10822.0], [97.1, 10880.0], [97.2, 10880.0], [97.3, 10880.0], [97.4, 10968.0], [97.5, 10968.0], [97.6, 10968.0], [97.7, 10968.0], [97.8, 11028.0], [97.9, 11028.0], [98.0, 11028.0], [98.1, 11111.0], [98.2, 11111.0], [98.3, 11111.0], [98.4, 11114.0], [98.5, 11114.0], [98.6, 11114.0], [98.7, 11118.0], [98.8, 11118.0], [98.9, 11118.0], [99.0, 11118.0], [99.1, 11423.0], [99.2, 11423.0], [99.3, 11423.0], [99.4, 11837.0], [99.5, 11837.0], [99.6, 11837.0], [99.7, 12226.0], [99.8, 12226.0], [99.9, 12226.0], [100.0, 12226.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 5732.0], [0.1, 5732.0], [0.2, 5732.0], [0.3, 5732.0], [0.4, 5733.0], [0.5, 5733.0], [0.6, 5733.0], [0.7, 5733.0], [0.8, 5833.0], [0.9, 5833.0], [1.0, 5833.0], [1.1, 5833.0], [1.2, 5848.0], [1.3, 5848.0], [1.4, 5848.0], [1.5, 5848.0], [1.6, 5849.0], [1.7, 5849.0], [1.8, 5849.0], [1.9, 6464.0], [2.0, 6464.0], [2.1, 6464.0], [2.2, 6464.0], [2.3, 6735.0], [2.4, 6735.0], [2.5, 6735.0], [2.6, 6735.0], [2.7, 8025.0], [2.8, 8025.0], [2.9, 8025.0], [3.0, 8025.0], [3.1, 9347.0], [3.2, 9347.0], [3.3, 9347.0], [3.4, 9347.0], [3.5, 9432.0], [3.6, 9432.0], [3.7, 9432.0], [3.8, 9551.0], [3.9, 9551.0], [4.0, 9551.0], [4.1, 9551.0], [4.2, 9557.0], [4.3, 9557.0], [4.4, 9557.0], [4.5, 9557.0], [4.6, 9791.0], [4.7, 9791.0], [4.8, 9791.0], [4.9, 9791.0], [5.0, 9989.0], [5.1, 9989.0], [5.2, 9989.0], [5.3, 9989.0], [5.4, 10205.0], [5.5, 10205.0], [5.6, 10205.0], [5.7, 10253.0], [5.8, 10253.0], [5.9, 10253.0], [6.0, 10253.0], [6.1, 10719.0], [6.2, 10719.0], [6.3, 10719.0], [6.4, 10719.0], [6.5, 10719.0], [6.6, 10719.0], [6.7, 10719.0], [6.8, 10719.0], [6.9, 10879.0], [7.0, 10879.0], [7.1, 10879.0], [7.2, 11039.0], [7.3, 11039.0], [7.4, 11039.0], [7.5, 11039.0], [7.6, 11069.0], [7.7, 11069.0], [7.8, 11069.0], [7.9, 11069.0], [8.0, 11306.0], [8.1, 11306.0], [8.2, 11306.0], [8.3, 11306.0], [8.4, 11374.0], [8.5, 11374.0], [8.6, 11374.0], [8.7, 11374.0], [8.8, 11396.0], [8.9, 11396.0], [9.0, 11396.0], [9.1, 11398.0], [9.2, 11398.0], [9.3, 11398.0], [9.4, 11398.0], [9.5, 11465.0], [9.6, 11465.0], [9.7, 11465.0], [9.8, 11465.0], [9.9, 11470.0], [10.0, 11470.0], [10.1, 11470.0], [10.2, 11470.0], [10.3, 11483.0], [10.4, 11483.0], [10.5, 11483.0], [10.6, 11483.0], [10.7, 11534.0], [10.8, 11534.0], [10.9, 11534.0], [11.0, 11719.0], [11.1, 11719.0], [11.2, 11719.0], [11.3, 11719.0], [11.4, 11833.0], [11.5, 11833.0], [11.6, 11833.0], [11.7, 11833.0], [11.8, 12028.0], [11.9, 12028.0], [12.0, 12028.0], [12.1, 12028.0], [12.2, 12220.0], [12.3, 12220.0], [12.4, 12220.0], [12.5, 12220.0], [12.6, 12571.0], [12.7, 12571.0], [12.8, 12571.0], [12.9, 12634.0], [13.0, 12634.0], [13.1, 12634.0], [13.2, 12634.0], [13.3, 13107.0], [13.4, 13107.0], [13.5, 13107.0], [13.6, 13107.0], [13.7, 13126.0], [13.8, 13126.0], [13.9, 13126.0], [14.0, 13126.0], [14.1, 13162.0], [14.2, 13162.0], [14.3, 13162.0], [14.4, 13168.0], [14.5, 13168.0], [14.6, 13168.0], [14.7, 13168.0], [14.8, 13318.0], [14.9, 13318.0], [15.0, 13318.0], [15.1, 13318.0], [15.2, 13520.0], [15.3, 13520.0], [15.4, 13520.0], [15.5, 13520.0], [15.6, 13598.0], [15.7, 13598.0], [15.8, 13598.0], [15.9, 13598.0], [16.0, 13620.0], [16.1, 13620.0], [16.2, 13620.0], [16.3, 13915.0], [16.4, 13915.0], [16.5, 13915.0], [16.6, 13915.0], [16.7, 14008.0], [16.8, 14008.0], [16.9, 14008.0], [17.0, 14008.0], [17.1, 14088.0], [17.2, 14088.0], [17.3, 14088.0], [17.4, 14088.0], [17.5, 14111.0], [17.6, 14111.0], [17.7, 14111.0], [17.8, 14111.0], [17.9, 14131.0], [18.0, 14131.0], [18.1, 14131.0], [18.2, 14278.0], [18.3, 14278.0], [18.4, 14278.0], [18.5, 14278.0], [18.6, 14287.0], [18.7, 14287.0], [18.8, 14287.0], [18.9, 14287.0], [19.0, 14491.0], [19.1, 14491.0], [19.2, 14491.0], [19.3, 14491.0], [19.4, 14680.0], [19.5, 14680.0], [19.6, 14680.0], [19.7, 14759.0], [19.8, 14759.0], [19.9, 14759.0], [20.0, 14759.0], [20.1, 14990.0], [20.2, 14990.0], [20.3, 14990.0], [20.4, 14990.0], [20.5, 14991.0], [20.6, 14991.0], [20.7, 14991.0], [20.8, 14991.0], [20.9, 15485.0], [21.0, 15485.0], [21.1, 15485.0], [21.2, 15485.0], [21.3, 15727.0], [21.4, 15727.0], [21.5, 15727.0], [21.6, 15964.0], [21.7, 15964.0], [21.8, 15964.0], [21.9, 15964.0], [22.0, 16390.0], [22.1, 16390.0], [22.2, 16390.0], [22.3, 16390.0], [22.4, 16437.0], [22.5, 16437.0], [22.6, 16437.0], [22.7, 16437.0], [22.8, 16550.0], [22.9, 16550.0], [23.0, 16550.0], [23.1, 16550.0], [23.2, 16551.0], [23.3, 16551.0], [23.4, 16551.0], [23.5, 16753.0], [23.6, 16753.0], [23.7, 16753.0], [23.8, 16753.0], [23.9, 16774.0], [24.0, 16774.0], [24.1, 16774.0], [24.2, 16774.0], [24.3, 16779.0], [24.4, 16779.0], [24.5, 16779.0], [24.6, 16779.0], [24.7, 16808.0], [24.8, 16808.0], [24.9, 16808.0], [25.0, 16808.0], [25.1, 16899.0], [25.2, 16899.0], [25.3, 16899.0], [25.4, 16937.0], [25.5, 16937.0], [25.6, 16937.0], [25.7, 16937.0], [25.8, 17149.0], [25.9, 17149.0], [26.0, 17149.0], [26.1, 17149.0], [26.2, 17357.0], [26.3, 17357.0], [26.4, 17357.0], [26.5, 17357.0], [26.6, 17396.0], [26.7, 17396.0], [26.8, 17396.0], [26.9, 17399.0], [27.0, 17399.0], [27.1, 17399.0], [27.2, 17399.0], [27.3, 17433.0], [27.4, 17433.0], [27.5, 17433.0], [27.6, 17433.0], [27.7, 17440.0], [27.8, 17440.0], [27.9, 17440.0], [28.0, 17440.0], [28.1, 17440.0], [28.2, 17440.0], [28.3, 17440.0], [28.4, 17440.0], [28.5, 17512.0], [28.6, 17512.0], [28.7, 17512.0], [28.8, 17546.0], [28.9, 17546.0], [29.0, 17546.0], [29.1, 17546.0], [29.2, 17549.0], [29.3, 17549.0], [29.4, 17549.0], [29.5, 17549.0], [29.6, 17590.0], [29.7, 17590.0], [29.8, 17590.0], [29.9, 17590.0], [30.0, 17616.0], [30.1, 17616.0], [30.2, 17616.0], [30.3, 17616.0], [30.4, 17628.0], [30.5, 17628.0], [30.6, 17628.0], [30.7, 17647.0], [30.8, 17647.0], [30.9, 17647.0], [31.0, 17647.0], [31.1, 17696.0], [31.2, 17696.0], [31.3, 17696.0], [31.4, 17696.0], [31.5, 17706.0], [31.6, 17706.0], [31.7, 17706.0], [31.8, 17706.0], [31.9, 17735.0], [32.0, 17735.0], [32.1, 17735.0], [32.2, 17755.0], [32.3, 17755.0], [32.4, 17755.0], [32.5, 17755.0], [32.6, 17811.0], [32.7, 17811.0], [32.8, 17811.0], [32.9, 17811.0], [33.0, 17822.0], [33.1, 17822.0], [33.2, 17822.0], [33.3, 17822.0], [33.4, 17891.0], [33.5, 17891.0], [33.6, 17891.0], [33.7, 17891.0], [33.8, 17894.0], [33.9, 17894.0], [34.0, 17894.0], [34.1, 17896.0], [34.2, 17896.0], [34.3, 17896.0], [34.4, 17896.0], [34.5, 17910.0], [34.6, 17910.0], [34.7, 17910.0], [34.8, 17910.0], [34.9, 17952.0], [35.0, 17952.0], [35.1, 17952.0], [35.2, 17952.0], [35.3, 17971.0], [35.4, 17971.0], [35.5, 17971.0], [35.6, 17971.0], [35.7, 17973.0], [35.8, 17973.0], [35.9, 17973.0], [36.0, 18005.0], [36.1, 18005.0], [36.2, 18005.0], [36.3, 18005.0], [36.4, 18033.0], [36.5, 18033.0], [36.6, 18033.0], [36.7, 18033.0], [36.8, 18104.0], [36.9, 18104.0], [37.0, 18104.0], [37.1, 18104.0], [37.2, 18114.0], [37.3, 18114.0], [37.4, 18114.0], [37.5, 18162.0], [37.6, 18162.0], [37.7, 18162.0], [37.8, 18162.0], [37.9, 18189.0], [38.0, 18189.0], [38.1, 18189.0], [38.2, 18189.0], [38.3, 18206.0], [38.4, 18206.0], [38.5, 18206.0], [38.6, 18206.0], [38.7, 18250.0], [38.8, 18250.0], [38.9, 18250.0], [39.0, 18250.0], [39.1, 18307.0], [39.2, 18307.0], [39.3, 18307.0], [39.4, 18329.0], [39.5, 18329.0], [39.6, 18329.0], [39.7, 18329.0], [39.8, 18347.0], [39.9, 18347.0], [40.0, 18347.0], [40.1, 18347.0], [40.2, 18395.0], [40.3, 18395.0], [40.4, 18395.0], [40.5, 18395.0], [40.6, 18401.0], [40.7, 18401.0], [40.8, 18401.0], [40.9, 18401.0], [41.0, 18415.0], [41.1, 18415.0], [41.2, 18415.0], [41.3, 18418.0], [41.4, 18418.0], [41.5, 18418.0], [41.6, 18418.0], [41.7, 18479.0], [41.8, 18479.0], [41.9, 18479.0], [42.0, 18479.0], [42.1, 18489.0], [42.2, 18489.0], [42.3, 18489.0], [42.4, 18489.0], [42.5, 18565.0], [42.6, 18565.0], [42.7, 18565.0], [42.8, 18565.0], [42.9, 18595.0], [43.0, 18595.0], [43.1, 18595.0], [43.2, 18600.0], [43.3, 18600.0], [43.4, 18600.0], [43.5, 18600.0], [43.6, 18650.0], [43.7, 18650.0], [43.8, 18650.0], [43.9, 18650.0], [44.0, 18673.0], [44.1, 18673.0], [44.2, 18673.0], [44.3, 18673.0], [44.4, 18677.0], [44.5, 18677.0], [44.6, 18677.0], [44.7, 18682.0], [44.8, 18682.0], [44.9, 18682.0], [45.0, 18682.0], [45.1, 18738.0], [45.2, 18738.0], [45.3, 18738.0], [45.4, 18738.0], [45.5, 18779.0], [45.6, 18779.0], [45.7, 18779.0], [45.8, 18779.0], [45.9, 18792.0], [46.0, 18792.0], [46.1, 18792.0], [46.2, 18792.0], [46.3, 18799.0], [46.4, 18799.0], [46.5, 18799.0], [46.6, 18806.0], [46.7, 18806.0], [46.8, 18806.0], [46.9, 18806.0], [47.0, 18824.0], [47.1, 18824.0], [47.2, 18824.0], [47.3, 18824.0], [47.4, 18826.0], [47.5, 18826.0], [47.6, 18826.0], [47.7, 18826.0], [47.8, 18859.0], [47.9, 18859.0], [48.0, 18859.0], [48.1, 18859.0], [48.2, 18877.0], [48.3, 18877.0], [48.4, 18877.0], [48.5, 18892.0], [48.6, 18892.0], [48.7, 18892.0], [48.8, 18892.0], [48.9, 18912.0], [49.0, 18912.0], [49.1, 18912.0], [49.2, 18912.0], [49.3, 18952.0], [49.4, 18952.0], [49.5, 18952.0], [49.6, 18952.0], [49.7, 18976.0], [49.8, 18976.0], [49.9, 18976.0], [50.0, 18987.0], [50.1, 18987.0], [50.2, 18987.0], [50.3, 18987.0], [50.4, 18989.0], [50.5, 18989.0], [50.6, 18989.0], [50.7, 18989.0], [50.8, 18994.0], [50.9, 18994.0], [51.0, 18994.0], [51.1, 18994.0], [51.2, 19002.0], [51.3, 19002.0], [51.4, 19002.0], [51.5, 19002.0], [51.6, 19009.0], [51.7, 19009.0], [51.8, 19009.0], [51.9, 19018.0], [52.0, 19018.0], [52.1, 19018.0], [52.2, 19018.0], [52.3, 19027.0], [52.4, 19027.0], [52.5, 19027.0], [52.6, 19027.0], [52.7, 19032.0], [52.8, 19032.0], [52.9, 19032.0], [53.0, 19032.0], [53.1, 19034.0], [53.2, 19034.0], [53.3, 19034.0], [53.4, 19034.0], [53.5, 19036.0], [53.6, 19036.0], [53.7, 19036.0], [53.8, 19038.0], [53.9, 19038.0], [54.0, 19038.0], [54.1, 19038.0], [54.2, 19043.0], [54.3, 19043.0], [54.4, 19043.0], [54.5, 19043.0], [54.6, 19068.0], [54.7, 19068.0], [54.8, 19068.0], [54.9, 19068.0], [55.0, 19092.0], [55.1, 19092.0], [55.2, 19092.0], [55.3, 19092.0], [55.4, 19099.0], [55.5, 19099.0], [55.6, 19099.0], [55.7, 19111.0], [55.8, 19111.0], [55.9, 19111.0], [56.0, 19111.0], [56.1, 19129.0], [56.2, 19129.0], [56.3, 19129.0], [56.4, 19129.0], [56.5, 19135.0], [56.6, 19135.0], [56.7, 19135.0], [56.8, 19135.0], [56.9, 19142.0], [57.0, 19142.0], [57.1, 19142.0], [57.2, 19163.0], [57.3, 19163.0], [57.4, 19163.0], [57.5, 19163.0], [57.6, 19176.0], [57.7, 19176.0], [57.8, 19176.0], [57.9, 19176.0], [58.0, 19192.0], [58.1, 19192.0], [58.2, 19192.0], [58.3, 19192.0], [58.4, 19194.0], [58.5, 19194.0], [58.6, 19194.0], [58.7, 19194.0], [58.8, 19227.0], [58.9, 19227.0], [59.0, 19227.0], [59.1, 19282.0], [59.2, 19282.0], [59.3, 19282.0], [59.4, 19282.0], [59.5, 19303.0], [59.6, 19303.0], [59.7, 19303.0], [59.8, 19303.0], [59.9, 19309.0], [60.0, 19309.0], [60.1, 19309.0], [60.2, 19309.0], [60.3, 19360.0], [60.4, 19360.0], [60.5, 19360.0], [60.6, 19360.0], [60.7, 19369.0], [60.8, 19369.0], [60.9, 19369.0], [61.0, 19396.0], [61.1, 19396.0], [61.2, 19396.0], [61.3, 19396.0], [61.4, 19425.0], [61.5, 19425.0], [61.6, 19425.0], [61.7, 19425.0], [61.8, 19435.0], [61.9, 19435.0], [62.0, 19435.0], [62.1, 19435.0], [62.2, 19441.0], [62.3, 19441.0], [62.4, 19441.0], [62.5, 19444.0], [62.6, 19444.0], [62.7, 19444.0], [62.8, 19444.0], [62.9, 19473.0], [63.0, 19473.0], [63.1, 19473.0], [63.2, 19473.0], [63.3, 19478.0], [63.4, 19478.0], [63.5, 19478.0], [63.6, 19478.0], [63.7, 19487.0], [63.8, 19487.0], [63.9, 19487.0], [64.0, 19487.0], [64.1, 19514.0], [64.2, 19514.0], [64.3, 19514.0], [64.4, 19519.0], [64.5, 19519.0], [64.6, 19519.0], [64.7, 19519.0], [64.8, 19525.0], [64.9, 19525.0], [65.0, 19525.0], [65.1, 19525.0], [65.2, 19530.0], [65.3, 19530.0], [65.4, 19530.0], [65.5, 19530.0], [65.6, 19530.0], [65.7, 19530.0], [65.8, 19530.0], [65.9, 19530.0], [66.0, 19530.0], [66.1, 19530.0], [66.2, 19530.0], [66.3, 19540.0], [66.4, 19540.0], [66.5, 19540.0], [66.6, 19540.0], [66.7, 19560.0], [66.8, 19560.0], [66.9, 19560.0], [67.0, 19560.0], [67.1, 19585.0], [67.2, 19585.0], [67.3, 19585.0], [67.4, 19585.0], [67.5, 19594.0], [67.6, 19594.0], [67.7, 19594.0], [67.8, 19594.0], [67.9, 19600.0], [68.0, 19600.0], [68.1, 19600.0], [68.2, 19640.0], [68.3, 19640.0], [68.4, 19640.0], [68.5, 19640.0], [68.6, 19642.0], [68.7, 19642.0], [68.8, 19642.0], [68.9, 19642.0], [69.0, 19664.0], [69.1, 19664.0], [69.2, 19664.0], [69.3, 19664.0], [69.4, 19688.0], [69.5, 19688.0], [69.6, 19688.0], [69.7, 19703.0], [69.8, 19703.0], [69.9, 19703.0], [70.0, 19703.0], [70.1, 19741.0], [70.2, 19741.0], [70.3, 19741.0], [70.4, 19741.0], [70.5, 19747.0], [70.6, 19747.0], [70.7, 19747.0], [70.8, 19747.0], [70.9, 19749.0], [71.0, 19749.0], [71.1, 19749.0], [71.2, 19749.0], [71.3, 19788.0], [71.4, 19788.0], [71.5, 19788.0], [71.6, 19793.0], [71.7, 19793.0], [71.8, 19793.0], [71.9, 19793.0], [72.0, 19852.0], [72.1, 19852.0], [72.2, 19852.0], [72.3, 19852.0], [72.4, 19853.0], [72.5, 19853.0], [72.6, 19853.0], [72.7, 19853.0], [72.8, 19882.0], [72.9, 19882.0], [73.0, 19882.0], [73.1, 19882.0], [73.2, 19886.0], [73.3, 19886.0], [73.4, 19886.0], [73.5, 19894.0], [73.6, 19894.0], [73.7, 19894.0], [73.8, 19894.0], [73.9, 19906.0], [74.0, 19906.0], [74.1, 19906.0], [74.2, 19906.0], [74.3, 19912.0], [74.4, 19912.0], [74.5, 19912.0], [74.6, 19912.0], [74.7, 19913.0], [74.8, 19913.0], [74.9, 19913.0], [75.0, 19937.0], [75.1, 19937.0], [75.2, 19937.0], [75.3, 19937.0], [75.4, 19957.0], [75.5, 19957.0], [75.6, 19957.0], [75.7, 19957.0], [75.8, 19979.0], [75.9, 19979.0], [76.0, 19979.0], [76.1, 19979.0], [76.2, 19985.0], [76.3, 19985.0], [76.4, 19985.0], [76.5, 19985.0], [76.6, 19985.0], [76.7, 19985.0], [76.8, 19985.0], [76.9, 19994.0], [77.0, 19994.0], [77.1, 19994.0], [77.2, 19994.0], [77.3, 20063.0], [77.4, 20063.0], [77.5, 20063.0], [77.6, 20063.0], [77.7, 20114.0], [77.8, 20114.0], [77.9, 20114.0], [78.0, 20114.0], [78.1, 20132.0], [78.2, 20132.0], [78.3, 20132.0], [78.4, 20132.0], [78.5, 20141.0], [78.6, 20141.0], [78.7, 20141.0], [78.8, 20173.0], [78.9, 20173.0], [79.0, 20173.0], [79.1, 20173.0], [79.2, 20194.0], [79.3, 20194.0], [79.4, 20194.0], [79.5, 20194.0], [79.6, 20197.0], [79.7, 20197.0], [79.8, 20197.0], [79.9, 20197.0], [80.0, 20213.0], [80.1, 20213.0], [80.2, 20213.0], [80.3, 20213.0], [80.4, 20230.0], [80.5, 20230.0], [80.6, 20230.0], [80.7, 20282.0], [80.8, 20282.0], [80.9, 20282.0], [81.0, 20282.0], [81.1, 20290.0], [81.2, 20290.0], [81.3, 20290.0], [81.4, 20290.0], [81.5, 20329.0], [81.6, 20329.0], [81.7, 20329.0], [81.8, 20329.0], [81.9, 20354.0], [82.0, 20354.0], [82.1, 20354.0], [82.2, 20356.0], [82.3, 20356.0], [82.4, 20356.0], [82.5, 20356.0], [82.6, 20368.0], [82.7, 20368.0], [82.8, 20368.0], [82.9, 20368.0], [83.0, 20410.0], [83.1, 20410.0], [83.2, 20410.0], [83.3, 20410.0], [83.4, 20437.0], [83.5, 20437.0], [83.6, 20437.0], [83.7, 20437.0], [83.8, 20504.0], [83.9, 20504.0], [84.0, 20504.0], [84.1, 20557.0], [84.2, 20557.0], [84.3, 20557.0], [84.4, 20557.0], [84.5, 20588.0], [84.6, 20588.0], [84.7, 20588.0], [84.8, 20588.0], [84.9, 20616.0], [85.0, 20616.0], [85.1, 20616.0], [85.2, 20616.0], [85.3, 20618.0], [85.4, 20618.0], [85.5, 20618.0], [85.6, 20618.0], [85.7, 20626.0], [85.8, 20626.0], [85.9, 20626.0], [86.0, 20634.0], [86.1, 20634.0], [86.2, 20634.0], [86.3, 20634.0], [86.4, 20716.0], [86.5, 20716.0], [86.6, 20716.0], [86.7, 20716.0], [86.8, 20746.0], [86.9, 20746.0], [87.0, 20746.0], [87.1, 20746.0], [87.2, 20753.0], [87.3, 20753.0], [87.4, 20753.0], [87.5, 20761.0], [87.6, 20761.0], [87.7, 20761.0], [87.8, 20761.0], [87.9, 20776.0], [88.0, 20776.0], [88.1, 20776.0], [88.2, 20776.0], [88.3, 20782.0], [88.4, 20782.0], [88.5, 20782.0], [88.6, 20782.0], [88.7, 20783.0], [88.8, 20783.0], [88.9, 20783.0], [89.0, 20783.0], [89.1, 20848.0], [89.2, 20848.0], [89.3, 20848.0], [89.4, 20848.0], [89.5, 20848.0], [89.6, 20848.0], [89.7, 20848.0], [89.8, 20857.0], [89.9, 20857.0], [90.0, 20857.0], [90.1, 20857.0], [90.2, 20869.0], [90.3, 20869.0], [90.4, 20869.0], [90.5, 20869.0], [90.6, 20871.0], [90.7, 20871.0], [90.8, 20871.0], [90.9, 20871.0], [91.0, 20894.0], [91.1, 20894.0], [91.2, 20894.0], [91.3, 20935.0], [91.4, 20935.0], [91.5, 20935.0], [91.6, 20935.0], [91.7, 20939.0], [91.8, 20939.0], [91.9, 20939.0], [92.0, 20939.0], [92.1, 20956.0], [92.2, 20956.0], [92.3, 20956.0], [92.4, 20956.0], [92.5, 20966.0], [92.6, 20966.0], [92.7, 20966.0], [92.8, 20966.0], [92.9, 21036.0], [93.0, 21036.0], [93.1, 21036.0], [93.2, 21247.0], [93.3, 21247.0], [93.4, 21247.0], [93.5, 21247.0], [93.6, 21271.0], [93.7, 21271.0], [93.8, 21271.0], [93.9, 21271.0], [94.0, 21301.0], [94.1, 21301.0], [94.2, 21301.0], [94.3, 21301.0], [94.4, 21344.0], [94.5, 21344.0], [94.6, 21344.0], [94.7, 21347.0], [94.8, 21347.0], [94.9, 21347.0], [95.0, 21347.0], [95.1, 21389.0], [95.2, 21389.0], [95.3, 21389.0], [95.4, 21389.0], [95.5, 21401.0], [95.6, 21401.0], [95.7, 21401.0], [95.8, 21401.0], [95.9, 21428.0], [96.0, 21428.0], [96.1, 21428.0], [96.2, 21428.0], [96.3, 21574.0], [96.4, 21574.0], [96.5, 21574.0], [96.6, 21668.0], [96.7, 21668.0], [96.8, 21668.0], [96.9, 21668.0], [97.0, 21697.0], [97.1, 21697.0], [97.2, 21697.0], [97.3, 21697.0], [97.4, 21840.0], [97.5, 21840.0], [97.6, 21840.0], [97.7, 21840.0], [97.8, 22055.0], [97.9, 22055.0], [98.0, 22055.0], [98.1, 22055.0], [98.2, 22074.0], [98.3, 22074.0], [98.4, 22074.0], [98.5, 22425.0], [98.6, 22425.0], [98.7, 22425.0], [98.8, 22425.0], [98.9, 22991.0], [99.0, 22991.0], [99.1, 22991.0], [99.2, 22991.0], [99.3, 23152.0], [99.4, 23152.0], [99.5, 23152.0], [99.6, 23152.0], [99.7, 23319.0], [99.8, 23319.0], [99.9, 23319.0]], "isOverall": false, "label": "Modify Password", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 50.0, "series": [{"data": [[2100.0, 7.0], [0.0, 3.0], [600.0, 24.0], [700.0, 7.0], [3000.0, 1.0], [800.0, 3.0], [200.0, 7.0], [900.0, 14.0], [1000.0, 18.0], [4100.0, 1.0], [4200.0, 1.0], [1100.0, 5.0], [1200.0, 7.0], [300.0, 14.0], [1300.0, 5.0], [1500.0, 3.0], [100.0, 50.0], [400.0, 12.0], [1600.0, 2.0], [1700.0, 5.0], [1800.0, 2.0], [1900.0, 4.0], [2000.0, 7.0], [500.0, 4.0]], "isOverall": false, "label": "Modify User Info", "isController": false}, {"data": [[2100.0, 7.0], [0.0, 3.0], [600.0, 24.0], [700.0, 7.0], [3000.0, 1.0], [800.0, 3.0], [200.0, 7.0], [900.0, 14.0], [1000.0, 18.0], [4100.0, 1.0], [4200.0, 1.0], [1100.0, 5.0], [1200.0, 7.0], [300.0, 14.0], [1300.0, 5.0], [1500.0, 3.0], [100.0, 50.0], [400.0, 12.0], [1600.0, 2.0], [1700.0, 5.0], [1800.0, 2.0], [1900.0, 4.0], [2000.0, 7.0], [500.0, 4.0]], "isOverall": false, "label": "Modify User Infomation", "isController": true}, {"data": [[1300.0, 2.0], [1400.0, 4.0], [1500.0, 4.0], [1800.0, 2.0], [1900.0, 2.0], [2000.0, 4.0], [2400.0, 2.0], [2600.0, 2.0], [3100.0, 2.0], [3300.0, 4.0], [3200.0, 4.0], [3800.0, 2.0], [4300.0, 4.0], [4100.0, 6.0], [4200.0, 4.0], [4400.0, 2.0], [4500.0, 4.0], [4700.0, 4.0], [4800.0, 4.0], [5000.0, 4.0], [5200.0, 4.0], [5500.0, 4.0], [5400.0, 2.0], [5600.0, 2.0], [5800.0, 4.0], [5700.0, 4.0], [6000.0, 2.0], [6100.0, 2.0], [6300.0, 6.0], [6500.0, 2.0], [6700.0, 2.0], [7000.0, 6.0], [7100.0, 2.0], [7200.0, 8.0], [7300.0, 10.0], [7400.0, 2.0], [7500.0, 18.0], [7600.0, 6.0], [7700.0, 10.0], [7900.0, 14.0], [7800.0, 8.0], [8000.0, 16.0], [8100.0, 18.0], [8200.0, 16.0], [8400.0, 14.0], [8700.0, 36.0], [8500.0, 16.0], [8600.0, 26.0], [8300.0, 22.0], [8800.0, 26.0], [9100.0, 20.0], [9200.0, 10.0], [9000.0, 18.0], [8900.0, 14.0], [9400.0, 26.0], [9700.0, 20.0], [9500.0, 14.0], [9600.0, 16.0], [9300.0, 12.0], [10000.0, 4.0], [9800.0, 14.0], [9900.0, 10.0], [10200.0, 4.0], [10100.0, 8.0], [10300.0, 8.0], [10400.0, 4.0], [10600.0, 4.0], [10700.0, 2.0], [10900.0, 2.0], [10800.0, 4.0], [11000.0, 2.0], [11100.0, 6.0], [11400.0, 2.0], [11800.0, 2.0], [12200.0, 2.0], [300.0, 2.0], [400.0, 2.0], [500.0, 6.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[5700.0, 4.0], [5800.0, 6.0], [6400.0, 2.0], [6700.0, 2.0], [8000.0, 2.0], [9400.0, 2.0], [9500.0, 4.0], [9700.0, 2.0], [9300.0, 2.0], [10200.0, 4.0], [9900.0, 2.0], [10700.0, 4.0], [11000.0, 4.0], [10800.0, 2.0], [11400.0, 6.0], [11300.0, 8.0], [11500.0, 2.0], [11700.0, 2.0], [12200.0, 2.0], [12000.0, 2.0], [11800.0, 2.0], [12600.0, 2.0], [12500.0, 2.0], [13100.0, 8.0], [13300.0, 2.0], [13500.0, 4.0], [13600.0, 2.0], [14200.0, 4.0], [14100.0, 4.0], [14000.0, 4.0], [13900.0, 2.0], [14600.0, 2.0], [14400.0, 2.0], [14700.0, 2.0], [14900.0, 4.0], [15400.0, 2.0], [15700.0, 2.0], [16300.0, 2.0], [15900.0, 2.0], [16700.0, 6.0], [16500.0, 4.0], [16800.0, 4.0], [17400.0, 6.0], [17300.0, 6.0], [16400.0, 2.0], [17100.0, 2.0], [16900.0, 2.0], [18300.0, 8.0], [18400.0, 10.0], [17800.0, 10.0], [17500.0, 8.0], [17600.0, 8.0], [18200.0, 4.0], [18100.0, 8.0], [18000.0, 4.0], [17700.0, 6.0], [17900.0, 8.0], [18600.0, 10.0], [19300.0, 10.0], [19100.0, 16.0], [19200.0, 4.0], [18700.0, 8.0], [19000.0, 24.0], [18500.0, 4.0], [18900.0, 12.0], [19400.0, 14.0], [18800.0, 12.0], [19700.0, 12.0], [20400.0, 4.0], [20100.0, 12.0], [20000.0, 2.0], [19900.0, 18.0], [20300.0, 8.0], [20200.0, 8.0], [19500.0, 20.0], [19800.0, 10.0], [19600.0, 10.0], [21300.0, 8.0], [21200.0, 4.0], [20700.0, 14.0], [20600.0, 8.0], [20900.0, 8.0], [21400.0, 4.0], [21500.0, 2.0], [20800.0, 12.0], [21000.0, 2.0], [20500.0, 6.0], [22400.0, 2.0], [21600.0, 4.0], [22000.0, 4.0], [21800.0, 2.0], [23300.0, 2.0], [22900.0, 2.0], [23100.0, 2.0]], "isOverall": false, "label": "Modify Password", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 23300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 88.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 595.0, "series": [{"data": [[0.0, 88.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 93.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 595.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 45.321839080459775, "minX": 1.57793718E12, "maxY": 99.8622950819672, "series": [{"data": [[1.5779373E12, 45.321839080459775], [1.57793718E12, 72.05063291139238], [1.57793724E12, 99.8622950819672]], "isOverall": false, "label": "User Infomation Manage Thread Group(\u4E2A\u4EBA\u4FE1\u606F\u7BA1\u7406)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5779373E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 498.40000000000003, "minX": 2.0, "maxY": 20063.0, "series": [{"data": [[72.0, 654.0], [76.0, 1010.0], [78.0, 1146.0], [87.0, 2051.0], [88.0, 2135.0], [100.0, 794.6368159203979]], "isOverall": false, "label": "Modify User Info", "isController": false}, {"data": [[99.5194174757281, 809.3106796116502]], "isOverall": false, "label": "Modify User Info-Aggregated", "isController": false}, {"data": [[72.0, 654.0], [76.0, 1010.0], [78.0, 1146.0], [87.0, 2051.0], [88.0, 2135.0], [100.0, 794.636815920398]], "isOverall": false, "label": "Modify User Infomation", "isController": true}, {"data": [[99.5194174757281, 809.3106796116504]], "isOverall": false, "label": "Modify User Infomation-Aggregated", "isController": true}, {"data": [[33.0, 2037.0], [34.0, 2091.0], [39.0, 2489.0], [42.0, 2634.0], [43.0, 9392.0], [45.0, 10144.0], [44.0, 10377.0], [50.0, 3253.6666666666665], [51.0, 8740.0], [52.0, 3272.0], [53.0, 8716.5], [54.0, 6537.5], [55.0, 9593.0], [57.0, 9356.0], [56.0, 9707.0], [61.0, 8849.666666666666], [64.0, 6415.5], [65.0, 4253.333333333333], [66.0, 4136.0], [67.0, 9834.0], [71.0, 4339.5], [74.0, 7223.5], [75.0, 4469.0], [73.0, 8524.0], [72.0, 9128.2], [78.0, 4567.0], [79.0, 4708.0], [76.0, 8537.0], [83.0, 7637.75], [80.0, 8995.0], [85.0, 4879.0], [86.0, 5092.0], [87.0, 8408.75], [91.0, 8709.0], [90.0, 7998.0], [89.0, 8073.0], [93.0, 7121.2], [94.0, 7312.0], [96.0, 5428.666666666666], [97.0, 6968.599999999999], [99.0, 7979.0], [100.0, 8789.198156682023], [8.0, 498.40000000000003], [20.0, 1487.0], [22.0, 1485.3333333333335], [25.0, 1517.0], [29.0, 1850.0], [31.0, 1915.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[89.99019607843138, 8011.833333333337]], "isOverall": false, "label": "Login-Aggregated", "isController": false}, {"data": [[2.0, 7380.0], [35.0, 14184.799999999997], [36.0, 14991.0], [38.0, 12866.5], [41.0, 13658.0], [42.0, 17896.0], [49.0, 17997.75], [3.0, 6464.0], [50.0, 16899.0], [61.0, 18114.0], [63.0, 17696.0], [62.0, 18005.0], [66.0, 10460.4], [67.0, 5848.5], [4.0, 10205.0], [75.0, 17910.0], [80.0, 17149.0], [89.0, 16437.0], [99.0, 20063.0], [98.0, 16551.0], [97.0, 19111.0], [100.0, 19136.069651741294], [15.0, 10599.18181818182], [16.0, 11398.0], [19.0, 10937.333333333334], [20.0, 9989.0], [21.0, 13318.0], [23.0, 12590.0], [24.0, 11039.0], [26.0, 12170.5], [28.0, 13352.5], [29.0, 14759.0], [30.0, 13620.0]], "isOverall": false, "label": "Modify Password", "isController": false}, {"data": [[85.27651515151516, 17658.992424242428]], "isOverall": false, "label": "Modify Password-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.57793718E12, "maxY": 6492.833333333333, "series": [{"data": [[1.5779373E12, 933.4666666666667], [1.57793718E12, 982.0833333333334], [1.57793724E12, 6492.833333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.5779373E12, 0.0], [1.57793718E12, 0.0], [1.57793724E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5779373E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 791.5959595959596, "minX": 1.57793718E12, "maxY": 19300.459999999985, "series": [{"data": [[1.57793718E12, 1247.75], [1.57793724E12, 791.5959595959596]], "isOverall": false, "label": "Modify User Info", "isController": false}, {"data": [[1.57793718E12, 1247.75], [1.57793724E12, 791.5959595959596]], "isOverall": false, "label": "Modify User Infomation", "isController": true}, {"data": [[1.5779373E12, 9060.545454545454], [1.57793718E12, 4316.803278688525], [1.57793724E12, 8911.78301886792]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.5779373E12, 13230.870370370372], [1.57793718E12, 8741.500000000002], [1.57793724E12, 19300.459999999985]], "isOverall": false, "label": "Modify Password", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5779373E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 791.0151515151515, "minX": 1.57793718E12, "maxY": 19298.11000000001, "series": [{"data": [[1.57793718E12, 1247.375], [1.57793724E12, 791.0151515151517]], "isOverall": false, "label": "Modify User Info", "isController": false}, {"data": [[1.57793718E12, 1247.375], [1.57793724E12, 791.0151515151515]], "isOverall": false, "label": "Modify User Infomation", "isController": true}, {"data": [[1.5779373E12, 8995.939393939392], [1.57793718E12, 4270.196721311476], [1.57793724E12, 8884.533018867933]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.5779373E12, 13229.796296296297], [1.57793718E12, 8741.300000000001], [1.57793724E12, 19298.11000000001]], "isOverall": false, "label": "Modify Password", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5779373E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.57793718E12, "maxY": 100.31313131313132, "series": [{"data": [[1.57793718E12, 45.625], [1.57793724E12, 100.31313131313131]], "isOverall": false, "label": "Modify User Info", "isController": false}, {"data": [[1.57793718E12, 45.625], [1.57793724E12, 100.31313131313132]], "isOverall": false, "label": "Modify User Infomation", "isController": true}, {"data": [[1.5779373E12, 46.696969696969695], [1.57793718E12, 77.16393442622952], [1.57793724E12, 72.04245283018867]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.5779373E12, 49.3888888888889], [1.57793718E12, 0.0], [1.57793724E12, 59.66000000000008]], "isOverall": false, "label": "Modify Password", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5779373E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 69.0, "minX": 1.57793718E12, "maxY": 23319.0, "series": [{"data": [[1.5779373E12, 18859.0], [1.57793718E12, 12220.0], [1.57793724E12, 23319.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.5779373E12, 6464.0], [1.57793718E12, 363.0], [1.57793724E12, 69.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.5779373E12, 17656.8], [1.57793718E12, 8201.0], [1.57793724E12, 19993.1]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.5779373E12, 18859.0], [1.57793718E12, 12220.0], [1.57793724E12, 22031.35]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.5779373E12, 17967.0], [1.57793718E12, 11396.0], [1.57793724E12, 20782.45]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5779373E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 615.0, "minX": 1.0, "maxY": 19501.5, "series": [{"data": [[2.0, 10117.0], [36.0, 11431.5], [41.0, 615.0], [3.0, 5756.0], [49.0, 8003.0], [4.0, 8857.0], [5.0, 3343.0], [6.0, 7886.0], [7.0, 8906.0], [8.0, 5345.5], [9.0, 7575.0], [10.0, 5840.5], [11.0, 6381.0], [12.0, 8721.0], [13.0, 9513.0], [14.0, 8765.0], [15.0, 8748.0], [1.0, 9797.5], [16.0, 9390.5], [17.0, 794.0], [21.0, 9299.5], [22.0, 19501.5], [23.0, 1931.0], [26.0, 1324.0], [31.0, 9213.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 49.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 615.0, "minX": 1.0, "maxY": 19496.0, "series": [{"data": [[2.0, 10117.0], [36.0, 11431.5], [41.0, 615.0], [3.0, 5679.0], [49.0, 7902.0], [4.0, 8856.0], [5.0, 3342.0], [6.0, 7518.5], [7.0, 8906.0], [8.0, 5256.5], [9.0, 7575.0], [10.0, 5840.5], [11.0, 6381.0], [12.0, 8721.0], [13.0, 9513.0], [14.0, 8765.0], [15.0, 8686.0], [1.0, 9797.5], [16.0, 9389.5], [17.0, 793.0], [21.0, 9163.0], [22.0, 19496.0], [23.0, 1931.0], [26.0, 1324.0], [31.0, 9213.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 49.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 2.9833333333333334, "minX": 1.57793718E12, "maxY": 9.95, "series": [{"data": [[1.57793718E12, 2.9833333333333334], [1.57793724E12, 9.95]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57793724E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.3166666666666667, "minX": 1.57793718E12, "maxY": 10.166666666666666, "series": [{"data": [[1.5779373E12, 1.45], [1.57793718E12, 1.3166666666666667], [1.57793724E12, 10.166666666666666]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5779373E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.57793718E12, "maxY": 7.066666666666666, "series": [{"data": [[1.5779373E12, 1.8], [1.57793718E12, 0.3333333333333333], [1.57793724E12, 6.666666666666667]], "isOverall": false, "label": "Modify Password-success", "isController": false}, {"data": [[1.57793718E12, 0.13333333333333333], [1.57793724E12, 3.3]], "isOverall": false, "label": "Modify User Infomation-success", "isController": true}, {"data": [[1.5779373E12, 1.1], [1.57793718E12, 2.033333333333333], [1.57793724E12, 7.066666666666666]], "isOverall": false, "label": "Login-success", "isController": false}, {"data": [[1.57793718E12, 0.13333333333333333], [1.57793724E12, 3.3]], "isOverall": false, "label": "Modify User Info-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5779373E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 2.6333333333333333, "minX": 1.57793718E12, "maxY": 20.333333333333332, "series": [{"data": [[1.5779373E12, 2.9], [1.57793718E12, 2.6333333333333333], [1.57793724E12, 20.333333333333332]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5779373E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

